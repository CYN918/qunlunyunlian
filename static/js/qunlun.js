/*!
 * jQuery Validation Plugin v1.14.0
 *
 * http://jqueryvalidation.org/
 *
 * Copyright (c) 2015 Jörn Zaefferer
 * Released under the MIT license
 */

(function( factory ) {
	if ( typeof define === "function" && define.amd ) {
		define( ["jquery"], factory );
	} else {
		factory( jQuery );
	}
}(function( $ ) {

$.extend($.fn, {
	// http://jqueryvalidation.org/validate/
	validate: function( options ) {

		// if nothing is selected, return nothing; can't chain anyway
		if ( !this.length ) {
			if ( options && options.debug && window.console ) {
				console.warn( "Nothing selected, can't validate, returning nothing." );
			}
			return;
		}

		// check if a validator for this form was already created
		var validator = $.data( this[ 0 ], "validator" );
		if ( validator ) {
			return validator;
		}

		// Add novalidate tag if HTML5.
		this.attr( "novalidate", "novalidate" );

		validator = new $.validator( options, this[ 0 ] );
		$.data( this[ 0 ], "validator", validator );

		if ( validator.settings.onsubmit ) {

			this.on( "click.validate", ":submit", function( event ) {
				if ( validator.settings.submitHandler ) {
					validator.submitButton = event.target;
				}

				// allow suppressing validation by adding a cancel class to the submit button
				if ( $( this ).hasClass( "cancel" ) ) {
					validator.cancelSubmit = true;
				}

				// allow suppressing validation by adding the html5 formnovalidate attribute to the submit button
				if ( $( this ).attr( "formnovalidate" ) !== undefined ) {
					validator.cancelSubmit = true;
				}
			});

			// validate the form on submit
			this.on( "submit.validate", function( event ) {
				if ( validator.settings.debug ) {
					// prevent form submit to be able to see console output
					event.preventDefault();
				}
				function handle() {
					var hidden, result;
					if ( validator.settings.submitHandler ) {
						if ( validator.submitButton ) {
							// insert a hidden input as a replacement for the missing submit button
							hidden = $( "<input type='hidden'/>" )
								.attr( "name", validator.submitButton.name )
								.val( $( validator.submitButton ).val() )
								.appendTo( validator.currentForm );
						}
						result = validator.settings.submitHandler.call( validator, validator.currentForm, event );
						if ( validator.submitButton ) {
							// and clean up afterwards; thanks to no-block-scope, hidden can be referenced
							hidden.remove();
						}
						if ( result !== undefined ) {
							return result;
						}
						return false;
					}
					return true;
				}

				// prevent submit for invalid forms or custom submit handlers
				if ( validator.cancelSubmit ) {
					validator.cancelSubmit = false;
					return handle();
				}
				if ( validator.form() ) {
					if ( validator.pendingRequest ) {
						validator.formSubmitted = true;
						return false;
					}
					return handle();
				} else {
					validator.focusInvalid();
					return false;
				}
			});
		}

		return validator;
	},
	// http://jqueryvalidation.org/valid/
	valid: function() {
		var valid, validator, errorList;

		if ( $( this[ 0 ] ).is( "form" ) ) {
			valid = this.validate().form();
		} else {
			errorList = [];
			valid = true;
			validator = $( this[ 0 ].form ).validate();
			this.each( function() {
				valid = validator.element( this ) && valid;
				errorList = errorList.concat( validator.errorList );
			});
			validator.errorList = errorList;
		}
		return valid;
	},

	// http://jqueryvalidation.org/rules/
	rules: function( command, argument ) {
		var element = this[ 0 ],
			settings, staticRules, existingRules, data, param, filtered;

		if ( command ) {
			settings = $.data( element.form, "validator" ).settings;
			staticRules = settings.rules;
			existingRules = $.validator.staticRules( element );
			switch ( command ) {
			case "add":
				$.extend( existingRules, $.validator.normalizeRule( argument ) );
				// remove messages from rules, but allow them to be set separately
				delete existingRules.messages;
				staticRules[ element.name ] = existingRules;
				if ( argument.messages ) {
					settings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );
				}
				break;
			case "remove":
				if ( !argument ) {
					delete staticRules[ element.name ];
					return existingRules;
				}
				filtered = {};
				$.each( argument.split( /\s/ ), function( index, method ) {
					filtered[ method ] = existingRules[ method ];
					delete existingRules[ method ];
					if ( method === "required" ) {
						$( element ).removeAttr( "aria-required" );
					}
				});
				return filtered;
			}
		}

		data = $.validator.normalizeRules(
		$.extend(
			{},
			$.validator.classRules( element ),
			$.validator.attributeRules( element ),
			$.validator.dataRules( element ),
			$.validator.staticRules( element )
		), element );

		// make sure required is at front
		if ( data.required ) {
			param = data.required;
			delete data.required;
			data = $.extend( { required: param }, data );
			$( element ).attr( "aria-required", "true" );
		}

		// make sure remote is at back
		if ( data.remote ) {
			param = data.remote;
			delete data.remote;
			data = $.extend( data, { remote: param });
		}

		return data;
	}
});

// Custom selectors
$.extend( $.expr[ ":" ], {
	// http://jqueryvalidation.org/blank-selector/
	blank: function( a ) {
		return !$.trim( "" + $( a ).val() );
	},
	// http://jqueryvalidation.org/filled-selector/
	filled: function( a ) {
		return !!$.trim( "" + $( a ).val() );
	},
	// http://jqueryvalidation.org/unchecked-selector/
	unchecked: function( a ) {
		return !$( a ).prop( "checked" );
	}
});

// constructor for validator
$.validator = function( options, form ) {
	this.settings = $.extend( true, {}, $.validator.defaults, options );
	this.currentForm = form;
	this.init();
};

// http://jqueryvalidation.org/jQuery.validator.format/
$.validator.format = function( source, params ) {
	if ( arguments.length === 1 ) {
		return function() {
			var args = $.makeArray( arguments );
			args.unshift( source );
			return $.validator.format.apply( this, args );
		};
	}
	if ( arguments.length > 2 && params.constructor !== Array  ) {
		params = $.makeArray( arguments ).slice( 1 );
	}
	if ( params.constructor !== Array ) {
		params = [ params ];
	}
	$.each( params, function( i, n ) {
		source = source.replace( new RegExp( "\\{" + i + "\\}", "g" ), function() {
			return n;
		});
	});
	return source;
};

$.extend( $.validator, {

	defaults: {
		messages: {},
		groups: {},
		rules: {},
		errorClass: "error",
		validClass: "valid",
		errorElement: "label",
		focusCleanup: false,
		focusInvalid: true,
		errorContainer: $( [] ),
		errorLabelContainer: $( [] ),
		onsubmit: true,
		ignore: ":hidden",
        // ignore: "", //不要忽略隐藏字段
        ignoreTitle: false,
		onfocusin: function( element ) {
			this.lastActive = element;

			// Hide error label and remove error class on focus if enabled
			if ( this.settings.focusCleanup ) {
				if ( this.settings.unhighlight ) {
					this.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );
				}
				this.hideThese( this.errorsFor( element ) );
			}
		},
		onfocusout: function( element ) {
			if ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {
				this.element( element );
			}
		},
		onkeyup: function( element, event ) {
			// Avoid revalidate the field when pressing one of the following keys
			// Shift       => 16
			// Ctrl        => 17
			// Alt         => 18
			// Caps lock   => 20
			// End         => 35
			// Home        => 36
			// Left arrow  => 37
			// Up arrow    => 38
			// Right arrow => 39
			// Down arrow  => 40
			// Insert      => 45
			// Num lock    => 144
			// AltGr key   => 225
			var excludedKeys = [
				16, 17, 18, 20, 35, 36, 37,
				38, 39, 40, 45, 144, 225
			];

			if ( event.which === 9 && this.elementValue( element ) === "" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {
				return;
			} else if ( element.name in this.submitted || element === this.lastElement ) {
				this.element( element );
			}
		},
		onclick: function( element ) {
			// click on selects, radiobuttons and checkboxes
			if ( element.name in this.submitted ) {
				this.element( element );

			// or option elements, check parent select in that case
			} else if ( element.parentNode.name in this.submitted ) {
				this.element( element.parentNode );
			}
		},
		highlight: function( element, errorClass, validClass ) {
			if ( element.type === "radio" ) {
				this.findByName( element.name ).addClass( errorClass ).removeClass( validClass );
			} else {
				$( element ).addClass( errorClass ).removeClass( validClass );
			}
		},
		unhighlight: function( element, errorClass, validClass ) {
			if ( element.type === "radio" ) {
				this.findByName( element.name ).removeClass( errorClass ).addClass( validClass );
			} else {
				$( element ).removeClass( errorClass ).addClass( validClass );
			}
		}
	},

	// http://jqueryvalidation.org/jQuery.validator.setDefaults/
	setDefaults: function( settings ) {
		$.extend( $.validator.defaults, settings );
	},

	messages: {
		required: "This field is required.",
		remote: "Please fix this field.",
		email: "Please enter a valid email address.",
		url: "Please enter a valid URL.",
		date: "Please enter a valid date.",
		dateISO: "Please enter a valid date ( ISO ).",
		number: "Please enter a valid number.",
		digits: "Please enter only digits.",
		creditcard: "Please enter a valid credit card number.",
		equalTo: "Please enter the same value again.",
		maxlength: $.validator.format( "Please enter no more than {0} characters." ),
		minlength: $.validator.format( "Please enter at least {0} characters." ),
		rangelength: $.validator.format( "Please enter a value between {0} and {1} characters long." ),
		range: $.validator.format( "Please enter a value between {0} and {1}." ),
		max: $.validator.format( "Please enter a value less than or equal to {0}." ),
		min: $.validator.format( "Please enter a value greater than or equal to {0}." )
	},

	autoCreateRanges: false,

	prototype: {

		init: function() {
			this.labelContainer = $( this.settings.errorLabelContainer );
			this.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );
			this.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );
			this.submitted = {};
			this.valueCache = {};
			this.pendingRequest = 0;
			this.pending = {};
			this.invalid = {};
			this.reset();

			var groups = ( this.groups = {} ),
				rules;
			$.each( this.settings.groups, function( key, value ) {
				if ( typeof value === "string" ) {
					value = value.split( /\s/ );
				}
				$.each( value, function( index, name ) {
					groups[ name ] = key;
				});
			});
			rules = this.settings.rules;
			$.each( rules, function( key, value ) {
				rules[ key ] = $.validator.normalizeRule( value );
			});

			function delegate( event ) {
				var validator = $.data( this.form, "validator" ),
					eventType = "on" + event.type.replace( /^validate/, "" ),
					settings = validator.settings;
				if ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {
					settings[ eventType ].call( validator, this, event );
				}
			}

			$( this.currentForm )
				.on( "focusin.validate focusout.validate keyup.validate",
					":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], " +
					"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], " +
					"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], " +
					"[type='radio'], [type='checkbox']", delegate)
				// Support: Chrome, oldIE
				// "select" is provided as event.target when clicking a option
				.on("click.validate", "select, option, [type='radio'], [type='checkbox']", delegate);

			if ( this.settings.invalidHandler ) {
				$( this.currentForm ).on( "invalid-form.validate", this.settings.invalidHandler );
			}

			// Add aria-required to any Static/Data/Class required fields before first validation
			// Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html
			$( this.currentForm ).find( "[required], [data-rule-required], .required" ).attr( "aria-required", "true" );
		},

		// http://jqueryvalidation.org/Validator.form/
		form: function() {
			this.checkForm();
			$.extend( this.submitted, this.errorMap );
			this.invalid = $.extend({}, this.errorMap );
			if ( !this.valid() ) {
				$( this.currentForm ).triggerHandler( "invalid-form", [ this ]);
			}
			this.showErrors();
			return this.valid();
		},

		checkForm: function() {
			this.prepareForm();
			for ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {
				this.check( elements[ i ] );
			}
			return this.valid();
		},

		// http://jqueryvalidation.org/Validator.element/
		element: function( element ) {
			var cleanElement = this.clean( element ),
				checkElement = this.validationTargetFor( cleanElement ),
				result = true;

			this.lastElement = checkElement;

			if ( checkElement === undefined ) {
				delete this.invalid[ cleanElement.name ];
			} else {
				this.prepareElement( checkElement );
				this.currentElements = $( checkElement );

				result = this.check( checkElement ) !== false;
				if ( result ) {
					delete this.invalid[ checkElement.name ];
				} else {
					this.invalid[ checkElement.name ] = true;
				}
			}
			// Add aria-invalid status for screen readers
			$( element ).attr( "aria-invalid", !result );

			if ( !this.numberOfInvalids() ) {
				// Hide error containers on last error
				this.toHide = this.toHide.add( this.containers );
			}
			this.showErrors();
			return result;
		},

		// http://jqueryvalidation.org/Validator.showErrors/
		showErrors: function( errors ) {
			if ( errors ) {
				// add items to error list and map
				$.extend( this.errorMap, errors );
				this.errorList = [];
				for ( var name in errors ) {
					this.errorList.push({
						message: errors[ name ],
						element: this.findByName( name )[ 0 ]
					});
				}
				// remove items from success list
				this.successList = $.grep( this.successList, function( element ) {
					return !( element.name in errors );
				});
			}
			if ( this.settings.showErrors ) {
				this.settings.showErrors.call( this, this.errorMap, this.errorList );
			} else {
				this.defaultShowErrors();
			}
		},

		// http://jqueryvalidation.org/Validator.resetForm/
		resetForm: function() {
			if ( $.fn.resetForm ) {
				$( this.currentForm ).resetForm();
			}
			this.submitted = {};
			this.lastElement = null;
			this.prepareForm();
			this.hideErrors();
			var i, elements = this.elements()
				.removeData( "previousValue" )
				.removeAttr( "aria-invalid" );

			if ( this.settings.unhighlight ) {
				for ( i = 0; elements[ i ]; i++ ) {
					this.settings.unhighlight.call( this, elements[ i ],
						this.settings.errorClass, "" );
				}
			} else {
				elements.removeClass( this.settings.errorClass );
			}
		},

		numberOfInvalids: function() {
			return this.objectLength( this.invalid );
		},

		objectLength: function( obj ) {
			/* jshint unused: false */
			var count = 0,
				i;
			for ( i in obj ) {
				count++;
			}
			return count;
		},

		hideErrors: function() {
			this.hideThese( this.toHide );
		},

		hideThese: function( errors ) {
			errors.not( this.containers ).text( "" );
			this.addWrapper( errors ).hide();
		},

		valid: function() {
			return this.size() === 0;
		},

		size: function() {
			return this.errorList.length;
		},

		focusInvalid: function() {
			if ( this.settings.focusInvalid ) {
				try {
					$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [])
					.filter( ":visible" )
					.focus()
					// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
					.trigger( "focusin" );
				} catch ( e ) {
					// ignore IE throwing errors when focusing hidden elements
				}
			}
		},

		findLastActive: function() {
			var lastActive = this.lastActive;
			return lastActive && $.grep( this.errorList, function( n ) {
				return n.element.name === lastActive.name;
			}).length === 1 && lastActive;
		},

		elements: function() {
			var validator = this,
				rulesCache = {};

			// select all valid inputs inside the form (no submit or reset buttons)
			return $( this.currentForm )
			.find( "input, select, textarea" )
			.not( ":submit, :reset, :image, :disabled" )
			.not( this.settings.ignore )
			.filter( function() {
				if ( !this.name && validator.settings.debug && window.console ) {
					console.error( "%o has no name assigned", this );
				}

				// select only the first element for each name, and only those with rules specified
				if ( this.name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {
					return false;
				}

				rulesCache[ this.name ] = true;
				return true;
			});
		},

		clean: function( selector ) {
			return $( selector )[ 0 ];
		},

		errors: function() {
			var errorClass = this.settings.errorClass.split( " " ).join( "." );
			return $( this.settings.errorElement + "." + errorClass, this.errorContext );
		},

		reset: function() {
			this.successList = [];
			this.errorList = [];
			this.errorMap = {};
			this.toShow = $( [] );
			this.toHide = $( [] );
			this.currentElements = $( [] );
		},

		prepareForm: function() {
			this.reset();
			this.toHide = this.errors().add( this.containers );
		},

		prepareElement: function( element ) {
			this.reset();
			this.toHide = this.errorsFor( element );
		},

		elementValue: function( element ) {
			var val,
				$element = $( element ),
				type = element.type;

			if ( type === "radio" || type === "checkbox" ) {
				return this.findByName( element.name ).filter(":checked").val();
			} else if ( type === "number" && typeof element.validity !== "undefined" ) {
				return element.validity.badInput ? false : $element.val();
			}

			val = $element.val();
			if ( typeof val === "string" ) {
				return val.replace(/\r/g, "" );
			}
			return val;
		},

		check: function( element ) {
			element = this.validationTargetFor( this.clean( element ) );

			var rules = $( element ).rules(),
				rulesCount = $.map( rules, function( n, i ) {
					return i;
				}).length,
				dependencyMismatch = false,
				val = this.elementValue( element ),
				result, method, rule;

			for ( method in rules ) {
				rule = { method: method, parameters: rules[ method ] };
				try {

					result = $.validator.methods[ method ].call( this, val, element, rule.parameters );

					// if a method indicates that the field is optional and therefore valid,
					// don't mark it as valid when there are no other rules
					if ( result === "dependency-mismatch" && rulesCount === 1 ) {
						dependencyMismatch = true;
						continue;
					}
					dependencyMismatch = false;

					if ( result === "pending" ) {
						this.toHide = this.toHide.not( this.errorsFor( element ) );
						return;
					}

					if ( !result ) {
						this.formatAndAdd( element, rule );
						return false;
					}
				} catch ( e ) {
					if ( this.settings.debug && window.console ) {
						console.log( "Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e );
					}
					if ( e instanceof TypeError ) {
						e.message += ".  Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.";
					}

					throw e;
				}
			}
			if ( dependencyMismatch ) {
				return;
			}
			if ( this.objectLength( rules ) ) {
				this.successList.push( element );
			}
			return true;
		},

		// return the custom message for the given element and validation method
		// specified in the element's HTML5 data attribute
		// return the generic message if present and no method specific message is present
		customDataMessage: function( element, method ) {
			return $( element ).data( "msg" + method.charAt( 0 ).toUpperCase() +
				method.substring( 1 ).toLowerCase() ) || $( element ).data( "msg" );
		},

		// return the custom message for the given element name and validation method
		customMessage: function( name, method ) {
			var m = this.settings.messages[ name ];
			return m && ( m.constructor === String ? m : m[ method ]);
		},

		// return the first defined argument, allowing empty strings
		findDefined: function() {
			for ( var i = 0; i < arguments.length; i++) {
				if ( arguments[ i ] !== undefined ) {
					return arguments[ i ];
				}
			}
			return undefined;
		},

		defaultMessage: function( element, method ) {
			return this.findDefined(
				this.customMessage( element.name, method ),
				this.customDataMessage( element, method ),
				// title is never undefined, so handle empty string as undefined
				!this.settings.ignoreTitle && element.title || undefined,
				$.validator.messages[ method ],
				"<strong>Warning: No message defined for " + element.name + "</strong>"
			);
		},

		formatAndAdd: function( element, rule ) {
			var message = this.defaultMessage( element, rule.method ),
				theregex = /\$?\{(\d+)\}/g;
			if ( typeof message === "function" ) {
				message = message.call( this, rule.parameters, element );
			} else if ( theregex.test( message ) ) {
				message = $.validator.format( message.replace( theregex, "{$1}" ), rule.parameters );
			}
			this.errorList.push({
				message: message,
				element: element,
				method: rule.method
			});

			this.errorMap[ element.name ] = message;
			this.submitted[ element.name ] = message;
		},

		addWrapper: function( toToggle ) {
			if ( this.settings.wrapper ) {
				toToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );
			}
			return toToggle;
		},

		defaultShowErrors: function() {
			var i, elements, error;
			for ( i = 0; this.errorList[ i ]; i++ ) {
				error = this.errorList[ i ];
				if ( this.settings.highlight ) {
					this.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );
				}
				this.showLabel( error.element, error.message );
			}
			if ( this.errorList.length ) {
				this.toShow = this.toShow.add( this.containers );
			}
			if ( this.settings.success ) {
				for ( i = 0; this.successList[ i ]; i++ ) {
					this.showLabel( this.successList[ i ] );
				}
			}
			if ( this.settings.unhighlight ) {
				for ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {
					this.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );
				}
			}
			this.toHide = this.toHide.not( this.toShow );
			this.hideErrors();
			this.addWrapper( this.toShow ).show();
		},

		validElements: function() {
			return this.currentElements.not( this.invalidElements() );
		},

		invalidElements: function() {
			return $( this.errorList ).map(function() {
				return this.element;
			});
		},

		showLabel: function( element, message ) {
			var place, group, errorID,
				error = this.errorsFor( element ),
				elementID = this.idOrName( element ),
				describedBy = $( element ).attr( "aria-describedby" );
			if ( error.length ) {
				// refresh error/success class
				error.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );
				// replace message on existing label
				error.html( message );
			} else {
				// create error element
				error = $( "<" + this.settings.errorElement + ">" )
					.attr( "id", elementID + "-error" )
					.addClass( this.settings.errorClass )
					.html( message || "" );

				// Maintain reference to the element to be placed into the DOM
				place = error;
				if ( this.settings.wrapper ) {
					// make sure the element is visible, even in IE
					// actually showing the wrapped element is handled elsewhere
					place = error.hide().show().wrap( "<" + this.settings.wrapper + "/>" ).parent();
				}
				if ( this.labelContainer.length ) {
					this.labelContainer.append( place );
				} else if ( this.settings.errorPlacement ) {
					this.settings.errorPlacement( place, $( element ) );
				} else {
					place.insertAfter( element );
				}

				// Link error back to the element
				if ( error.is( "label" ) ) {
					// If the error is a label, then associate using 'for'
					error.attr( "for", elementID );
				} else if ( error.parents( "label[for='" + elementID + "']" ).length === 0 ) {
					// If the element is not a child of an associated label, then it's necessary
					// to explicitly apply aria-describedby

					errorID = error.attr( "id" ).replace( /(:|\.|\[|\]|\$)/g, "\\$1");
					// Respect existing non-error aria-describedby
					if ( !describedBy ) {
						describedBy = errorID;
					} else if ( !describedBy.match( new RegExp( "\\b" + errorID + "\\b" ) ) ) {
						// Add to end of list if not already present
						describedBy += " " + errorID;
					}
					$( element ).attr( "aria-describedby", describedBy );

					// If this element is grouped, then assign to all elements in the same group
					group = this.groups[ element.name ];
					if ( group ) {
						$.each( this.groups, function( name, testgroup ) {
							if ( testgroup === group ) {
								$( "[name='" + name + "']", this.currentForm )
									.attr( "aria-describedby", error.attr( "id" ) );
							}
						});
					}
				}
			}
			if ( !message && this.settings.success ) {
				error.text( "" );
				if ( typeof this.settings.success === "string" ) {
					error.addClass( this.settings.success );
				} else {
					this.settings.success( error, element );
				}
			}
			this.toShow = this.toShow.add( error );
		},

		errorsFor: function( element ) {
			var name = this.idOrName( element ),
				describer = $( element ).attr( "aria-describedby" ),
				selector = "label[for='" + name + "'], label[for='" + name + "'] *";

			// aria-describedby should directly reference the error element
			if ( describer ) {
				selector = selector + ", #" + describer.replace( /\s+/g, ", #" );
			}
			return this
				.errors()
				.filter( selector );
		},

		idOrName: function( element ) {
			return this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );
		},

		validationTargetFor: function( element ) {

			// If radio/checkbox, validate first element in group instead
			if ( this.checkable( element ) ) {
				element = this.findByName( element.name );
			}

			// Always apply ignore filter
			return $( element ).not( this.settings.ignore )[ 0 ];
		},

		checkable: function( element ) {
			return ( /radio|checkbox/i ).test( element.type );
		},

		findByName: function( name ) {
			return $( this.currentForm ).find( "[name='" + name + "']" );
		},

		getLength: function( value, element ) {
			switch ( element.nodeName.toLowerCase() ) {
			case "select":
				return $( "option:selected", element ).length;
			case "input":
				if ( this.checkable( element ) ) {
					return this.findByName( element.name ).filter( ":checked" ).length;
				}
			}
			return value.length;
		},

		depend: function( param, element ) {
			return this.dependTypes[typeof param] ? this.dependTypes[typeof param]( param, element ) : true;
		},

		dependTypes: {
			"boolean": function( param ) {
				return param;
			},
			"string": function( param, element ) {
				return !!$( param, element.form ).length;
			},
			"function": function( param, element ) {
				return param( element );
			}
		},

		optional: function( element ) {
			var val = this.elementValue( element );
			return !$.validator.methods.required.call( this, val, element ) && "dependency-mismatch";
		},

		startRequest: function( element ) {
			if ( !this.pending[ element.name ] ) {
				this.pendingRequest++;
				this.pending[ element.name ] = true;
			}
		},

		stopRequest: function( element, valid ) {
			this.pendingRequest--;
			// sometimes synchronization fails, make sure pendingRequest is never < 0
			if ( this.pendingRequest < 0 ) {
				this.pendingRequest = 0;
			}
			delete this.pending[ element.name ];
			if ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {
				$( this.currentForm ).submit();
				this.formSubmitted = false;
			} else if (!valid && this.pendingRequest === 0 && this.formSubmitted ) {
				$( this.currentForm ).triggerHandler( "invalid-form", [ this ]);
				this.formSubmitted = false;
			}
		},

		previousValue: function( element ) {
			return $.data( element, "previousValue" ) || $.data( element, "previousValue", {
				old: null,
				valid: true,
				message: this.defaultMessage( element, "remote" )
			});
		},

		// cleans up all forms and elements, removes validator-specific events
		destroy: function() {
			this.resetForm();

			$( this.currentForm )
				.off( ".validate" )
				.removeData( "validator" );
		}

	},

	classRuleSettings: {
		required: { required: true },
		email: { email: true },
		url: { url: true },
		date: { date: true },
		dateISO: { dateISO: true },
		number: { number: true },
		digits: { digits: true },
		creditcard: { creditcard: true }
	},

	addClassRules: function( className, rules ) {
		if ( className.constructor === String ) {
			this.classRuleSettings[ className ] = rules;
		} else {
			$.extend( this.classRuleSettings, className );
		}
	},

	classRules: function( element ) {
		var rules = {},
			classes = $( element ).attr( "class" );

		if ( classes ) {
			$.each( classes.split( " " ), function() {
				if ( this in $.validator.classRuleSettings ) {
					$.extend( rules, $.validator.classRuleSettings[ this ]);
				}
			});
		}
		return rules;
	},

	normalizeAttributeRule: function( rules, type, method, value ) {

		// convert the value to a number for number inputs, and for text for backwards compability
		// allows type="date" and others to be compared as strings
		if ( /min|max/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {
			value = Number( value );

			// Support Opera Mini, which returns NaN for undefined minlength
			if ( isNaN( value ) ) {
				value = undefined;
			}
		}

		if ( value || value === 0 ) {
			rules[ method ] = value;
		} else if ( type === method && type !== "range" ) {

			// exception: the jquery validate 'range' method
			// does not test for the html5 'range' type
			rules[ method ] = true;
		}
	},

	attributeRules: function( element ) {
		var rules = {},
			$element = $( element ),
			type = element.getAttribute( "type" ),
			method, value;

		for ( method in $.validator.methods ) {

			// support for <input required> in both html5 and older browsers
			if ( method === "required" ) {
				value = element.getAttribute( method );

				// Some browsers return an empty string for the required attribute
				// and non-HTML5 browsers might have required="" markup
				if ( value === "" ) {
					value = true;
				}

				// force non-HTML5 browsers to return bool
				value = !!value;
			} else {
				value = $element.attr( method );
			}

			this.normalizeAttributeRule( rules, type, method, value );
		}

		// maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs
		if ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {
			delete rules.maxlength;
		}

		return rules;
	},

	dataRules: function( element ) {
		var rules = {},
			$element = $( element ),
			type = element.getAttribute( "type" ),
			method, value;

		for ( method in $.validator.methods ) {
			value = $element.data( "rule" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );
			this.normalizeAttributeRule( rules, type, method, value );
		}
		return rules;
	},

	staticRules: function( element ) {
		var rules = {},
			validator = $.data( element.form, "validator" );

		if ( validator.settings.rules ) {
			rules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};
		}
		return rules;
	},

	normalizeRules: function( rules, element ) {
		// handle dependency check
		$.each( rules, function( prop, val ) {
			// ignore rule when param is explicitly false, eg. required:false
			if ( val === false ) {
				delete rules[ prop ];
				return;
			}
			if ( val.param || val.depends ) {
				var keepRule = true;
				switch ( typeof val.depends ) {
				case "string":
					keepRule = !!$( val.depends, element.form ).length;
					break;
				case "function":
					keepRule = val.depends.call( element, element );
					break;
				}
				if ( keepRule ) {
					rules[ prop ] = val.param !== undefined ? val.param : true;
				} else {
					delete rules[ prop ];
				}
			}
		});

		// evaluate parameters
		$.each( rules, function( rule, parameter ) {
			rules[ rule ] = $.isFunction( parameter ) ? parameter( element ) : parameter;
		});

		// clean number parameters
		$.each([ "minlength", "maxlength" ], function() {
			if ( rules[ this ] ) {
				rules[ this ] = Number( rules[ this ] );
			}
		});
		$.each([ "rangelength", "range" ], function() {
			var parts;
			if ( rules[ this ] ) {
				if ( $.isArray( rules[ this ] ) ) {
					rules[ this ] = [ Number( rules[ this ][ 0 ]), Number( rules[ this ][ 1 ] ) ];
				} else if ( typeof rules[ this ] === "string" ) {
					parts = rules[ this ].replace(/[\[\]]/g, "" ).split( /[\s,]+/ );
					rules[ this ] = [ Number( parts[ 0 ]), Number( parts[ 1 ] ) ];
				}
			}
		});

		if ( $.validator.autoCreateRanges ) {
			// auto-create ranges
			if ( rules.min != null && rules.max != null ) {
				rules.range = [ rules.min, rules.max ];
				delete rules.min;
				delete rules.max;
			}
			if ( rules.minlength != null && rules.maxlength != null ) {
				rules.rangelength = [ rules.minlength, rules.maxlength ];
				delete rules.minlength;
				delete rules.maxlength;
			}
		}

		return rules;
	},

	// Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
	normalizeRule: function( data ) {
		if ( typeof data === "string" ) {
			var transformed = {};
			$.each( data.split( /\s/ ), function() {
				transformed[ this ] = true;
			});
			data = transformed;
		}
		return data;
	},

	// http://jqueryvalidation.org/jQuery.validator.addMethod/
	addMethod: function( name, method, message ) {
		$.validator.methods[ name ] = method;
		$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];
		if ( method.length < 3 ) {
			$.validator.addClassRules( name, $.validator.normalizeRule( name ) );
		}
	},

	methods: {

		// http://jqueryvalidation.org/required-method/
		required: function( value, element, param ) {
			// check if dependency is met
			if ( !this.depend( param, element ) ) {
				return "dependency-mismatch";
			}
			if ( element.nodeName.toLowerCase() === "select" ) {
				// could be an array for select-multiple or a string, both are fine this way
				var val = $( element ).val();
				return val && val.length > 0;
			}
			if ( this.checkable( element ) ) {
				return this.getLength( value, element ) > 0;
			}
			return value.length > 0;
		},

		// http://jqueryvalidation.org/email-method/
		email: function( value, element ) {
			// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address
			// Retrieved 2014-01-14
			// If you have a problem with this implementation, report a bug against the above spec
			// Or use custom methods to implement your own email validation
			return this.optional( element ) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );
		},

		// http://jqueryvalidation.org/url-method/
		url: function( value, element ) {

			// Copyright (c) 2010-2013 Diego Perini, MIT licensed
			// https://gist.github.com/dperini/729294
			// see also https://mathiasbynens.be/demo/url-regex
			// modified to allow protocol-relative URLs
			return this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test( value );
		},

		// http://jqueryvalidation.org/date-method/
		date: function( value, element ) {
			return this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );
		},

		// http://jqueryvalidation.org/dateISO-method/
		dateISO: function( value, element ) {
			return this.optional( element ) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );
		},

		// http://jqueryvalidation.org/number-method/
		number: function( value, element ) {
			return this.optional( element ) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test( value );
		},

		// http://jqueryvalidation.org/digits-method/
		digits: function( value, element ) {
			return this.optional( element ) || /^\d+$/.test( value );
		},

		// http://jqueryvalidation.org/creditcard-method/
		// based on http://en.wikipedia.org/wiki/Luhn_algorithm
		creditcard: function( value, element ) {
			if ( this.optional( element ) ) {
				return "dependency-mismatch";
			}
			// accept only spaces, digits and dashes
			if ( /[^0-9 \-]+/.test( value ) ) {
				return false;
			}
			var nCheck = 0,
				nDigit = 0,
				bEven = false,
				n, cDigit;

			value = value.replace( /\D/g, "" );

			// Basing min and max length on
			// http://developer.ean.com/general_info/Valid_Credit_Card_Types
			if ( value.length < 13 || value.length > 19 ) {
				return false;
			}

			for ( n = value.length - 1; n >= 0; n--) {
				cDigit = value.charAt( n );
				nDigit = parseInt( cDigit, 10 );
				if ( bEven ) {
					if ( ( nDigit *= 2 ) > 9 ) {
						nDigit -= 9;
					}
				}
				nCheck += nDigit;
				bEven = !bEven;
			}

			return ( nCheck % 10 ) === 0;
		},

		// http://jqueryvalidation.org/minlength-method/
		minlength: function( value, element, param ) {
			var length = $.isArray( value ) ? value.length : this.getLength( value, element );
			return this.optional( element ) || length >= param;
		},

		// http://jqueryvalidation.org/maxlength-method/
		maxlength: function( value, element, param ) {
			var length = $.isArray( value ) ? value.length : this.getLength( value, element );
			return this.optional( element ) || length <= param;
		},

		// http://jqueryvalidation.org/rangelength-method/
		rangelength: function( value, element, param ) {
			var length = $.isArray( value ) ? value.length : this.getLength( value, element );
			return this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );
		},

		// http://jqueryvalidation.org/min-method/
		min: function( value, element, param ) {
			return this.optional( element ) || value >= param;
		},

		// http://jqueryvalidation.org/max-method/
		max: function( value, element, param ) {
			return this.optional( element ) || value <= param;
		},

		// http://jqueryvalidation.org/range-method/
		range: function( value, element, param ) {
			return this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );
		},

		// http://jqueryvalidation.org/equalTo-method/
		equalTo: function( value, element, param ) {
			// bind to the blur event of the target in order to revalidate whenever the target field is updated
			// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
			var target = $( param );
			if ( this.settings.onfocusout ) {
				target.off( ".validate-equalTo" ).on( "blur.validate-equalTo", function() {
					$( element ).valid();
				});
			}
			return value === target.val();
		},

		// http://jqueryvalidation.org/remote-method/
		remote: function( value, element, param ) {
			if ( this.optional( element ) ) {
				return "dependency-mismatch";
			}

			var previous = this.previousValue( element ),
				validator, data;

			if (!this.settings.messages[ element.name ] ) {
				this.settings.messages[ element.name ] = {};
			}
			previous.originalMessage = this.settings.messages[ element.name ].remote;
			this.settings.messages[ element.name ].remote = previous.message;

			param = typeof param === "string" && { url: param } || param;

			if ( previous.old === value ) {
				return previous.valid;
			}

			previous.old = value;
			validator = this;
			this.startRequest( element );
			data = {};
			data[ element.name ] = value;
			$.ajax( $.extend( true, {
				mode: "abort",
				port: "validate" + element.name,
				dataType: "json",
				data: data,
				context: validator.currentForm,
				success: function( response ) {
					var valid = response === true || response === "true",
						errors, message, submitted;

					validator.settings.messages[ element.name ].remote = previous.originalMessage;
					if ( valid ) {
						submitted = validator.formSubmitted;
						validator.prepareElement( element );
						validator.formSubmitted = submitted;
						validator.successList.push( element );
						delete validator.invalid[ element.name ];
						validator.showErrors();
					} else {
						errors = {};
						message = response || validator.defaultMessage( element, "remote" );
						errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;
						validator.invalid[ element.name ] = true;
						validator.showErrors( errors );
					}
					previous.valid = valid;
					validator.stopRequest( element, valid );
				}
			}, param ) );
			return "pending";
		}
	}

});

// ajax mode: abort
// usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
// if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()

var pendingRequests = {},
	ajax;
// Use a prefilter if available (1.5+)
if ( $.ajaxPrefilter ) {
	$.ajaxPrefilter(function( settings, _, xhr ) {
		var port = settings.port;
		if ( settings.mode === "abort" ) {
			if ( pendingRequests[port] ) {
				pendingRequests[port].abort();
			}
			pendingRequests[port] = xhr;
		}
	});
} else {
	// Proxy ajax
	ajax = $.ajax;
	$.ajax = function( settings ) {
		var mode = ( "mode" in settings ? settings : $.ajaxSettings ).mode,
			port = ( "port" in settings ? settings : $.ajaxSettings ).port;
		if ( mode === "abort" ) {
			if ( pendingRequests[port] ) {
				pendingRequests[port].abort();
			}
			pendingRequests[port] = ajax.apply(this, arguments);
			return pendingRequests[port];
		}
		return ajax.apply(this, arguments);
	};
}

}));
/*!
 * jQuery Form Plugin
 * version: 3.51.0-2014.06.20
 * Requires jQuery v1.5 or later
 * Copyright (c) 2014 M. Alsup
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Project repository: https://github.com/malsup/form
 * Dual licensed under the MIT and GPL licenses.
 * https://github.com/malsup/form#copyright-and-license
 */
/*global ActiveXObject */

// AMD support
(function (factory) {
    "use strict";
    if (typeof define === 'function' && define.amd) {
        // using AMD; register as anon module
        define(['jquery'], factory);
    } else {
        // no AMD; invoke directly
        factory( (typeof(jQuery) != 'undefined') ? jQuery : window.Zepto );
    }
}

(function($) {
"use strict";

/*
    Usage Note:
    -----------
    Do not use both ajaxSubmit and ajaxForm on the same form.  These
    functions are mutually exclusive.  Use ajaxSubmit if you want
    to bind your own submit handler to the form.  For example,

    $(document).ready(function() {
        $('#myForm').on('submit', function(e) {
            e.preventDefault(); // <-- important
            $(this).ajaxSubmit({
                target: '#output'
            });
        });
    });

    Use ajaxForm when you want the plugin to manage all the event binding
    for you.  For example,

    $(document).ready(function() {
        $('#myForm').ajaxForm({
            target: '#output'
        });
    });

    You can also use ajaxForm with delegation (requires jQuery v1.7+), so the
    form does not have to exist when you invoke ajaxForm:

    $('#myForm').ajaxForm({
        delegation: true,
        target: '#output'
    });

    When using ajaxForm, the ajaxSubmit function will be invoked for you
    at the appropriate time.
*/

/**
 * Feature detection
 */
var feature = {};
feature.fileapi = $("<input type='file'/>").get(0).files !== undefined;
feature.formdata = window.FormData !== undefined;

var hasProp = !!$.fn.prop;

// attr2 uses prop when it can but checks the return type for
// an expected string.  this accounts for the case where a form 
// contains inputs with names like "action" or "method"; in those
// cases "prop" returns the element
$.fn.attr2 = function() {
    if ( ! hasProp ) {
        return this.attr.apply(this, arguments);
    }
    var val = this.prop.apply(this, arguments);
    if ( ( val && val.jquery ) || typeof val === 'string' ) {
        return val;
    }
    return this.attr.apply(this, arguments);
};

/**
 * ajaxSubmit() provides a mechanism for immediately submitting
 * an HTML form using AJAX.
 */
$.fn.ajaxSubmit = function(options) {
    /*jshint scripturl:true */

    // fast fail if nothing selected (http://dev.jquery.com/ticket/2752)
    if (!this.length) {
        log('ajaxSubmit: skipping submit process - no element selected');
        return this;
    }

    var method, action, url, $form = this;

    if (typeof options == 'function') {
        options = { success: options };
    }
    else if ( options === undefined ) {
        options = {};
    }

    method = options.type || this.attr2('method');
    action = options.url  || this.attr2('action');

    url = (typeof action === 'string') ? $.trim(action) : '';
    url = url || window.location.href || '';
    if (url) {
        // clean url (don't include hash vaue)
        url = (url.match(/^([^#]+)/)||[])[1];
    }

    options = $.extend(true, {
        url:  url,
        success: $.ajaxSettings.success,
        type: method || $.ajaxSettings.type,
        iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank'
    }, options);

    // hook for manipulating the form data before it is extracted;
    // convenient for use with rich editors like tinyMCE or FCKEditor
    var veto = {};
    this.trigger('form-pre-serialize', [this, options, veto]);
    if (veto.veto) {
        log('ajaxSubmit: submit vetoed via form-pre-serialize trigger');
        return this;
    }

    // provide opportunity to alter form data before it is serialized
    if (options.beforeSerialize && options.beforeSerialize(this, options) === false) {
        log('ajaxSubmit: submit aborted via beforeSerialize callback');
        return this;
    }

    var traditional = options.traditional;
    if ( traditional === undefined ) {
        traditional = $.ajaxSettings.traditional;
    }

    var elements = [];
    var qx, a = this.formToArray(options.semantic, elements);
    if (options.data) {
        options.extraData = options.data;
        qx = $.param(options.data, traditional);
    }

    // give pre-submit callback an opportunity to abort the submit
    if (options.beforeSubmit && options.beforeSubmit(a, this, options) === false) {
        log('ajaxSubmit: submit aborted via beforeSubmit callback');
        return this;
    }

    // fire vetoable 'validate' event
    this.trigger('form-submit-validate', [a, this, options, veto]);
    if (veto.veto) {
        log('ajaxSubmit: submit vetoed via form-submit-validate trigger');
        return this;
    }

    var q = $.param(a, traditional);
    if (qx) {
        q = ( q ? (q + '&' + qx) : qx );
    }
    if (options.type.toUpperCase() == 'GET') {
        options.url += (options.url.indexOf('?') >= 0 ? '&' : '?') + q;
        options.data = null;  // data is null for 'get'
    }
    else {
        options.data = q; // data is the query string for 'post'
    }

    var callbacks = [];
    if (options.resetForm) {
        callbacks.push(function() { $form.resetForm(); });
    }
    if (options.clearForm) {
        callbacks.push(function() { $form.clearForm(options.includeHidden); });
    }

    // perform a load on the target only if dataType is not provided
    if (!options.dataType && options.target) {
        var oldSuccess = options.success || function(){};
        callbacks.push(function(data) {
            var fn = options.replaceTarget ? 'replaceWith' : 'html';
            $(options.target)[fn](data).each(oldSuccess, arguments);
        });
    }
    else if (options.success) {
        callbacks.push(options.success);
    }

    options.success = function(data, status, xhr) { // jQuery 1.4+ passes xhr as 3rd arg
        var context = options.context || this ;    // jQuery 1.4+ supports scope context
        for (var i=0, max=callbacks.length; i < max; i++) {
            callbacks[i].apply(context, [data, status, xhr || $form, $form]);
        }
    };

    if (options.error) {
        var oldError = options.error;
        options.error = function(xhr, status, error) {
            var context = options.context || this;
            oldError.apply(context, [xhr, status, error, $form]);
        };
    }

     if (options.complete) {
        var oldComplete = options.complete;
        options.complete = function(xhr, status) {
            var context = options.context || this;
            oldComplete.apply(context, [xhr, status, $form]);
        };
    }

    // are there files to upload?

    // [value] (issue #113), also see comment:
    // https://github.com/malsup/form/commit/588306aedba1de01388032d5f42a60159eea9228#commitcomment-2180219
    var fileInputs = $('input[type=file]:enabled', this).filter(function() { return $(this).val() !== ''; });

    var hasFileInputs = fileInputs.length > 0;
    var mp = 'multipart/form-data';
    var multipart = ($form.attr('enctype') == mp || $form.attr('encoding') == mp);

    var fileAPI = feature.fileapi && feature.formdata;
    log("fileAPI :" + fileAPI);
    var shouldUseFrame = (hasFileInputs || multipart) && !fileAPI;

    var jqxhr;

    // options.iframe allows user to force iframe mode
    // 06-NOV-09: now defaulting to iframe mode if file input is detected
    if (options.iframe !== false && (options.iframe || shouldUseFrame)) {
        // hack to fix Safari hang (thanks to Tim Molendijk for this)
        // see:  http://groups.google.com/group/jquery-dev/browse_thread/thread/36395b7ab510dd5d
        if (options.closeKeepAlive) {
            $.get(options.closeKeepAlive, function() {
                jqxhr = fileUploadIframe(a);
            });
        }
        else {
            jqxhr = fileUploadIframe(a);
        }
    }
    else if ((hasFileInputs || multipart) && fileAPI) {
        jqxhr = fileUploadXhr(a);
    }
    else {
        jqxhr = $.ajax(options);
    }

    $form.removeData('jqxhr').data('jqxhr', jqxhr);

    // clear element array
    for (var k=0; k < elements.length; k++) {
        elements[k] = null;
    }

    // fire 'notify' event
    this.trigger('form-submit-notify', [this, options]);
    return this;

    // utility fn for deep serialization
    function deepSerialize(extraData){
        var serialized = $.param(extraData, options.traditional).split('&');
        var len = serialized.length;
        var result = [];
        var i, part;
        for (i=0; i < len; i++) {
            // #252; undo param space replacement
            serialized[i] = serialized[i].replace(/\+/g,' ');
            part = serialized[i].split('=');
            // #278; use array instead of object storage, favoring array serializations
            result.push([decodeURIComponent(part[0]), decodeURIComponent(part[1])]);
        }
        return result;
    }

     // XMLHttpRequest Level 2 file uploads (big hat tip to francois2metz)
    function fileUploadXhr(a) {
        var formdata = new FormData();

        for (var i=0; i < a.length; i++) {
            formdata.append(a[i].name, a[i].value);
        }

        if (options.extraData) {
            var serializedData = deepSerialize(options.extraData);
            for (i=0; i < serializedData.length; i++) {
                if (serializedData[i]) {
                    formdata.append(serializedData[i][0], serializedData[i][1]);
                }
            }
        }

        options.data = null;

        var s = $.extend(true, {}, $.ajaxSettings, options, {
            contentType: false,
            processData: false,
            cache: false,
            type: method || 'POST'
        });

        if (options.uploadProgress) {
            // workaround because jqXHR does not expose upload property
            s.xhr = function() {
                var xhr = $.ajaxSettings.xhr();
                if (xhr.upload) {
                    xhr.upload.addEventListener('progress', function(event) {
                        var percent = 0;
                        var position = event.loaded || event.position; /*event.position is deprecated*/
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        options.uploadProgress(event, position, total, percent);
                    }, false);
                }
                return xhr;
            };
        }

        s.data = null;
        var beforeSend = s.beforeSend;
        s.beforeSend = function(xhr, o) {
            //Send FormData() provided by user
            if (options.formData) {
                o.data = options.formData;
            }
            else {
                o.data = formdata;
            }
            if(beforeSend) {
                beforeSend.call(this, xhr, o);
            }
        };
        return $.ajax(s);
    }

    // private function for handling file uploads (hat tip to YAHOO!)
    function fileUploadIframe(a) {
        var form = $form[0], el, i, s, g, id, $io, io, xhr, sub, n, timedOut, timeoutHandle;
        var deferred = $.Deferred();

        // #341
        deferred.abort = function(status) {
            xhr.abort(status);
        };

        if (a) {
            // ensure that every serialized input is still enabled
            for (i=0; i < elements.length; i++) {
                el = $(elements[i]);
                if ( hasProp ) {
                    el.prop('disabled', false);
                }
                else {
                    el.removeAttr('disabled');
                }
            }
        }

        s = $.extend(true, {}, $.ajaxSettings, options);
        s.context = s.context || s;
        id = 'jqFormIO' + (new Date().getTime());
        if (s.iframeTarget) {
            $io = $(s.iframeTarget);
            n = $io.attr2('name');
            if (!n) {
                $io.attr2('name', id);
            }
            else {
                id = n;
            }
        }
        else {
            $io = $('<iframe name="' + id + '" src="'+ s.iframeSrc +'" />');
            $io.css({ position: 'absolute', top: '-1000px', left: '-1000px' });
        }
        io = $io[0];


        xhr = { // mock object
            aborted: 0,
            responseText: null,
            responseXML: null,
            status: 0,
            statusText: 'n/a',
            getAllResponseHeaders: function() {},
            getResponseHeader: function() {},
            setRequestHeader: function() {},
            abort: function(status) {
                var e = (status === 'timeout' ? 'timeout' : 'aborted');
                log('aborting upload... ' + e);
                this.aborted = 1;

                try { // #214, #257
                    if (io.contentWindow.document.execCommand) {
                        io.contentWindow.document.execCommand('Stop');
                    }
                }
                catch(ignore) {}

                $io.attr('src', s.iframeSrc); // abort op in progress
                xhr.error = e;
                if (s.error) {
                    s.error.call(s.context, xhr, e, status);
                }
                if (g) {
                    $.event.trigger("ajaxError", [xhr, s, e]);
                }
                if (s.complete) {
                    s.complete.call(s.context, xhr, e);
                }
            }
        };

        g = s.global;
        // trigger ajax global events so that activity/block indicators work like normal
        if (g && 0 === $.active++) {
            $.event.trigger("ajaxStart");
        }
        if (g) {
            $.event.trigger("ajaxSend", [xhr, s]);
        }

        if (s.beforeSend && s.beforeSend.call(s.context, xhr, s) === false) {
            if (s.global) {
                $.active--;
            }
            deferred.reject();
            return deferred;
        }
        if (xhr.aborted) {
            deferred.reject();
            return deferred;
        }

        // add submitting element to data if we know it
        sub = form.clk;
        if (sub) {
            n = sub.name;
            if (n && !sub.disabled) {
                s.extraData = s.extraData || {};
                s.extraData[n] = sub.value;
                if (sub.type == "image") {
                    s.extraData[n+'.x'] = form.clk_x;
                    s.extraData[n+'.y'] = form.clk_y;
                }
            }
        }

        var CLIENT_TIMEOUT_ABORT = 1;
        var SERVER_ABORT = 2;
                
        function getDoc(frame) {
            /* it looks like contentWindow or contentDocument do not
             * carry the protocol property in ie8, when running under ssl
             * frame.document is the only valid response document, since
             * the protocol is know but not on the other two objects. strange?
             * "Same origin policy" http://en.wikipedia.org/wiki/Same_origin_policy
             */
            
            var doc = null;
            
            // IE8 cascading access check
            try {
                if (frame.contentWindow) {
                    doc = frame.contentWindow.document;
                }
            } catch(err) {
                // IE8 access denied under ssl & missing protocol
                log('cannot get iframe.contentWindow document: ' + err);
            }

            if (doc) { // successful getting content
                return doc;
            }

            try { // simply checking may throw in ie8 under ssl or mismatched protocol
                doc = frame.contentDocument ? frame.contentDocument : frame.document;
            } catch(err) {
                // last attempt
                log('cannot get iframe.contentDocument: ' + err);
                doc = frame.document;
            }
            return doc;
        }

        // Rails CSRF hack (thanks to Yvan Barthelemy)
        var csrf_token = $('meta[name=csrf-token]').attr('content');
        var csrf_param = $('meta[name=csrf-param]').attr('content');
        if (csrf_param && csrf_token) {
            s.extraData = s.extraData || {};
            s.extraData[csrf_param] = csrf_token;
        }

        // take a breath so that pending repaints get some cpu time before the upload starts
        function doSubmit() {
            // make sure form attrs are set
            var t = $form.attr2('target'), 
                a = $form.attr2('action'), 
                mp = 'multipart/form-data',
                et = $form.attr('enctype') || $form.attr('encoding') || mp;

            // update form attrs in IE friendly way
            form.setAttribute('target',id);
            if (!method || /post/i.test(method) ) {
                form.setAttribute('method', 'POST');
            }
            if (a != s.url) {
                form.setAttribute('action', s.url);
            }

            // ie borks in some cases when setting encoding
            if (! s.skipEncodingOverride && (!method || /post/i.test(method))) {
                $form.attr({
                    encoding: 'multipart/form-data',
                    enctype:  'multipart/form-data'
                });
            }

            // support timout
            if (s.timeout) {
                timeoutHandle = setTimeout(function() { timedOut = true; cb(CLIENT_TIMEOUT_ABORT); }, s.timeout);
            }

            // look for server aborts
            function checkState() {
                try {
                    var state = getDoc(io).readyState;
                    log('state = ' + state);
                    if (state && state.toLowerCase() == 'uninitialized') {
                        setTimeout(checkState,50);
                    }
                }
                catch(e) {
                    log('Server abort: ' , e, ' (', e.name, ')');
                    cb(SERVER_ABORT);
                    if (timeoutHandle) {
                        clearTimeout(timeoutHandle);
                    }
                    timeoutHandle = undefined;
                }
            }

            // add "extra" data to form if provided in options
            var extraInputs = [];
            try {
                if (s.extraData) {
                    for (var n in s.extraData) {
                        if (s.extraData.hasOwnProperty(n)) {
                           // if using the $.param format that allows for multiple values with the same name
                           if($.isPlainObject(s.extraData[n]) && s.extraData[n].hasOwnProperty('name') && s.extraData[n].hasOwnProperty('value')) {
                               extraInputs.push(
                               $('<input type="hidden" name="'+s.extraData[n].name+'">').val(s.extraData[n].value)
                                   .appendTo(form)[0]);
                           } else {
                               extraInputs.push(
                               $('<input type="hidden" name="'+n+'">').val(s.extraData[n])
                                   .appendTo(form)[0]);
                           }
                        }
                    }
                }

                if (!s.iframeTarget) {
                    // add iframe to doc and submit the form
                    $io.appendTo('body');
                }
                if (io.attachEvent) {
                    io.attachEvent('onload', cb);
                }
                else {
                    io.addEventListener('load', cb, false);
                }
                setTimeout(checkState,15);

                try {
                    form.submit();
                } catch(err) {
                    // just in case form has element with name/id of 'submit'
                    var submitFn = document.createElement('form').submit;
                    submitFn.apply(form);
                }
            }
            finally {
                // reset attrs and remove "extra" input elements
                form.setAttribute('action',a);
                form.setAttribute('enctype', et); // #380
                if(t) {
                    form.setAttribute('target', t);
                } else {
                    $form.removeAttr('target');
                }
                $(extraInputs).remove();
            }
        }

        if (s.forceSync) {
            doSubmit();
        }
        else {
            setTimeout(doSubmit, 10); // this lets dom updates render
        }

        var data, doc, domCheckCount = 50, callbackProcessed;

        function cb(e) {
            if (xhr.aborted || callbackProcessed) {
                return;
            }
            
            doc = getDoc(io);
            if(!doc) {
                log('cannot access response document');
                e = SERVER_ABORT;
            }
            if (e === CLIENT_TIMEOUT_ABORT && xhr) {
                xhr.abort('timeout');
                deferred.reject(xhr, 'timeout');
                return;
            }
            else if (e == SERVER_ABORT && xhr) {
                xhr.abort('server abort');
                deferred.reject(xhr, 'error', 'server abort');
                return;
            }

            if (!doc || doc.location.href == s.iframeSrc) {
                // response not received yet
                if (!timedOut) {
                    return;
                }
            }
            if (io.detachEvent) {
                io.detachEvent('onload', cb);
            }
            else {
                io.removeEventListener('load', cb, false);
            }

            var status = 'success', errMsg;
            try {
                if (timedOut) {
                    throw 'timeout';
                }

                var isXml = s.dataType == 'xml' || doc.XMLDocument || $.isXMLDoc(doc);
                log('isXml='+isXml);
                if (!isXml && window.opera && (doc.body === null || !doc.body.innerHTML)) {
                    if (--domCheckCount) {
                        // in some browsers (Opera) the iframe DOM is not always traversable when
                        // the onload callback fires, so we loop a bit to accommodate
                        log('requeing onLoad callback, DOM not available');
                        setTimeout(cb, 250);
                        return;
                    }
                    // let this fall through because server response could be an empty document
                    //log('Could not access iframe DOM after mutiple tries.');
                    //throw 'DOMException: not available';
                }

                //log('response detected');
                var docRoot = doc.body ? doc.body : doc.documentElement;
                xhr.responseText = docRoot ? docRoot.innerHTML : null;
                xhr.responseXML = doc.XMLDocument ? doc.XMLDocument : doc;
                if (isXml) {
                    s.dataType = 'xml';
                }
                xhr.getResponseHeader = function(header){
                    var headers = {'content-type': s.dataType};
                    return headers[header.toLowerCase()];
                };
                // support for XHR 'status' & 'statusText' emulation :
                if (docRoot) {
                    xhr.status = Number( docRoot.getAttribute('status') ) || xhr.status;
                    xhr.statusText = docRoot.getAttribute('statusText') || xhr.statusText;
                }

                var dt = (s.dataType || '').toLowerCase();
                var scr = /(json|script|text)/.test(dt);
                if (scr || s.textarea) {
                    // see if user embedded response in textarea
                    var ta = doc.getElementsByTagName('textarea')[0];
                    if (ta) {
                        xhr.responseText = ta.value;
                        // support for XHR 'status' & 'statusText' emulation :
                        xhr.status = Number( ta.getAttribute('status') ) || xhr.status;
                        xhr.statusText = ta.getAttribute('statusText') || xhr.statusText;
                    }
                    else if (scr) {
                        // account for browsers injecting pre around json response
                        var pre = doc.getElementsByTagName('pre')[0];
                        var b = doc.getElementsByTagName('body')[0];
                        if (pre) {
                            xhr.responseText = pre.textContent ? pre.textContent : pre.innerText;
                        }
                        else if (b) {
                            xhr.responseText = b.textContent ? b.textContent : b.innerText;
                        }
                    }
                }
                else if (dt == 'xml' && !xhr.responseXML && xhr.responseText) {
                    xhr.responseXML = toXml(xhr.responseText);
                }

                try {
                    data = httpData(xhr, dt, s);
                }
                catch (err) {
                    status = 'parsererror';
                    xhr.error = errMsg = (err || status);
                }
            }
            catch (err) {
                log('error caught: ',err);
                status = 'error';
                xhr.error = errMsg = (err || status);
            }

            if (xhr.aborted) {
                log('upload aborted');
                status = null;
            }

            if (xhr.status) { // we've set xhr.status
                status = (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) ? 'success' : 'error';
            }

            // ordering of these callbacks/triggers is odd, but that's how $.ajax does it
            if (status === 'success') {
                if (s.success) {
                    s.success.call(s.context, data, 'success', xhr);
                }
                deferred.resolve(xhr.responseText, 'success', xhr);
                if (g) {
                    $.event.trigger("ajaxSuccess", [xhr, s]);
                }
            }
            else if (status) {
                if (errMsg === undefined) {
                    errMsg = xhr.statusText;
                }
                if (s.error) {
                    s.error.call(s.context, xhr, status, errMsg);
                }
                deferred.reject(xhr, 'error', errMsg);
                if (g) {
                    $.event.trigger("ajaxError", [xhr, s, errMsg]);
                }
            }

            if (g) {
                $.event.trigger("ajaxComplete", [xhr, s]);
            }

            if (g && ! --$.active) {
                $.event.trigger("ajaxStop");
            }

            if (s.complete) {
                s.complete.call(s.context, xhr, status);
            }

            callbackProcessed = true;
            if (s.timeout) {
                clearTimeout(timeoutHandle);
            }

            // clean up
            setTimeout(function() {
                if (!s.iframeTarget) {
                    $io.remove();
                }
                else { //adding else to clean up existing iframe response.
                    $io.attr('src', s.iframeSrc);
                }
                xhr.responseXML = null;
            }, 100);
        }

        var toXml = $.parseXML || function(s, doc) { // use parseXML if available (jQuery 1.5+)
            if (window.ActiveXObject) {
                doc = new ActiveXObject('Microsoft.XMLDOM');
                doc.async = 'false';
                doc.loadXML(s);
            }
            else {
                doc = (new DOMParser()).parseFromString(s, 'text/xml');
            }
            return (doc && doc.documentElement && doc.documentElement.nodeName != 'parsererror') ? doc : null;
        };
        var parseJSON = $.parseJSON || function(s) {
            /*jslint evil:true */
            return window['eval']('(' + s + ')');
        };

        var httpData = function( xhr, type, s ) { // mostly lifted from jq1.4.4

            var ct = xhr.getResponseHeader('content-type') || '',
                xml = type === 'xml' || !type && ct.indexOf('xml') >= 0,
                data = xml ? xhr.responseXML : xhr.responseText;

            if (xml && data.documentElement.nodeName === 'parsererror') {
                if ($.error) {
                    $.error('parsererror');
                }
            }
            if (s && s.dataFilter) {
                data = s.dataFilter(data, type);
            }
            if (typeof data === 'string') {
                if (type === 'json' || !type && ct.indexOf('json') >= 0) {
                    data = parseJSON(data);
                } else if (type === "script" || !type && ct.indexOf("javascript") >= 0) {
                    $.globalEval(data);
                }
            }
            return data;
        };

        return deferred;
    }
};

/**
 * ajaxForm() provides a mechanism for fully automating form submission.
 *
 * The advantages of using this method instead of ajaxSubmit() are:
 *
 * 1: This method will include coordinates for <input type="image" /> elements (if the element
 *    is used to submit the form).
 * 2. This method will include the submit element's name/value data (for the element that was
 *    used to submit the form).
 * 3. This method binds the submit() method to the form for you.
 *
 * The options argument for ajaxForm works exactly as it does for ajaxSubmit.  ajaxForm merely
 * passes the options argument along after properly binding events for submit elements and
 * the form itself.
 */
$.fn.ajaxForm = function(options) {
    options = options || {};
    options.delegation = options.delegation && $.isFunction($.fn.on);

    // in jQuery 1.3+ we can fix mistakes with the ready state
    if (!options.delegation && this.length === 0) {
        var o = { s: this.selector, c: this.context };
        if (!$.isReady && o.s) {
            log('DOM not ready, queuing ajaxForm');
            $(function() {
                $(o.s,o.c).ajaxForm(options);
            });
            return this;
        }
        // is your DOM ready?  http://docs.jquery.com/Tutorials:Introducing_$(document).ready()
        log('terminating; zero elements found by selector' + ($.isReady ? '' : ' (DOM not ready)'));
        return this;
    }

    if ( options.delegation ) {
        $(document)
            .off('submit.form-plugin', this.selector, doAjaxSubmit)
            .off('click.form-plugin', this.selector, captureSubmittingElement)
            .on('submit.form-plugin', this.selector, options, doAjaxSubmit)
            .on('click.form-plugin', this.selector, options, captureSubmittingElement);
        return this;
    }

    return this.ajaxFormUnbind()
        .bind('submit.form-plugin', options, doAjaxSubmit)
        .bind('click.form-plugin', options, captureSubmittingElement);
};

// private event handlers
function doAjaxSubmit(e) {
    /*jshint validthis:true */
    var options = e.data;
    if (!e.isDefaultPrevented()) { // if event has been canceled, don't proceed
        e.preventDefault();
        $(e.target).ajaxSubmit(options); // #365
    }
}

function captureSubmittingElement(e) {
    /*jshint validthis:true */
    var target = e.target;
    var $el = $(target);
    if (!($el.is("[type=submit],[type=image]"))) {
        // is this a child element of the submit el?  (ex: a span within a button)
        var t = $el.closest('[type=submit]');
        if (t.length === 0) {
            return;
        }
        target = t[0];
    }
    var form = this;
    form.clk = target;
    if (target.type == 'image') {
        if (e.offsetX !== undefined) {
            form.clk_x = e.offsetX;
            form.clk_y = e.offsetY;
        } else if (typeof $.fn.offset == 'function') {
            var offset = $el.offset();
            form.clk_x = e.pageX - offset.left;
            form.clk_y = e.pageY - offset.top;
        } else {
            form.clk_x = e.pageX - target.offsetLeft;
            form.clk_y = e.pageY - target.offsetTop;
        }
    }
    // clear form vars
    setTimeout(function() { form.clk = form.clk_x = form.clk_y = null; }, 100);
}


// ajaxFormUnbind unbinds the event handlers that were bound by ajaxForm
$.fn.ajaxFormUnbind = function() {
    return this.unbind('submit.form-plugin click.form-plugin');
};

/**
 * formToArray() gathers form element data into an array of objects that can
 * be passed to any of the following ajax functions: $.get, $.post, or load.
 * Each object in the array has both a 'name' and 'value' property.  An example of
 * an array for a simple login form might be:
 *
 * [ { name: 'username', value: 'jresig' }, { name: 'password', value: 'secret' } ]
 *
 * It is this array that is passed to pre-submit callback functions provided to the
 * ajaxSubmit() and ajaxForm() methods.
 */
$.fn.formToArray = function(semantic, elements) {
    var a = [];
    if (this.length === 0) {
        return a;
    }

    var form = this[0];
    var formId = this.attr('id');
    var els = semantic ? form.getElementsByTagName('*') : form.elements;
    var els2;

    if (els && !/MSIE [678]/.test(navigator.userAgent)) { // #390
        els = $(els).get();  // convert to standard array
    }

    // #386; account for inputs outside the form which use the 'form' attribute
    if ( formId ) {
        els2 = $(':input[form="' + formId + '"]').get(); // hat tip @thet
        if ( els2.length ) {
            els = (els || []).concat(els2);
        }
    }

    if (!els || !els.length) {
        return a;
    }

    var i,j,n,v,el,max,jmax;
    for(i=0, max=els.length; i < max; i++) {
        el = els[i];
        n = el.name;
        if (!n || el.disabled) {
            continue;
        }

        if (semantic && form.clk && el.type == "image") {
            // handle image inputs on the fly when semantic == true
            if(form.clk == el) {
                a.push({name: n, value: $(el).val(), type: el.type });
                a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
            }
            continue;
        }

        v = $.fieldValue(el, true);
        if (v && v.constructor == Array) {
            if (elements) {
                elements.push(el);
            }
            for(j=0, jmax=v.length; j < jmax; j++) {
                a.push({name: n, value: v[j]});
            }
        }
        else if (feature.fileapi && el.type == 'file') {
            if (elements) {
                elements.push(el);
            }
            var files = el.files;
            if (files.length) {
                for (j=0; j < files.length; j++) {
                    a.push({name: n, value: files[j], type: el.type});
                }
            }
            else {
                // #180
                a.push({ name: n, value: '', type: el.type });
            }
        }
        else if (v !== null && typeof v != 'undefined') {
            if (elements) {
                elements.push(el);
            }
            a.push({name: n, value: v, type: el.type, required: el.required});
        }
    }

    if (!semantic && form.clk) {
        // input type=='image' are not found in elements array! handle it here
        var $input = $(form.clk), input = $input[0];
        n = input.name;
        if (n && !input.disabled && input.type == 'image') {
            a.push({name: n, value: $input.val()});
            a.push({name: n+'.x', value: form.clk_x}, {name: n+'.y', value: form.clk_y});
        }
    }
    return a;
};

/**
 * Serializes form data into a 'submittable' string. This method will return a string
 * in the format: name1=value1&amp;name2=value2
 */
$.fn.formSerialize = function(semantic) {
    //hand off to jQuery.param for proper encoding
    return $.param(this.formToArray(semantic));
};

/**
 * Serializes all field elements in the jQuery object into a query string.
 * This method will return a string in the format: name1=value1&amp;name2=value2
 */
$.fn.fieldSerialize = function(successful) {
    var a = [];
    this.each(function() {
        var n = this.name;
        if (!n) {
            return;
        }
        var v = $.fieldValue(this, successful);
        if (v && v.constructor == Array) {
            for (var i=0,max=v.length; i < max; i++) {
                a.push({name: n, value: v[i]});
            }
        }
        else if (v !== null && typeof v != 'undefined') {
            a.push({name: this.name, value: v});
        }
    });
    //hand off to jQuery.param for proper encoding
    return $.param(a);
};

/**
 * Returns the value(s) of the element in the matched set.  For example, consider the following form:
 *
 *  <form><fieldset>
 *      <input name="A" type="text" />
 *      <input name="A" type="text" />
 *      <input name="B" type="checkbox" value="B1" />
 *      <input name="B" type="checkbox" value="B2"/>
 *      <input name="C" type="radio" value="C1" />
 *      <input name="C" type="radio" value="C2" />
 *  </fieldset></form>
 *
 *  var v = $('input[type=text]').fieldValue();
 *  // if no values are entered into the text inputs
 *  v == ['','']
 *  // if values entered into the text inputs are 'foo' and 'bar'
 *  v == ['foo','bar']
 *
 *  var v = $('input[type=checkbox]').fieldValue();
 *  // if neither checkbox is checked
 *  v === undefined
 *  // if both checkboxes are checked
 *  v == ['B1', 'B2']
 *
 *  var v = $('input[type=radio]').fieldValue();
 *  // if neither radio is checked
 *  v === undefined
 *  // if first radio is checked
 *  v == ['C1']
 *
 * The successful argument controls whether or not the field element must be 'successful'
 * (per http://www.w3.org/TR/html4/interact/forms.html#successful-controls).
 * The default value of the successful argument is true.  If this value is false the value(s)
 * for each element is returned.
 *
 * Note: This method *always* returns an array.  If no valid value can be determined the
 *    array will be empty, otherwise it will contain one or more values.
 */
$.fn.fieldValue = function(successful) {
    for (var val=[], i=0, max=this.length; i < max; i++) {
        var el = this[i];
        var v = $.fieldValue(el, successful);
        if (v === null || typeof v == 'undefined' || (v.constructor == Array && !v.length)) {
            continue;
        }
        if (v.constructor == Array) {
            $.merge(val, v);
        }
        else {
            val.push(v);
        }
    }
    return val;
};

/**
 * Returns the value of the field element.
 */
$.fieldValue = function(el, successful) {
    var n = el.name, t = el.type, tag = el.tagName.toLowerCase();
    if (successful === undefined) {
        successful = true;
    }

    if (successful && (!n || el.disabled || t == 'reset' || t == 'button' ||
        (t == 'checkbox' || t == 'radio') && !el.checked ||
        (t == 'submit' || t == 'image') && el.form && el.form.clk != el ||
        tag == 'select' && el.selectedIndex == -1)) {
            return null;
    }

    if (tag == 'select') {
        var index = el.selectedIndex;
        if (index < 0) {
            return null;
        }
        var a = [], ops = el.options;
        var one = (t == 'select-one');
        var max = (one ? index+1 : ops.length);
        for(var i=(one ? index : 0); i < max; i++) {
            var op = ops[i];
            if (op.selected) {
                var v = op.value;
                if (!v) { // extra pain for IE...
                    v = (op.attributes && op.attributes.value && !(op.attributes.value.specified)) ? op.text : op.value;
                }
                if (one) {
                    return v;
                }
                a.push(v);
            }
        }
        return a;
    }
    return $(el).val();
};

/**
 * Clears the form data.  Takes the following actions on the form's input fields:
 *  - input text fields will have their 'value' property set to the empty string
 *  - select elements will have their 'selectedIndex' property set to -1
 *  - checkbox and radio inputs will have their 'checked' property set to false
 *  - inputs of type submit, button, reset, and hidden will *not* be effected
 *  - button elements will *not* be effected
 */
$.fn.clearForm = function(includeHidden) {
    return this.each(function() {
        $('input,select,textarea', this).clearFields(includeHidden);
    });
};

/**
 * Clears the selected form elements.
 */
$.fn.clearFields = $.fn.clearInputs = function(includeHidden) {
    var re = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; // 'hidden' is not in this list
    return this.each(function() {
        var t = this.type, tag = this.tagName.toLowerCase();
        if (re.test(t) || tag == 'textarea') {
            this.value = '';
        }
        else if (t == 'checkbox' || t == 'radio') {
            this.checked = false;
        }
        else if (tag == 'select') {
            this.selectedIndex = -1;
        }
        else if (t == "file") {
            if (/MSIE/.test(navigator.userAgent)) {
                $(this).replaceWith($(this).clone(true));
            } else {
                $(this).val('');
            }
        }
        else if (includeHidden) {
            // includeHidden can be the value true, or it can be a selector string
            // indicating a special test; for example:
            //  $('#myForm').clearForm('.special:hidden')
            // the above would clean hidden inputs that have the class of 'special'
            if ( (includeHidden === true && /hidden/.test(t)) ||
                 (typeof includeHidden == 'string' && $(this).is(includeHidden)) ) {
                this.value = '';
            }
        }
    });
};

/**
 * Resets the form data.  Causes all form elements to be reset to their original value.
 */
$.fn.resetForm = function() {
    return this.each(function() {
        // guard against an input with the name of 'reset'
        // note that IE reports the reset function as an 'object'
        if (typeof this.reset == 'function' || (typeof this.reset == 'object' && !this.reset.nodeType)) {
            this.reset();
        }
    });
};

/**
 * Enables or disables any matching elements.
 */
$.fn.enable = function(b) {
    if (b === undefined) {
        b = true;
    }
    return this.each(function() {
        this.disabled = !b;
    });
};

/**
 * Checks/unchecks any matching checkboxes or radio buttons and
 * selects/deselects and matching option elements.
 */
$.fn.selected = function(select) {
    if (select === undefined) {
        select = true;
    }
    return this.each(function() {
        var t = this.type;
        if (t == 'checkbox' || t == 'radio') {
            this.checked = select;
        }
        else if (this.tagName.toLowerCase() == 'option') {
            var $sel = $(this).parent('select');
            if (select && $sel[0] && $sel[0].type == 'select-one') {
                // deselect all other options
                $sel.find('option').selected(false);
            }
            this.selected = select;
        }
    });
};

// expose debug var
$.fn.ajaxSubmit.debug = false;

// helper fn for console logging
function log() {
    if (!$.fn.ajaxSubmit.debug) {
        return;
    }
    var msg = '[jquery.form] ' + Array.prototype.join.call(arguments,'');
    if (window.console && window.console.log) {
        window.console.log(msg);
    }
    else if (window.opera && window.opera.postError) {
        window.opera.postError(msg);
    }
}

}));
/*
    通用表单验证方法
    Validform version 5.3.2
	By sean during April 7, 2010 - March 26, 2013
	For more information, please visit http://validform.rjboy.cn
	Validform is available under the terms of the MIT license.
	
	Demo:
	$(".demoform").Validform({//$(".demoform")指明是哪一表单需要验证,名称需加在form表单上;
		btnSubmit:"#btn_sub", //#btn_sub是该表单下要绑定点击提交表单事件的按钮;如果form内含有submit按钮该参数可省略;
		btnReset:".btn_reset",//可选项 .btn_reset是该表单下要绑定点击重置表单事件的按钮;
		tiptype:1, //可选项 1=>pop box,2=>side tip(parent.next.find; with default pop),3=>side tip(siblings; with default pop),4=>side tip(siblings; none pop)，默认为1，也可以传入一个function函数，自定义提示信息的显示方式（可以实现你想要的任何效果，具体参见demo页）;
		ignoreHidden:false,//可选项 true | false 默认为false，当为true时对:hidden的表单元素将不做验证;
		dragonfly:false,//可选项 true | false 默认false，当为true时，值为空时不做验证；
		tipSweep:true,//可选项 true | false 默认为false，只在表单提交时触发检测，blur事件将不会触发检测（实时验证会在后台进行，不会显示检测结果）;
		label:".label",//可选项 选择符，在没有绑定nullmsg时查找要显示的提示文字，默认查找".Validform_label"下的文字;
		showAllError:false,//可选项 true | false，true：提交表单时所有错误提示信息都会显示，false：一碰到验证不通过的就停止检测后面的元素，只显示该元素的错误信息;
		postonce:true, //可选项 表单是否只能提交一次，true开启，不填则默认关闭;
		ajaxPost:true, //使用ajax方式提交表单数据，默认false，提交地址就是action指定地址;
		datatype:{//传入自定义datatype类型，可以是正则，也可以是函数（函数内会传入一个参数）;
			"*6-20": /^[^\s]{6,20}$/,
			"z2-4" : /^[\u4E00-\u9FA5\uf900-\ufa2d]{2,4}$/,
			"username":function(gets,obj,curform,regxp){
				//参数gets是获取到的表单元素值，obj为当前表单元素，curform为当前验证的表单，regxp为内置的一些正则表达式的引用;
				var reg1=/^[\w\.]{4,16}$/,
					reg2=/^[\u4E00-\u9FA5\uf900-\ufa2d]{2,8}$/;
				
				if(reg1.test(gets)){return true;}
				if(reg2.test(gets)){return true;}
				return false;
				
				//注意return可以返回true 或 false 或 字符串文字，true表示验证通过，返回字符串表示验证失败，字符串作为错误提示显示，返回false则用errmsg或默认的错误提示;
			},
			"phone":function(){
				// 5.0 版本之后，要实现二选一的验证效果，datatype 的名称 不 需要以 "option_" 开头;	
			}
		},
		usePlugin:{
			swfupload:{},
			datepicker:{},
			passwordstrength:{},
			jqtransform:{
				selector:"select,input"
			}
		},
		beforeCheck:function(curform){
			//在表单提交执行验证之前执行的函数，curform参数是当前表单对象。
			//这里明确return false的话将不会继续执行验证操作;	
		},
		beforeSubmit:function(curform){
			//在验证成功后，表单提交前执行的函数，curform参数是当前表单对象。
			//这里明确return false的话表单将不会提交;	
		},
		callback:function(data){
			//返回数据data是json格式，{"info":"demo info","status":"y"}
			//info: 输出提示信息;
			//status: 返回提交数据的状态,是否提交成功。如可以用"y"表示提交成功，"n"表示提交失败，在ajax_post.php文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作;
			//你也可以在ajax_post.php文件返回更多信息在这里获取，进行相应操作；
			//ajax遇到服务端错误时也会执行回调，这时的data是{ status:**, statusText:**, readyState:**, responseText:** }；
			
			//这里执行回调操作;
			//注意：如果不是ajax方式提交表单，传入callback，这时data参数是当前表单对象，回调函数会在表单验证全部通过后执行，然后判断是否提交表单，如果callback里明确return false，则表单不会提交，如果return true或没有return，则会提交表单。
		}
	});
	
	Validform对象的方法和属性：
	tipmsg：自定义提示信息，通过修改Validform对象的这个属性值来让同一个页面的不同表单使用不同的提示文字；
	dataType：获取内置的一些正则；
	eq(n)：获取Validform对象的第n个元素;
	ajaxPost(flag,sync,url)：以ajax方式提交表单。flag为true时，跳过验证直接提交，sync为true时将以同步的方式进行ajax提交，传入了url地址时，表单会提交到这个地址；
	abort()：终止ajax的提交；
	submitForm(flag,url)：以参数里设置的方式提交表单，flag为true时，跳过验证直接提交，传入了url地址时，表单会提交到这个地址；
	resetForm()：重置表单；
	resetStatus()：重置表单的提交状态。传入了postonce参数的话，表单成功提交后状态会设置为"posted"，重置提交状态可以让表单继续可以提交；
	getStatus()：获取表单的提交状态，normal：未提交，posting：正在提交，posted：已成功提交过；
	setStatus(status)：设置表单的提交状态，可以设置normal，posting，posted三种状态，不传参则设置状态为posting，这个状态表单可以验证，但不能提交；
	ignore(selector)：忽略对所选择对象的验证；
	unignore(selector)：将ignore方法所忽略验证的对象重新获取验证效果；
	addRule(rule)：可以通过Validform对象的这个方法来给表单元素绑定验证规则；
	check(bool,selector):对指定对象进行验证(默认验证当前整个表单)，通过返回true，否则返回false（绑定实时验证的对象，格式符合要求时返回true，而不会等ajax的返回结果），bool为true时则只验证不显示提示信息；
	config(setup):可以通过这个方法来修改初始化参数，指定表单的提交地址，给表单ajax和实时验证的ajax里设置参数；
*/


(function($,win,undef){
	var errorobj=null,//指示当前验证失败的表单元素;
		msgobj=null,//pop box object 
		msghidden=true;//msgbox hidden?

	var tipmsg={//默认提示文字;
		tit:"提示信息",
		w:{
			"*":"不能为空！",
			"*6-16":"请填写6到16位任意字符！",
			"n":"请填写数字！",
			"n6-16":"请填写6到16位数字！",
			"s":"不能输入特殊字符！",
			"s6-18":"请填写6到18位字符！",
			"p":"请填写邮政编码！",
			"m":"请填写手机号码！",
			"e":"邮箱地址格式不对！",
			"url":"请填写网址！"
		},
		def:"请填写正确信息！",
		undef:"datatype未定义！",
		reck:"两次输入的内容不一致！",
		r:"通过信息验证！",
		c:"正在检测信息…",
		s:"请{填写|选择}{0|信息}！",
		v:"所填信息没有经过验证，请稍后…",
		p:"正在提交数据…"
	}
	$.Tipmsg=tipmsg;
	
	var Validform=function(forms,settings,inited){
		var settings=$.extend({},Validform.defaults,settings);
		settings.datatype && $.extend(Validform.util.dataType,settings.datatype);
		
		var brothers=this;
		brothers.tipmsg={w:{}};
		brothers.forms=forms;
		brothers.objects=[];
		
		//创建子对象时不再绑定事件;
		if(inited===true){
			return false;
		}
		
		forms.each(function(){
			//已经绑定事件时跳过，避免事件重复绑定;
			if(this.validform_inited=="inited"){return true;}
			this.validform_inited="inited";
			
			var curform=this;
			curform.settings=$.extend({},settings);
			
			var $this=$(curform);
			
			//防止表单按钮双击提交两次;
			curform.validform_status="normal"; //normal | posting | posted;
			
			//让每个Validform对象都能自定义tipmsg;	
			$this.data("tipmsg",brothers.tipmsg);

			//bind the blur event;
			$this.delegate("[datatype]","blur",function(){
				//判断是否是在提交表单操作时触发的验证请求；
				var subpost=arguments[1];
				Validform.util.check.call(this,$this,subpost);
			});
			
			$this.delegate(":text","keypress",function(event){
				if(event.keyCode==13 && $this.find(":submit").length==0){
					$this.submit();
				}
			});
			
			//点击表单元素，默认文字消失效果;
			//表单元素值比较时的信息提示增强;
			//radio、checkbox提示信息增强;
			//外调插件初始化;
			Validform.util.enhance.call($this,curform.settings.tiptype,curform.settings.usePlugin,curform.settings.tipSweep);
			
			curform.settings.btnSubmit && $this.find(curform.settings.btnSubmit).bind("click",function(){
				$this.trigger("submit");
				return false;
			});
						
			$this.submit(function(){
				var subflag=Validform.util.submitForm.call($this,curform.settings);
				subflag === undef && (subflag=true);
				return subflag;
			});
			
			$this.find("[type='reset']").add($this.find(curform.settings.btnReset)).bind("click",function(){
				Validform.util.resetForm.call($this);
			});
			
		});
		
		//预创建pop box;
		if( settings.tiptype==1 || (settings.tiptype==2 || settings.tiptype==3) && settings.ajaxPost ){		
			creatMsgbox();
		}
	}
	
	Validform.defaults={
		tiptype:1,
		tipSweep:false,
		showAllError:false,
		postonce:true,
		ajaxPost:false
	}
	
	Validform.util={
		dataType:{
			"*":/[\w\W]+/,
			"*6-16":/^[\w\W]{6,16}$/,
			"n":/^\d+$/,
			"n6-16":/^\d{6,16}$/,
			"s":/^[\u4E00-\u9FA5\uf900-\ufa2d\w\.\s]+$/,
			"s6-18":/^[\u4E00-\u9FA5\uf900-\ufa2d\w\.\s]{6,18}$/,
			"p":/^[0-9]{6}$/,
			"m":/^13[0-9]{9}$|14[0-9]{9}|15[0-9]{9}$|18[0-9]{9}$/,
			"e":/^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
			"url":/^(\w+:\/\/)?\w+(\.\w+)+.*$/
		},
		
		toString:Object.prototype.toString,
		
		isEmpty:function(val){
			return val==="" || val===$.trim(this.attr("tip"));
		},
		
		getValue:function(obj){
			var inputval,
				curform=this;
				
			if(obj.is(":radio")){
				inputval=curform.find(":radio[name='"+obj.attr("name")+"']:checked").val();
				inputval= inputval===undef ? "" : inputval;
			}else if(obj.is(":checkbox")){
				inputval="";
				curform.find(":checkbox[name='"+obj.attr("name")+"']:checked").each(function(){ 
					inputval +=$(this).val()+','; 
				})
				inputval= inputval===undef ? "" : inputval;
			}else{
				inputval=obj.val();
			}
			inputval=$.trim(inputval);
			
			return Validform.util.isEmpty.call(obj,inputval) ? "" : inputval;
		},
		
		enhance:function(tiptype,usePlugin,tipSweep,addRule){
			var curform=this;
			
			//页面上不存在提示信息的标签时，自动创建;
			curform.find("[datatype]").each(function(){
				if(tiptype==2){
					if($(this).parent().next().find(".Validform_checktip").length==0){
						$(this).parent().next().append("<span class='Validform_checktip' />");
						$(this).siblings(".Validform_checktip").remove();
					}
				}else if(tiptype==3 || tiptype==4){
					if($(this).siblings(".Validform_checktip").length==0){
						$(this).parent().append("<span class='Validform_checktip' />");
						$(this).parent().next().find(".Validform_checktip").remove();
					}
				}
			})
			
			//表单元素值比较时的信息提示增强;
			curform.find("input[recheck]").each(function(){
				//已经绑定事件时跳过;
				if(this.validform_inited=="inited"){return true;}
				this.validform_inited="inited";
				
				var _this=$(this);
				var recheckinput=curform.find("input[name='"+$(this).attr("recheck")+"']");
				recheckinput.bind("keyup",function(){
					if(recheckinput.val()==_this.val() && recheckinput.val() != ""){
						if(recheckinput.attr("tip")){
							if(recheckinput.attr("tip") == recheckinput.val()){return false;}
						}
						_this.trigger("blur");
					}
				}).bind("blur",function(){
					if(recheckinput.val()!=_this.val() && _this.val()!=""){
						if(_this.attr("tip")){
							if(_this.attr("tip") == _this.val()){return false;}	
						}
						_this.trigger("blur");
					}
				});
			});
			
			//hasDefaultText;
			curform.find("[tip]").each(function(){//tip是表单元素的默认提示信息,这是点击清空效果;
				//已经绑定事件时跳过;
				if(this.validform_inited=="inited"){return true;}
				this.validform_inited="inited";
				
				var defaultvalue=$(this).attr("tip");
				var altercss=$(this).attr("altercss");
				$(this).focus(function(){
					if($(this).val()==defaultvalue){
						$(this).val('');
						if(altercss){$(this).removeClass(altercss);}
					}
				}).blur(function(){
					if($.trim($(this).val())===''){
						$(this).val(defaultvalue);
						if(altercss){$(this).addClass(altercss);}
					}
				});
			});
			
			//enhance info feedback for checkbox & radio;
			curform.find(":checkbox[datatype],:radio[datatype]").each(function(){
				//已经绑定事件时跳过;
				if(this.validform_inited=="inited"){return true;}
				this.validform_inited="inited";
				
				var _this=$(this);
				var name=_this.attr("name");
				curform.find("[name='"+name+"']").filter(":checkbox,:radio").bind("click",function(){
					//避免多个事件绑定时的取值滞后问题;
					setTimeout(function(){
						_this.trigger("blur");
					},0);
				});
				
			});
			
			//select multiple;
			curform.find("select[datatype][multiple]").bind("click",function(){
				var _this=$(this);
				setTimeout(function(){
					_this.trigger("blur");
				},0);
			});
			
			//plugins here to start;
			Validform.util.usePlugin.call(curform,usePlugin,tiptype,tipSweep,addRule);
		},
		
		usePlugin:function(plugin,tiptype,tipSweep,addRule){
			/*
				plugin:settings.usePlugin;
				tiptype:settings.tiptype;
				tipSweep:settings.tipSweep;
				addRule:是否在addRule时触发;
			*/

			var curform=this,
				plugin=plugin || {};
			//swfupload;
			if(curform.find("input[plugin='swfupload']").length && typeof(swfuploadhandler) != "undefined"){
				
				var custom={
						custom_settings:{
							form:curform,
							showmsg:function(msg,type,obj){
								Validform.util.showmsg.call(curform,msg,tiptype,{obj:curform.find("input[plugin='swfupload']"),type:type,sweep:tipSweep});	
							}	
						}	
					};

				custom=$.extend(true,{},plugin.swfupload,custom);
				
				curform.find("input[plugin='swfupload']").each(function(n){
					if(this.validform_inited=="inited"){return true;}
					this.validform_inited="inited";
					
					$(this).val("");
					swfuploadhandler.init(custom,n);
				});
				
			}
			
			//datepicker;
			if(curform.find("input[plugin='datepicker']").length && $.fn.datePicker){
				plugin.datepicker=plugin.datepicker || {};
				
				if(plugin.datepicker.format){
					Date.format=plugin.datepicker.format; 
					delete plugin.datepicker.format;
				}
				if(plugin.datepicker.firstDayOfWeek){
					Date.firstDayOfWeek=plugin.datepicker.firstDayOfWeek; 
					delete plugin.datepicker.firstDayOfWeek;
				}

				curform.find("input[plugin='datepicker']").each(function(n){
					if(this.validform_inited=="inited"){return true;}
					this.validform_inited="inited";
					
					plugin.datepicker.callback && $(this).bind("dateSelected",function(){
						var d=new Date( $.event._dpCache[this._dpId].getSelected()[0] ).asString(Date.format);
						plugin.datepicker.callback(d,this);
					});
					$(this).datePicker(plugin.datepicker);
				});
			}
			
			//passwordstrength;
			if(curform.find("input[plugin*='passwordStrength']").length && $.fn.passwordStrength){
				plugin.passwordstrength=plugin.passwordstrength || {};
				plugin.passwordstrength.showmsg=function(obj,msg,type){
					Validform.util.showmsg.call(curform,msg,tiptype,{obj:obj,type:type,sweep:tipSweep});
				};
				
				curform.find("input[plugin='passwordStrength']").each(function(n){
					if(this.validform_inited=="inited"){return true;}
					this.validform_inited="inited";
					
					$(this).passwordStrength(plugin.passwordstrength);
				});
			}
			
			//jqtransform;
			if(addRule!="addRule" && plugin.jqtransform && $.fn.jqTransSelect){
				if(curform[0].jqTransSelected=="true"){return;};
				curform[0].jqTransSelected="true";
				
				var jqTransformHideSelect = function(oTarget){
					var ulVisible = $('.jqTransformSelectWrapper ul:visible');
					ulVisible.each(function(){
						var oSelect = $(this).parents(".jqTransformSelectWrapper:first").find("select").get(0);
						//do not hide if click on the label object associated to the select
						if( !(oTarget && oSelect.oLabel && oSelect.oLabel.get(0) == oTarget.get(0)) ){$(this).hide();}
					});
				};
				
				/* Check for an external click */
				var jqTransformCheckExternalClick = function(event) {
					if ($(event.target).parents('.jqTransformSelectWrapper').length === 0) { jqTransformHideSelect($(event.target)); }
				};
				
				var jqTransformAddDocumentListener = function (){
					$(document).mousedown(jqTransformCheckExternalClick);
				};
				
				if(plugin.jqtransform.selector){
					curform.find(plugin.jqtransform.selector).filter('input:submit, input:reset, input[type="button"]').jqTransInputButton();
					curform.find(plugin.jqtransform.selector).filter('input:text, input:password').jqTransInputText();			
					curform.find(plugin.jqtransform.selector).filter('input:checkbox').jqTransCheckBox();
					curform.find(plugin.jqtransform.selector).filter('input:radio').jqTransRadio();
					curform.find(plugin.jqtransform.selector).filter('textarea').jqTransTextarea();
					if(curform.find(plugin.jqtransform.selector).filter("select").length > 0 ){
						 curform.find(plugin.jqtransform.selector).filter("select").jqTransSelect();
						 jqTransformAddDocumentListener();
					}
					
				}else{
					curform.jqTransform();
				}
				
				curform.find(".jqTransformSelectWrapper").find("li a").click(function(){
					$(this).parents(".jqTransformSelectWrapper").find("select").trigger("blur");	
				});
			}

		},
		
		getNullmsg:function(curform){
			var obj=this;
			var reg=/[\u4E00-\u9FA5\uf900-\ufa2da-zA-Z\s]+/g;
			var nullmsg;
			
			var label=curform[0].settings.label || ".Validform_label";
			label=obj.siblings(label).eq(0).text() || obj.siblings().find(label).eq(0).text() || obj.parent().siblings(label).eq(0).text() || obj.parent().siblings().find(label).eq(0).text();
			label=label.replace(/\s(?![a-zA-Z])/g,"").match(reg);
			label=label? label.join("") : [""];

			reg=/\{(.+)\|(.+)\}/;
			nullmsg=curform.data("tipmsg").s || tipmsg.s;
			
			if(label != ""){
				nullmsg=nullmsg.replace(/\{0\|(.+)\}/,label);
				if(obj.attr("recheck")){
					nullmsg=nullmsg.replace(/\{(.+)\}/,"");
					obj.attr("nullmsg",nullmsg);
					return nullmsg;
				}
			}else{
				nullmsg=obj.is(":checkbox,:radio,select") ? nullmsg.replace(/\{0\|(.+)\}/,"") : nullmsg.replace(/\{0\|(.+)\}/,"$1");
			}
			nullmsg=obj.is(":checkbox,:radio,select") ? nullmsg.replace(reg,"$2") : nullmsg.replace(reg,"$1");
			
			obj.attr("nullmsg",nullmsg);
			return nullmsg;
		},
		
		getErrormsg:function(curform,datatype,recheck){
			var regxp=/^(.+?)((\d+)-(\d+))?$/,
				regxp2=/^(.+?)(\d+)-(\d+)$/,
				regxp3=/(.*?)\d+(.+?)\d+(.*)/,
				mac=datatype.match(regxp),
				temp,str;
			
			//如果是值不一样而报错;
			if(recheck=="recheck"){
				str=curform.data("tipmsg").reck || tipmsg.reck;
				return str;
			}
			
			var tipmsg_w_ex=$.extend({},tipmsg.w,curform.data("tipmsg").w);
			
			//如果原来就有，直接显示该项的提示信息;
			if(mac[0] in tipmsg_w_ex){
				return curform.data("tipmsg").w[mac[0]] || tipmsg.w[mac[0]];
			}
			
			//没有的话在提示对象里查找相似;
			for(var name in tipmsg_w_ex){
				if(name.indexOf(mac[1])!=-1 && regxp2.test(name)){
					str=(curform.data("tipmsg").w[name] || tipmsg.w[name]).replace(regxp3,"$1"+mac[3]+"$2"+mac[4]+"$3");
					curform.data("tipmsg").w[mac[0]]=str;
					
					return str;
				}
				
			}
			
			return curform.data("tipmsg").def || tipmsg.def;
		},

		_regcheck:function(datatype,gets,obj,curform){
			var curform=curform,
				info=null,
				passed=false,
				reg=/\/.+\//g,
				regex=/^(.+?)(\d+)-(\d+)$/,
				type=3;//default set to wrong type, 2,3,4;
				
			//datatype有三种情况：正则，函数和直接绑定的正则;
			
			//直接是正则;
			if(reg.test(datatype)){
				var regstr=datatype.match(reg)[0].slice(1,-1);
				var param=datatype.replace(reg,"");
				var rexp=RegExp(regstr,param);

				passed=rexp.test(gets);

			//function;
			}else if(Validform.util.toString.call(Validform.util.dataType[datatype])=="[object Function]"){
				passed=Validform.util.dataType[datatype](gets,obj,curform,Validform.util.dataType);
				if(passed === true || passed===undef){
					passed = true;
				}else{
					info= passed;
					passed=false;
				}
			
			//自定义正则;	
			}else{
				//自动扩展datatype;
				if(!(datatype in Validform.util.dataType)){
					var mac=datatype.match(regex),
						temp;
						
					if(!mac){
						passed=false;
						info=curform.data("tipmsg").undef||tipmsg.undef;
					}else{
						for(var name in Validform.util.dataType){
							temp=name.match(regex);
							if(!temp){continue;}
							if(mac[1]===temp[1]){
								var str=Validform.util.dataType[name].toString(),
									param=str.match(/\/[mgi]*/g)[1].replace("\/",""),
									regxp=new RegExp("\\{"+temp[2]+","+temp[3]+"\\}","g");
								str=str.replace(/\/[mgi]*/g,"\/").replace(regxp,"{"+mac[2]+","+mac[3]+"}").replace(/^\//,"").replace(/\/$/,"");
								Validform.util.dataType[datatype]=new RegExp(str,param);
								break;
							}	
						}
					}
				}
				
				if(Validform.util.toString.call(Validform.util.dataType[datatype])=="[object RegExp]"){
					passed=Validform.util.dataType[datatype].test(gets);
				}
					
			}
			
			
			if(passed){
				type=2;
				info=obj.attr("sucmsg") || curform.data("tipmsg").r||tipmsg.r;
				
				//规则验证通过后，还需要对绑定recheck的对象进行值比较;
				if(obj.attr("recheck")){
					var theother=curform.find("input[name='"+obj.attr("recheck")+"']:first");
					if(gets!=theother.val()){
						passed=false;
						type=3;
						info=obj.attr("errormsg")  || Validform.util.getErrormsg.call(obj,curform,datatype,"recheck");
					}
				}
			}else{
				info=info || obj.attr("errormsg") || Validform.util.getErrormsg.call(obj,curform,datatype);
				
				//验证不通过且为空时;
				if(Validform.util.isEmpty.call(obj,gets)){
					info=obj.attr("nullmsg") || Validform.util.getNullmsg.call(obj,curform);
				}
			}
			
			return{
					passed:passed,
					type:type,
					info:info
			};
			
		},
		
		regcheck:function(datatype,gets,obj){
			/*
				datatype:datatype;
				gets:inputvalue;
				obj:input object;
			*/
			var curform=this,
				info=null,
				passed=false,
				type=3;//default set to wrong type, 2,3,4;
				
			//ignore;
			if(obj.attr("ignore")==="ignore" && Validform.util.isEmpty.call(obj,gets)){				
				if(obj.data("cked")){
					info="";	
				}
				
				return {
					passed:true,
					type:4,
					info:info
				};
			}

			obj.data("cked","cked");//do nothing if is the first time validation triggered;
			
			var dtype=Validform.util.parseDatatype(datatype);
			var res;
			for(var eithor=0; eithor<dtype.length; eithor++){
				for(var dtp=0; dtp<dtype[eithor].length; dtp++){
					res=Validform.util._regcheck(dtype[eithor][dtp],gets,obj,curform);
					if(!res.passed){
						break;
					}
				}
				if(res.passed){
					break;
				}
			}
			return res;
			
		},
		
		parseDatatype:function(datatype){
			/*
				字符串里面只能含有一个正则表达式;
				Datatype名称必须是字母，数字、下划线或*号组成;
				datatype="/regexp/|phone|tel,s,e|f,e";
				==>[["/regexp/"],["phone"],["tel","s","e"],["f","e"]];
			*/

			var reg=/\/.+?\/[mgi]*(?=(,|$|\||\s))|[\w\*-]+/g,
				dtype=datatype.match(reg),
				sepor=datatype.replace(reg,"").replace(/\s*/g,"").split(""),
				arr=[],
				m=0;
				
			arr[0]=[];
			arr[0].push(dtype[0]);
			for(var n=0;n<sepor.length;n++){
				if(sepor[n]=="|"){
					m++;
					arr[m]=[];
				}
				arr[m].push(dtype[n+1]);
			}
			
			return arr;
		},

		showmsg:function(msg,type,o,triggered){
			/*
				msg:提示文字;
				type:提示信息显示方式;
				o:{obj:当前对象, type:1=>正在检测 | 2=>通过, sweep:true | false}, 
				triggered:在blur或提交表单触发的验证中，有些情况不需要显示提示文字，如自定义弹出提示框的显示方式，不需要每次blur时就马上弹出提示;
				
				tiptype:1\2\3时都有坑能会弹出自定义提示框
				tiptype:1时在triggered bycheck时不弹框
				tiptype:2\3时在ajax时弹框
				tipSweep为true时在triggered bycheck时不触发showmsg，但ajax出错的情况下要提示
			*/
			
			//如果msg为undefined，那么就没必要执行后面的操作，ignore有可能会出现这情况;
			if(msg==undef){return;}
			
			//tipSweep为true，且当前不是处于错误状态时，blur事件不触发信息显示;
			if(triggered=="bycheck" && o.sweep && (o.obj && !o.obj.is(".Validform_error") || typeof type == "function")){return;}

			$.extend(o,{curform:this});
				
			if(typeof type == "function"){
				type(msg,o,Validform.util.cssctl);
				return;
			}
			
			if(type==1 || triggered=="byajax" && type!=4){
				msgobj.find(".Validform_info").html(msg);
			}
			
			//tiptypt=1时，blur触发showmsg，验证是否通过都不弹框，提交表单触发的话，只要验证出错，就弹框;
			if(type==1 && triggered!="bycheck" && o.type!=2 || triggered=="byajax" && type!=4){
				msghidden=false;
				msgobj.find(".iframe").css("height",msgobj.outerHeight());
				msgobj.show();
				setCenter(msgobj,100);
			}

			if(type==2 && o.obj){
				o.obj.parent().next().find(".Validform_checktip").html(msg);
				Validform.util.cssctl(o.obj.parent().next().find(".Validform_checktip"),o.type);
			}
			
			if((type==3 || type==4) && o.obj){
				o.obj.siblings(".Validform_checktip").html(msg);
				Validform.util.cssctl(o.obj.siblings(".Validform_checktip"),o.type);
			}

		},

		cssctl:function(obj,status){
			switch(status){
				case 1:
					obj.removeClass("Validform_right Validform_wrong").addClass("Validform_checktip Validform_loading");//checking;
					break;
				case 2:
					obj.removeClass("Validform_wrong Validform_loading").addClass("Validform_checktip Validform_right");//passed;
					break;
				case 4:
					obj.removeClass("Validform_right Validform_wrong Validform_loading").addClass("Validform_checktip");//for ignore;
					break;
				default:
					obj.removeClass("Validform_right Validform_loading").addClass("Validform_checktip Validform_wrong");//wrong;
			}
		},
		
		check:function(curform,subpost,bool){
			/*
				检测单个表单元素;
				验证通过返回true，否则返回false、实时验证返回值为ajax;
				bool，传入true则只检测不显示提示信息;
			*/
			var settings=curform[0].settings;
			var subpost=subpost || "";
			var inputval=Validform.util.getValue.call(curform,$(this));
			
			//隐藏或绑定dataIgnore的表单对象不做验证;
			if(settings.ignoreHidden && $(this).is(":hidden") || $(this).data("dataIgnore")==="dataIgnore"){
				return true;
			}
			
			//dragonfly=true时，没有绑定ignore，值为空不做验证，但验证不通过;
			if(settings.dragonfly && !$(this).data("cked") && Validform.util.isEmpty.call($(this),inputval) && $(this).attr("ignore")!="ignore"){
				return false;
			}
			
			var flag=Validform.util.regcheck.call(curform,$(this).attr("datatype"),inputval,$(this));
			
			//值没变化不做检测，这时要考虑recheck情况;
			//不是在提交表单时触发的ajax验证;
			if(inputval==this.validform_lastval && !$(this).attr("recheck") && subpost==""){
				return flag.passed ? true : false;
			}

			this.validform_lastval=inputval;//存储当前值;
			
			var _this;
			errorobj=_this=$(this);
			
			if(!flag.passed){
				//取消正在进行的ajax验证;
				Validform.util.abort.call(_this[0]);
				
				if(!bool){
					//传入"bycheck"，指示当前是check方法里调用的，当tiptype=1时，blur事件不让触发错误信息显示;
					Validform.util.showmsg.call(curform,flag.info,settings.tiptype,{obj:$(this),type:flag.type,sweep:settings.tipSweep},"bycheck");
					
					!settings.tipSweep && _this.addClass("Validform_error");
				}
				return false;
			}
			
			//验证通过的话，如果绑定有ajaxurl，要执行ajax检测;
			//当ignore="ignore"时，为空值可以通过验证，这时不需要ajax检测;
			var ajaxurl=$(this).attr("ajaxurl");
			if(ajaxurl && !Validform.util.isEmpty.call($(this),inputval) && !bool){
				var inputobj=$(this);

				//当提交表单时，表单中的某项已经在执行ajax检测，这时需要让该项ajax结束后继续提交表单;
				if(subpost=="postform"){
					inputobj[0].validform_subpost="postform";
				}else{
					inputobj[0].validform_subpost="";
				}
				
				if(inputobj[0].validform_valid==="posting" && inputval==inputobj[0].validform_ckvalue){return "ajax";}
				
				inputobj[0].validform_valid="posting";
				inputobj[0].validform_ckvalue=inputval;
				Validform.util.showmsg.call(curform,curform.data("tipmsg").c||tipmsg.c,settings.tiptype,{obj:inputobj,type:1,sweep:settings.tipSweep},"bycheck");
				
				Validform.util.abort.call(_this[0]);
				
				var ajaxsetup=$.extend(true,{},settings.ajaxurl || {});
								
				var localconfig={
					type: "POST",
					cache:false,
					url: ajaxurl,
					data: "param="+encodeURIComponent(inputval)+"&name="+encodeURIComponent($(this).attr("name")),
					success: function(data){
						if($.trim(data.status)==="y"){
							inputobj[0].validform_valid="true";
							data.info && inputobj.attr("sucmsg",data.info);
							Validform.util.showmsg.call(curform,inputobj.attr("sucmsg") || curform.data("tipmsg").r||tipmsg.r,settings.tiptype,{obj:inputobj,type:2,sweep:settings.tipSweep},"bycheck");
							_this.removeClass("Validform_error");
							errorobj=null;
							if(inputobj[0].validform_subpost=="postform"){
								curform.trigger("submit");
							}
						}else{
							inputobj[0].validform_valid=data.info;
							Validform.util.showmsg.call(curform,data.info,settings.tiptype,{obj:inputobj,type:3,sweep:settings.tipSweep});
							_this.addClass("Validform_error");
						}
						_this[0].validform_ajax=null;
					},
					error: function(data){
						if(data.status=="200"){
							if(data.responseText=="y"){
								ajaxsetup.success({"status":"y"});
							}else{
								ajaxsetup.success({"status":"n","info":data.responseText});	
							}
							return false;
						}
						
						//正在检测时，要检测的数据发生改变，这时要终止当前的ajax。不是这种情况引起的ajax错误，那么显示相关错误信息;
						if(data.statusText!=="abort"){
							var msg="status: "+data.status+"; statusText: "+data.statusText;
						
							Validform.util.showmsg.call(curform,msg,settings.tiptype,{obj:inputobj,type:3,sweep:settings.tipSweep});
							_this.addClass("Validform_error");
						}
						
						inputobj[0].validform_valid=data.statusText;
						_this[0].validform_ajax=null;
						
						//localconfig.error返回true表示还需要执行temp_err;
						return true;
					}
				}
				
				if(ajaxsetup.success){
					var temp_suc=ajaxsetup.success;
					ajaxsetup.success=function(data){
						localconfig.success(data);
						temp_suc(data,inputobj);
					}
				}
				
				if(ajaxsetup.error){
					var temp_err=ajaxsetup.error;
					ajaxsetup.error=function(data){
						//localconfig.error返回false表示不需要执行temp_err;
						localconfig.error(data) && temp_err(data,inputobj);
					}	
				}

				ajaxsetup=$.extend({},localconfig,ajaxsetup,{dataType:"json"});
				_this[0].validform_ajax=$.ajax(ajaxsetup);
				
				return "ajax";
			}else if(ajaxurl && Validform.util.isEmpty.call($(this),inputval)){
				Validform.util.abort.call(_this[0]);
				_this[0].validform_valid="true";
			}
			
			if(!bool){
				Validform.util.showmsg.call(curform,flag.info,settings.tiptype,{obj:$(this),type:flag.type,sweep:settings.tipSweep},"bycheck");
				_this.removeClass("Validform_error");
			}
			errorobj=null;
			
			return true;
		
		},
		
		submitForm:function(settings,flg,url,ajaxPost,sync){
			/*
				flg===true时跳过验证直接提交;
				ajaxPost==="ajaxPost"指示当前表单以ajax方式提交;
			*/
			var curform=this;
			
			//表单正在提交时点击提交按钮不做反应;
			if(curform[0].validform_status==="posting"){return false;}
			
			//要求只能提交一次时;
			if(settings.postonce && curform[0].validform_status==="posted"){return false;}
			
			var beforeCheck=settings.beforeCheck && settings.beforeCheck(curform);
			if(beforeCheck===false){return false;}
			
			var flag=true,
				inflag;
				
			curform.find("[datatype]").each(function(){
				//跳过验证;
				if(flg){
					return false;
				}
				
				//隐藏或绑定dataIgnore的表单对象不做验证;
				if(settings.ignoreHidden && $(this).is(":hidden") || $(this).data("dataIgnore")==="dataIgnore"){
					return true;
				}
				
				var inputval=Validform.util.getValue.call(curform,$(this)),
					_this;
				errorobj=_this=$(this);
				
				inflag=Validform.util.regcheck.call(curform,$(this).attr("datatype"),inputval,$(this));
				
				if(!inflag.passed){
					Validform.util.showmsg.call(curform,inflag.info,settings.tiptype,{obj:$(this),type:inflag.type,sweep:settings.tipSweep});
					_this.addClass("Validform_error");
					
					if(!settings.showAllError){
						_this.focus();
						flag=false;
						return false;
					}
					
					flag && (flag=false);
					return true;
				}
				
				//当ignore="ignore"时，为空值可以通过验证，这时不需要ajax检测;
				if($(this).attr("ajaxurl") && !Validform.util.isEmpty.call($(this),inputval)){
					if(this.validform_valid!=="true"){
						var thisobj=$(this);
						Validform.util.showmsg.call(curform,curform.data("tipmsg").v||tipmsg.v,settings.tiptype,{obj:thisobj,type:3,sweep:settings.tipSweep});
						_this.addClass("Validform_error");
						
						thisobj.trigger("blur",["postform"]);//continue the form post;
						
						if(!settings.showAllError){
							flag=false;
							return false;
						}
						
						flag && (flag=false);
						return true;
					}
				}else if($(this).attr("ajaxurl") && Validform.util.isEmpty.call($(this),inputval)){
					Validform.util.abort.call(this);
					this.validform_valid="true";
				}

				Validform.util.showmsg.call(curform,inflag.info,settings.tiptype,{obj:$(this),type:inflag.type,sweep:settings.tipSweep});
				_this.removeClass("Validform_error");
				errorobj=null;
			});
			
			if(settings.showAllError){
				curform.find(".Validform_error:first").focus();
			}

			if(flag){
				var beforeSubmit=settings.beforeSubmit && settings.beforeSubmit(curform);
				if(beforeSubmit===false){return false;}
				
				curform[0].validform_status="posting";
							
				if(settings.ajaxPost || ajaxPost==="ajaxPost"){
					//获取配置参数;
					var ajaxsetup=$.extend(true,{},settings.ajaxpost || {});
					//有可能需要动态的改变提交地址，所以把action所指定的url层级设为最低;
					ajaxsetup.url=url || ajaxsetup.url || settings.url || curform.attr("action");
					
					//byajax：ajax时，tiptye为1、2或3需要弹出提示框;
					Validform.util.showmsg.call(curform,curform.data("tipmsg").p||tipmsg.p,settings.tiptype,{obj:curform,type:1,sweep:settings.tipSweep},"byajax");

					//方法里的优先级要高;
					//有undefined情况;
					if(sync){
						ajaxsetup.async=false;
					}else if(sync===false){
						ajaxsetup.async=true;
					}
					
					if(ajaxsetup.success){
						var temp_suc=ajaxsetup.success;
						ajaxsetup.success=function(data){
							settings.callback && settings.callback(data);
							curform[0].validform_ajax=null;
							if($.trim(data.status)==="y"){
								curform[0].validform_status="posted";
							}else{
								curform[0].validform_status="normal";
							}
							
							temp_suc(data,curform);
						}
					}
					
					if(ajaxsetup.error){
						var temp_err=ajaxsetup.error;
						ajaxsetup.error=function(data){
							settings.callback && settings.callback(data);
							curform[0].validform_status="normal";
							curform[0].validform_ajax=null;
							
							temp_err(data,curform);
						}	
					}
					
					var localconfig={
						type: "POST",
						async:true,
						data: curform.serializeArray(),
						success: function(data){
							if($.trim(data.status)==="y"){
								//成功提交;
								curform[0].validform_status="posted";
								Validform.util.showmsg.call(curform,data.info,settings.tiptype,{obj:curform,type:2,sweep:settings.tipSweep},"byajax");
							}else{
								//提交出错;
								curform[0].validform_status="normal";
								Validform.util.showmsg.call(curform,data.info,settings.tiptype,{obj:curform,type:3,sweep:settings.tipSweep},"byajax");
							}
							
							settings.callback && settings.callback(data);
							curform[0].validform_ajax=null;
						},
						error: function(data){
							var msg="status: "+data.status+"; statusText: "+data.statusText;
									
							Validform.util.showmsg.call(curform,msg,settings.tiptype,{obj:curform,type:3,sweep:settings.tipSweep},"byajax");
							
							settings.callback && settings.callback(data);
							curform[0].validform_status="normal";
							curform[0].validform_ajax=null;
						}
					}
					
					ajaxsetup=$.extend({},localconfig,ajaxsetup,{dataType:"json"});
					
					curform[0].validform_ajax=$.ajax(ajaxsetup);

				}else{
					if(!settings.postonce){
						curform[0].validform_status="normal";
					}
					
					var url=url || settings.url;
					if(url){
						curform.attr("action",url);
					}
					
					return settings.callback && settings.callback(curform);
				}
			}
			
			return false;
			
		},
		
		resetForm:function(){
			var brothers=this;
			brothers.each(function(){
				this.reset && this.reset();
				this.validform_status="normal";
			});
			
			brothers.find(".Validform_right").text("");
			brothers.find(".passwordStrength").children().removeClass("bgStrength");
			brothers.find(".Validform_checktip").removeClass("Validform_wrong Validform_right Validform_loading");
			brothers.find(".Validform_error").removeClass("Validform_error");
			brothers.find("[datatype]").removeData("cked").removeData("dataIgnore").each(function(){
				this.validform_lastval=null;
			});
			brothers.eq(0).find("input:first").focus();
		},
		
		abort:function(){
			if(this.validform_ajax){
				this.validform_ajax.abort();	
			}
		}
		
	}
	
	$.Datatype=Validform.util.dataType;
	
	Validform.prototype={
		dataType:Validform.util.dataType,
		
		eq:function(n){
			var obj=this;
			
			if(n>=obj.forms.length){
				return null;	
			}
			
			if(!(n in obj.objects)){
				obj.objects[n]=new Validform($(obj.forms[n]).get(),{},true);
			}
			
			return obj.objects[n];

		},
		
		resetStatus:function(){
			var obj=this;
			$(obj.forms).each(function(){
				this.validform_status="normal";	
			});
			
			return this;
		},
		
		setStatus:function(status){
			var obj=this;
			$(obj.forms).each(function(){
				this.validform_status=status || "posting";	
			});
			
			return this;
		},
		
		getStatus:function(){
			var obj=this;
			var status=$(obj.forms)[0].validform_status;
			
			return status;
		},
		
		ignore:function(selector){
			var obj=this;
			var selector=selector || "[datatype]"
			
			$(obj.forms).find(selector).each(function(){
				$(this).data("dataIgnore","dataIgnore").removeClass("Validform_error");
			});
			
			return this;
		},
		
		unignore:function(selector){
			var obj=this;
			var selector=selector || "[datatype]"
			
			$(obj.forms).find(selector).each(function(){
				$(this).removeData("dataIgnore");
			});
			
			return this;
		},
		
		addRule:function(rule){
			/*
				rule => [{
					ele:"#id",
					datatype:"*",
					errormsg:"出错提示文字！",
					nullmsg:"为空时的提示文字！",
					tip:"默认显示的提示文字",
					altercss:"gray",
					ignore:"ignore",
					ajaxurl:"valid.php",
					recheck:"password",
					plugin:"passwordStrength"
				},{},{},...]
			*/
			var obj=this;
			var rule=rule || [];
			
			for(var index=0; index<rule.length; index++){
				var o=$(obj.forms).find(rule[index].ele);
				for(var attr in rule[index]){
					attr !=="ele" && o.attr(attr,rule[index][attr]);
				}
			}
			
			$(obj.forms).each(function(){
				var $this=$(this);
				Validform.util.enhance.call($this,this.settings.tiptype,this.settings.usePlugin,this.settings.tipSweep,"addRule");
			});
			
			return this;
		},
		
		ajaxPost:function(flag,sync,url){
			var obj=this;
			
			$(obj.forms).each(function(){
				//创建pop box;
				if( this.settings.tiptype==1 || this.settings.tiptype==2 || this.settings.tiptype==3 ){
					creatMsgbox();
				}
				
				Validform.util.submitForm.call($(obj.forms[0]),this.settings,flag,url,"ajaxPost",sync);
			});
			
			return this;
		},
		
		submitForm:function(flag,url){
			/*flag===true时不做验证直接提交*/
			

			var obj=this;
			
			$(obj.forms).each(function(){
				var subflag=Validform.util.submitForm.call($(this),this.settings,flag,url);
				subflag === undef && (subflag=true);
				if(subflag===true){
					this.submit();
				}
			});
			
			return this;
		},
		
		resetForm:function(){
			var obj=this;
			Validform.util.resetForm.call($(obj.forms));
			
			return this;
		},
		
		abort:function(){
			var obj=this;
			$(obj.forms).each(function(){
				Validform.util.abort.call(this);
			});
			
			return this;
		},
		
		check:function(bool,selector){
			/*
				bool：传入true，只检测不显示提示信息;
			*/
			
			var selector=selector || "[datatype]",
				obj=this,
				curform=$(obj.forms),
				flag=true;
			
			curform.find(selector).each(function(){
				Validform.util.check.call(this,curform,"",bool) || (flag=false);
			});
			
			return flag;
		},
		
		config:function(setup){
		/*
			config={
				url:"ajaxpost.php",//指定了url后，数据会提交到这个地址;
				ajaxurl:{
					timeout:1000,
					...
				},
				ajaxpost:{
					timeout:1000,
					...
				}
			}
		*/
			var obj=this;
			setup=setup || {};
			$(obj.forms).each(function(){
				var $this=$(this);
				this.settings=$.extend(true,this.settings,setup);
				Validform.util.enhance.call($this,this.settings.tiptype,this.settings.usePlugin,this.settings.tipSweep);
			});
			
			return this;
		}
	}

	$.fn.Validform=function(settings){
		return new Validform(this,settings);
	};
	
	function setCenter(obj,time){
		var left=($(window).width()-obj.outerWidth())/2,
			top=($(window).height()-obj.outerHeight())/2,
			
		top=(document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop)+(top>0?top:0);

		obj.css({
			left:left
		}).animate({
			top : top
		},{ duration:time , queue:false });
	}
	
	function creatMsgbox(){
		if($("#Validform_msg").length!==0){return false;}
		msgobj=$('<div id="Validform_msg"><div class="Validform_title">'+tipmsg.tit+'<a class="Validform_close" href="javascript:void(0);">&chi;</a></div><div class="Validform_info"></div><div class="iframe"><iframe frameborder="0" scrolling="no" height="100%" width="100%"></iframe></div></div>').appendTo("body");//提示信息框;
		msgobj.find("a.Validform_close").click(function(){
			msgobj.hide();
			msghidden=true;
			if(errorobj){
				errorobj.focus().addClass("Validform_error");
			}
			return false;
		}).focus(function(){this.blur();});

		$(window).bind("scroll resize",function(){
			!msghidden && setCenter(msgobj,400);
		});
	};
	
	//公用方法显示&关闭信息提示框;
	$.Showmsg=function(msg){
		creatMsgbox();
		Validform.util.showmsg.call(win,msg,1,{});
	};
	
	$.Hidemsg=function(){
		msgobj.hide();
		msghidden=true;
	};
	
})(jQuery,window);
/* 061a4485-84df-4c46-89b1-cfc93c34e9d2 */

(function (a, b) {
    function d(a) {
        for (var c in a)if (o[a[c]] !== b)return !0;
        return !1
    }

    function c(c, e, d) {
        var f = c;
        if ("object" === typeof e)return c.each(function () {
            h[this.id] && h[this.id].destroy();
            new a.mobiscroll.classes[e.component || "Scroller"](this, e)
        });
        "string" === typeof e && c.each(function () {
            var a;
            if ((a = h[this.id]) && a[e])if (a = a[e].apply(this, Array.prototype.slice.call(d, 1)), a !== b)return f = a, !1
        });
        return f
    }

    function e(a) {
        if (g.tapped && !a.tap)return a.stopPropagation(), a.preventDefault(), !1
    }

    var g, f = +new Date, h =
            {}, j = a.extend, o = document.createElement("modernizr").style,
        i = d(["perspectiveProperty", "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective"]),
        k = d(["flex", "msFlex", "WebkitBoxDirection"]), n = function () {
            var a = ["Webkit", "Moz", "O", "ms"], c;
            for (c in a)if (d([a[c] + "Transform"]))return "-" + a[c].toLowerCase() + "-";
            return ""
        }(), q = n.replace(/^\-/, "").replace(/\-$/, "").replace("moz", "Moz");
    a.fn.mobiscroll = function (b) {
        j(this, a.mobiscroll.components);
        return c(this, b, arguments)
    };
    g = a.mobiscroll = a.mobiscroll ||
        {
            version: "2.16.1",
            active: 1,
            util: {
                prefix: n, jsPrefix: q, has3d: i, hasFlex: k, testTouch: function (c, b) {
                    if ("touchstart" == c.type) a(b).attr("data-touch", "1"); else if (a(b).attr("data-touch"))return a(b).removeAttr("data-touch"), !1;
                    return !0
                }, objectToArray: function (a) {
                    var c = [], b;
                    for (b in a)c.push(a[b]);
                    return c
                }, arrayToObject: function (a) {
                    var c = {}, b;
                    if (a)for (b = 0; b < a.length; b++)c[a[b]] = a[b];
                    return c
                }, isNumeric: function (a) {
                    return 0 <= a - parseFloat(a)
                }, isString: function (a) {
                    return "string" === typeof a
                }, getCoord: function (a, c, b) {
                    var e =
                        a.originalEvent || a, c = (b ? "client" : "page") + c;
                    return e.changedTouches ? e.changedTouches[0][c] : a[c]
                }, getPosition: function (c, e) {
                    var d = window.getComputedStyle ? getComputedStyle(c[0]) : c[0].style, f, h;
                    i ? (a.each(["t", "webkitT", "MozT", "OT", "msT"], function (a, c) {
                        if (d[c + "ransform"] !== b)return f = d[c + "ransform"], !1
                    }), f = f.split(")")[0].split(", "), h = e ? f[13] || f[5] : f[12] || f[4]) : h = e ? d.top.replace("px", "") : d.left.replace("px", "");
                    return h
                }, constrain: function (a, c, b) {
                    return Math.max(c, Math.min(a, b))
                }, vibrate: function (a) {
                    "vibrate" in
                    navigator && navigator.vibrate(a || 50)
                }
            },
            tapped: 0,
            autoTheme: "mobiscroll",
            presets: {scroller: {}, numpad: {}, listview: {}, menustrip: {}},
            themes: {form: {}, frame: {}, listview: {}, menustrip: {}},
            i18n: {},
            instances: h,
            classes: {},
            components: {},
            defaults: {context: "body", mousewheel: !0, vibrate: !0},
            setDefaults: function (a) {
                j(this.defaults, a)
            },
            presetShort: function (a, e, d) {
                this.components[a] = function (f) {
                    return c(this, j(f, {component: e, preset: !1 === d ? b : a}), arguments)
                }
            }
        };
    a.mobiscroll.classes.Base = function (c, b) {
        var e, d, g, i, k, q, o = a.mobiscroll,
            n = this;
        n.settings = {};
        n._presetLoad = function () {
        };
        n._init = function (a) {
            g = n.settings;
            j(b, a);
            n._hasDef && (q = o.defaults);
            j(g, n._defaults, q, b);
            if (n._hasTheme) {
                k = g.theme;
                if ("auto" == k || !k) k = o.autoTheme;
                "default" == k && (k = "mobiscroll");
                b.theme = k;
                i = o.themes[n._class][k]
            }
            n._hasLang && (e = o.i18n[g.lang]);
            n._hasTheme && n.trigger("onThemeLoad", [e, b]);
            j(g, i, e, q, b);
            if (n._hasPreset && (n._presetLoad(g), d = o.presets[n._class][g.preset])) d = d.call(c, n), j(g, d, b)
        };
        n._destroy = function () {
            n.trigger("onDestroy", []);
            delete h[c.id];
            n =
                null
        };
        n.trigger = function (e, f) {
            var h;
            f.push(n);
            a.each([q, i, d, b], function (a, b) {
                b && b[e] && (h = b[e].apply(c, f))
            });
            return h
        };
        n.option = function (a, c) {
            var b = {};
            "object" === typeof a ? b = a : b[a] = c;
            n.init(b)
        };
        n.getInst = function () {
            return n
        };
        b = b || {};
        c.id || (c.id = "mobiscroll" + ++f);
        h[c.id] = n
    };
    document.addEventListener && a.each(["mouseover", "mousedown", "mouseup", "click"], function (a, c) {
        document.addEventListener(c, e, !0)
    })
})($);
(function (a) {
    a.mobiscroll.i18n.zh = {
        setText: "\u786e\u5b9a",
        cancelText: "\u53d6\u6d88",
        clearText: "\u660e\u786e",
        selectedText: "\u9009",
        dateFormat: "yy/mm/dd",
        dateOrder: "yymmdd",
        dayNames: "\u5468\u65e5,\u5468\u4e00,\u5468\u4e8c,\u5468\u4e09,\u5468\u56db,\u5468\u4e94,\u5468\u516d".split(","),
        dayNamesShort: "\u65e5,\u4e00,\u4e8c,\u4e09,\u56db,\u4e94,\u516d".split(","),
        dayNamesMin: "\u65e5,\u4e00,\u4e8c,\u4e09,\u56db,\u4e94,\u516d".split(","),
        dayText: "\u65e5",
        hourText: "\u65f6",
        minuteText: "\u5206",
        monthNames: "1\u6708,2\u6708,3\u6708,4\u6708,5\u6708,6\u6708,7\u6708,8\u6708,9\u6708,10\u6708,11\u6708,12\u6708".split(","),
        monthNamesShort: "\u4e00,\u4e8c,\u4e09,\u56db,\u4e94,\u516d,\u4e03,\u516b,\u4e5d,\u5341,\u5341\u4e00,\u5341\u4e8c".split(","),
        monthText: "\u6708",
        secText: "\u79d2",
        timeFormat: "HH:ii",
        timeWheels: "HHii",
        yearText: "\u5e74",
        nowText: "\u5f53\u524d",
        pmText: "\u4e0b\u5348",
        amText: "\u4e0a\u5348",
        dateText: "\u65e5",
        timeText: "\u65f6\u95f4",
        calendarText: "\u65e5\u5386",
        closeText: "\u5173\u95ed",
        fromText: "\u5f00\u59cb\u65f6\u95f4",
        toText: "\u7ed3\u675f\u65f6\u95f4",
        wholeText: "\u5408\u8ba1",
        fractionText: "\u5206\u6570",
        unitText: "\u5355\u4f4d",
        labels: "\u5e74,\u6708,\u65e5,\u5c0f\u65f6,\u5206\u949f,\u79d2,".split(","),
        labelsShort: "\u5e74,\u6708,\u65e5,\u70b9,\u5206,\u79d2,".split(","),
        startText: "\u5f00\u59cb",
        stopText: "\u505c\u6b62",
        resetText: "\u91cd\u7f6e",
        lapText: "\u5708",
        hideText: "\u9690\u85cf",
        backText: "\u80cc\u90e8",
        undoText: "\u590d\u539f",
        offText: "\u5173\u95ed",
        onText: "\u5f00\u542f"
    }
})($);
(function (a, b, d, c) {
    var e, g, f = a.mobiscroll, h = f.util, j = h.jsPrefix, o = h.has3d, i = h.getCoord, k = h.constrain,
        n = h.isString, q = /android [1-3]/i.test(navigator.userAgent),
        h = /(iphone|ipod|ipad).* os 8_/i.test(navigator.userAgent), A = function () {
        }, D = function (a) {
            a.preventDefault()
        };
    f.classes.Frame = function (h, r, w) {
        function M(c) {
            E && E.removeClass("dwb-a");
            E = a(this);
            !E.hasClass("dwb-d") && !E.hasClass("dwb-nhl") && E.addClass("dwb-a");
            if ("mousedown" === c.type) a(d).on("mouseup", t)
        }

        function t(c) {
            E && (E.removeClass("dwb-a"), E =
                null);
            "mouseup" === c.type && a(d).off("mouseup", t)
        }

        function m(a) {
            13 == a.keyCode ? B.select() : 27 == a.keyCode && B.cancel()
        }

        function H(b) {
            var d, f, h, i = K.focusOnClose;
            B._markupRemove();
            C.remove();
            e && !b && setTimeout(function () {
                if (i === c || !0 === i) {
                    g = !0;
                    d = e[0];
                    h = d.type;
                    f = d.value;
                    try {
                        d.type = "button"
                    } catch (b) {
                    }
                    e.focus();
                    d.type = h;
                    d.value = f
                } else i && a(i).focus()
            }, 200);
            B._isVisible = !1;
            S("onHide", [])
        }

        function N(a) {
            clearTimeout(aa[a.type]);
            aa[a.type] = setTimeout(function () {
                var c = "scroll" == a.type;
                (!c || ca) && B.position(!c)
            }, 200)
        }

        function v(a) {
            a.target.nodeType && !J[0].contains(a.target) && J.focus()
        }

        function s(c, b) {
            c && c();
            a(d.activeElement).is("input,textarea") && a(d.activeElement).blur();
            e = b;
            B.show();
            setTimeout(function () {
                g = !1
            }, 300)
        }

        var u, z, X, C, T, l, J, y, O, p, E, R, S, G, P, Z, I, Q, V, K, ca, U, ha, ia, B = this, ea = a(h), ga = [],
            aa = {};
        f.classes.Base.call(this, h, r, !0);
        B.position = function (b) {
            var e, f, h, g, i, j, q, m, oa, t, n = 0, o = 0;
            oa = {};
            var p = Math.min(y[0].innerWidth || y.innerWidth(), l.width()), r = y[0].innerHeight || y.innerHeight();
            if (!(ha === p && ia === r && b || V))if ((B._isFullScreen ||
                /top|bottom/.test(K.display)) && J.width(p), !1 !== S("onPosition", [C, p, r]) && P) {
                f = y.scrollLeft();
                b = y.scrollTop();
                g = K.anchor === c ? ea : a(K.anchor);
                B._isLiquid && "liquid" !== K.layout && (400 > p ? C.addClass("dw-liq") : C.removeClass("dw-liq"));
                !B._isFullScreen && /modal|bubble/.test(K.display) && (O.width(""), a(".mbsc-w-p", C).each(function () {
                    e = a(this).outerWidth(!0);
                    n += e;
                    o = e > o ? e : o
                }), e = n > p ? o : n, O.width(e + 1).css("white-space", n > p ? "" : "nowrap"));
                Z = J.outerWidth();
                I = J.outerHeight(!0);
                ca = I <= r && Z <= p;
                B.scrollLock = ca;
                "modal" == K.display ?
                    (f = Math.max(0, f + (p - Z) / 2), h = b + (r - I) / 2) : "bubble" == K.display ? (t = !0, m = a(".dw-arrw-i", C), h = g.offset(), j = Math.abs(z.offset().top - h.top), q = Math.abs(z.offset().left - h.left), i = g.outerWidth(), g = g.outerHeight(), f = k(q - (J.outerWidth(!0) - i) / 2, f + 3, f + p - Z - 3), h = j - I, h < b || j > b + r ? (J.removeClass("dw-bubble-top").addClass("dw-bubble-bottom"), h = j + g) : J.removeClass("dw-bubble-bottom").addClass("dw-bubble-top"), m = m.outerWidth(), i = k(q + i / 2 - (f + (Z - m) / 2), 0, m), a(".dw-arr", C).css({left: i})) : "top" == K.display ? h = b : "bottom" == K.display &&
                    (h = b + r - I);
                h = 0 > h ? 0 : h;
                oa.top = h;
                oa.left = f;
                J.css(oa);
                l.height(0);
                oa = Math.max(h + I, "body" == K.context ? a(d).height() : z[0].scrollHeight);
                l.css({height: oa});
                if (t && (h + I > b + r || j > b + r)) V = !0, setTimeout(function () {
                    V = false
                }, 300), y.scrollTop(Math.min(h + I - r, oa - r));
                ha = p;
                ia = r
            }
        };
        B.attachShow = function (a, c) {
            ga.push({readOnly: a.prop("readonly"), el: a});
            if ("inline" !== K.display) {
                if (U && a.is("input")) a.prop("readonly", !0).on("mousedown.dw", function (a) {
                    a.preventDefault()
                });
                if (K.showOnFocus) a.on("focus.dw", function () {
                    g || s(c, a)
                });
                K.showOnTap && (a.on("keydown.dw", function (b) {
                    if (32 == b.keyCode || 13 == b.keyCode) b.preventDefault(), b.stopPropagation(), s(c, a)
                }), B.tap(a, function () {
                    s(c, a)
                }))
            }
        };
        B.select = function () {
            if (!P || !1 !== B.hide(!1, "set")) B._fillValue(), S("onSelect", [B._value])
        };
        B.cancel = function () {
            (!P || !1 !== B.hide(!1, "cancel")) && S("onCancel", [B._value])
        };
        B.clear = function () {
            S("onClear", [C]);
            P && !B.live && B.hide(!1, "clear");
            B.setVal(null, !0)
        };
        B.enable = function () {
            K.disabled = !1;
            B._isInput && ea.prop("disabled", !1)
        };
        B.disable = function () {
            K.disabled =
                !0;
            B._isInput && ea.prop("disabled", !0)
        };
        B.show = function (e, d) {
            var h;
            if (!K.disabled && !B._isVisible) {
                B._readValue();
                S("onBeforeShow", []);
                R = q ? !1 : K.animate;
                !1 !== R && ("top" == K.display && (R = "slidedown"), "bottom" == K.display && (R = "slideup"));
                h = '<div lang="' + K.lang + '" class="mbsc-' + K.theme + (K.baseTheme ? " mbsc-" + K.baseTheme : "") + " dw-" + K.display + " " + (K.cssClass || "") + (B._isLiquid ? " dw-liq" : "") + (q ? " mbsc-old" : "") + (G ? "" : " dw-nobtn") + '"><div class="dw-persp">' + (P ? '<div class="dwo"></div>' : "") + "<div" + (P ? ' role="dialog" tabindex="-1"' :
                        "") + ' class="dw' + (K.rtl ? " dw-rtl" : " dw-ltr") + '">' + ("bubble" === K.display ? '<div class="dw-arrw"><div class="dw-arrw-i"><div class="dw-arr"></div></div></div>' : "") + '<div class="dwwr"><div aria-live="assertive" class="dw-aria dw-hidden"></div>' + (K.headerText ? '<div class="dwv">' + (n(K.headerText) ? K.headerText : "") + "</div>" : "") + '<div class="dwcc">';
                h += B._generateContent();
                h += "</div>";
                G && (h += '<div class="dwbc">', a.each(p, function (a, b) {
                    b = n(b) ? B.buttons[b] : b;
                    if (b.handler === "set") b.parentClass = "dwb-s";
                    if (b.handler ===
                        "cancel") b.parentClass = "dwb-c";
                    h = h + ("<div" + (K.btnWidth ? ' style="width:' + 100 / p.length + '%"' : "") + ' class="dwbw ' + (b.parentClass || "") + '"><div tabindex="0" role="button" class="dwb' + a + " dwb-e " + (b.cssClass === c ? K.btnClass : b.cssClass) + (b.icon ? " mbsc-ic mbsc-ic-" + b.icon : "") + '">' + (b.text || "") + "</div></div>")
                }), h += "</div>");
                h += "</div></div></div></div>";
                C = a(h);
                l = a(".dw-persp", C);
                T = a(".dwo", C);
                O = a(".dwwr", C);
                X = a(".dwv", C);
                J = a(".dw", C);
                u = a(".dw-aria", C);
                B._markup = C;
                B._header = X;
                B._isVisible = !0;
                Q = "orientationchange resize";
                B._markupReady(C);
                S("onMarkupReady", [C]);
                if (P) {
                    a(b).on("keydown", m);
                    if (K.scrollLock) C.on("touchmove mousewheel wheel", function (a) {
                        ca && a.preventDefault()
                    });
                    "Moz" !== j && a("input,select,button", z).each(function () {
                        this.disabled || a(this).addClass("dwtd").prop("disabled", true)
                    });
                    f.activeInstance && f.activeInstance.hide();
                    Q += " scroll";
                    f.activeInstance = B;
                    C.appendTo(z);
                    y.on("focusin", v);
                    o && R && !e && C.addClass("dw-in dw-trans").on("webkitAnimationEnd animationend", function () {
                        C.off("webkitAnimationEnd animationend").removeClass("dw-in dw-trans").find(".dw").removeClass("dw-" +
                            R);
                        d || J.focus();
                        B.ariaMessage(K.ariaMessage)
                    }).find(".dw").addClass("dw-" + R)
                } else ea.is("div") && !B._hasContent ? ea.html(C) : C.insertAfter(ea);
                B._markupInserted(C);
                S("onMarkupInserted", [C]);
                B.position();
                y.on(Q, N);
                C.on("selectstart mousedown", D).on("click", ".dwb-e", D).on("keydown", ".dwb-e", function (c) {
                    if (c.keyCode == 32) {
                        c.preventDefault();
                        c.stopPropagation();
                        a(this).click()
                    }
                }).on("keydown", function (c) {
                    if (c.keyCode == 32) c.preventDefault(); else if (c.keyCode == 9 && P) {
                        var b = C.find('[tabindex="0"]').filter(function () {
                            return this.offsetWidth >
                                0 || this.offsetHeight > 0
                        }), e = b.index(a(":focus", C)), d = b.length - 1, f = 0;
                        if (c.shiftKey) {
                            d = 0;
                            f = -1
                        }
                        if (e === d) {
                            b.eq(f).focus();
                            c.preventDefault()
                        }
                    }
                });
                a("input,select,textarea", C).on("selectstart mousedown", function (a) {
                    a.stopPropagation()
                }).on("keydown", function (a) {
                    a.keyCode == 32 && a.stopPropagation()
                });
                a.each(p, function (c, b) {
                    B.tap(a(".dwb" + c, C), function (a) {
                        b = n(b) ? B.buttons[b] : b;
                        (n(b.handler) ? B.handlers[b.handler] : b.handler).call(this, a, B)
                    }, true)
                });
                K.closeOnOverlay && B.tap(T, function () {
                    B.cancel()
                });
                P && !R && (d ||
                J.focus(), B.ariaMessage(K.ariaMessage));
                C.on("touchstart mousedown", ".dwb-e", M).on("touchend", ".dwb-e", t);
                B._attachEvents(C);
                S("onShow", [C, B._tempValue])
            }
        };
        B.hide = function (c, e, d) {
            if (!B._isVisible || !d && !B._isValid && "set" == e || !d && !1 === S("onClose", [B._tempValue, e]))return !1;
            if (C) {
                "Moz" !== j && a(".dwtd", z).each(function () {
                    a(this).prop("disabled", !1).removeClass("dwtd")
                });
                if (o && P && R && !c && !C.hasClass("dw-trans")) C.addClass("dw-out dw-trans").find(".dw").addClass("dw-" + R).on("webkitAnimationEnd animationend",
                    function () {
                        H(c)
                    }); else H(c);
                y.off(Q, N).off("focusin", v)
            }
            P && (a(b).off("keydown", m), delete f.activeInstance)
        };
        B.ariaMessage = function (a) {
            u.html("");
            setTimeout(function () {
                u.html(a)
            }, 100)
        };
        B.isVisible = function () {
            return B._isVisible
        };
        B.setVal = A;
        B._generateContent = A;
        B._attachEvents = A;
        B._readValue = A;
        B._fillValue = A;
        B._markupReady = A;
        B._markupInserted = A;
        B._markupRemove = A;
        B._processSettings = A;
        B._presetLoad = function (a) {
            a.buttons = a.buttons || ("inline" !== a.display ? ["set", "cancel"] : []);
            a.headerText = a.headerText ===
            c ? "inline" !== a.display ? "{value}" : !1 : a.headerText
        };
        B.tap = function (a, c, b) {
            var e, d, h;
            if (K.tap) a.on("touchstart.dw", function (a) {
                b && a.preventDefault();
                e = i(a, "X");
                d = i(a, "Y");
                h = !1
            }).on("touchmove.dw", function (a) {
                if (!h && 20 < Math.abs(i(a, "X") - e) || 20 < Math.abs(i(a, "Y") - d)) h = !0
            }).on("touchend.dw", function (a) {
                h || (a.preventDefault(), c.call(this, a));
                f.tapped++;
                setTimeout(function () {
                    f.tapped--
                }, 500)
            });
            a.on("click.dw", function (a) {
                a.preventDefault();
                c.call(this, a)
            })
        };
        B.destroy = function () {
            B.hide(!0, !1, !0);
            a.each(ga,
                function (a, c) {
                    c.el.off(".dw").prop("readonly", c.readOnly)
                });
            B._destroy()
        };
        B.init = function (c) {
            B._init(c);
            B._isLiquid = "liquid" === (K.layout || (/top|bottom/.test(K.display) ? "liquid" : ""));
            B._processSettings();
            ea.off(".dw");
            p = K.buttons || [];
            P = "inline" !== K.display;
            U = K.showOnFocus || K.showOnTap;
            y = a("body" == K.context ? b : K.context);
            z = a(K.context);
            B.context = y;
            B.live = !0;
            a.each(p, function (a, c) {
                if ("ok" == c || "set" == c || "set" == c.handler)return B.live = !1
            });
            B.buttons.set = {text: K.setText, handler: "set"};
            B.buttons.cancel = {
                text: B.live ?
                    K.closeText : K.cancelText, handler: "cancel"
            };
            B.buttons.clear = {text: K.clearText, handler: "clear"};
            B._isInput = ea.is("input");
            G = 0 < p.length;
            B._isVisible && B.hide(!0, !1, !0);
            S("onInit", []);
            P ? (B._readValue(), B._hasContent || B.attachShow(ea)) : B.show();
            ea.on("change.dw", function () {
                B._preventChange || B.setVal(ea.val(), true, false);
                B._preventChange = false
            })
        };
        B.buttons = {};
        B.handlers = {set: B.select, cancel: B.cancel, clear: B.clear};
        B._value = null;
        B._isValid = !0;
        B._isVisible = !1;
        K = B.settings;
        S = B.trigger;
        w || B.init(r)
    };
    f.classes.Frame.prototype._defaults =
        {
            lang: "en",
            setText: "Set",
            selectedText: "Selected",
            closeText: "Close",
            cancelText: "Cancel",
            clearText: "Clear",
            disabled: !1,
            closeOnOverlay: !0,
            showOnFocus: !1,
            showOnTap: !0,
            display: "modal",
            scrollLock: !0,
            tap: !0,
            btnClass: "dwb",
            btnWidth: !0,
            focusOnClose: !h
        };
    f.themes.frame.mobiscroll = {
        rows: 5,
        showLabel: !1,
        headerText: !1,
        btnWidth: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 1,
        dateOrder: "MMddyy",
        weekDays: "min",
        checkIcon: "ion-ios7-checkmark-empty",
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down5",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up5",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left5",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right5"
    };
    a(b).on("focus", function () {
        e && (g = !0)
    })
})($, window, document);
(function (a) {
    var a = a.mobiscroll.themes.frame, b = {
        dateOrder: "Mddyy",
        rows: 5,
        minWidth: 76,
        height: 36,
        showLabel: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 2,
        useShortLabels: !0,
        icon: {filled: "star3", empty: "star"},
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down6",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up6",
        onThemeLoad: function (a, c) {
            c.theme && (c.theme = c.theme.replace("android-ics", "android-holo"))
        },
        onMarkupReady: function (a) {
            a.addClass("mbsc-android-holo")
        }
    };
    a["android-holo"] = b;
    a["android-holo-light"] = b;
    a["android-ics"] =
        b;
    a["android-ics light"] = b;
    a["android-holo light"] = b
})($);
(function (a) {
    var b = a.mobiscroll.themes.frame, d = {
        minWidth: 76,
        height: 76,
        dateOrder: "mmMMddDDyy",
        headerText: !1,
        showLabel: !1,
        deleteIcon: "backspace4",
        icon: {filled: "star3", empty: "star"},
        btnWidth: !1,
        btnStartClass: "mbsc-ic mbsc-ic-play3",
        btnStopClass: "mbsc-ic mbsc-ic-pause2",
        btnResetClass: "mbsc-ic mbsc-ic-stop2",
        btnLapClass: "mbsc-ic mbsc-ic-loop2",
        btnHideClass: "mbsc-ic mbsc-ic-close",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left2",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right2",
        btnPlusClass: "mbsc-ic mbsc-ic-plus",
        btnMinusClass: "mbsc-ic mbsc-ic-minus",
        onMarkupInserted: function (c, b) {
            var d, f, h, j = b.settings;
            if ("clickpick" != j.mode) a(".dwwl", c).on("touchstart mousedown wheel mousewheel", function (b) {
                if (!("mousedown" === b.type && f || (a.isArray(j.readonly) ? j.readonly[a(".dwwl", c).index(this)] : j.readonly))) f = "touchstart" === b.type, d = !0, h = a(this).hasClass("wpa"), a(".dwwl", c).removeClass("wpa"), a(".dw-sel", this).removeClass("dw-sel"), a(this).addClass("wpa")
            }).on("touchmove mousemove", function () {
                d = !1
            }).on("touchend mouseup",
                function (c) {
                    d && h && a(c.target).closest(".dw-li").hasClass("dw-sel") && a(this).removeClass("wpa");
                    "mouseup" === c.type && (f = !1);
                    d = !1
                })
        },
        onThemeLoad: function (a, b) {
            if (a && a.dateOrder && !b.dateOrder) {
                var d = a.dateOrder, d = d.match(/mm/i) ? d.replace(/mmMM|mm|MM/, "mmMM") : d.replace(/mM|m|M/, "mM"),
                    d = d.match(/dd/i) ? d.replace(/ddDD|dd|DD/, "ddDD") : d.replace(/dD|d|D/, "dD");
                b.dateOrder = d
            }
        },
        onInit: function (a) {
            a = a.buttons;
            a.set.icon = "checkmark";
            a.cancel.icon = "close";
            a.clear.icon = "close";
            a.ok && (a.ok.icon = "checkmark");
            a.close &&
            (a.close.icon = "close");
            a.now && (a.now.icon = "loop2")
        }
    };
    b.wp = d;
    b["wp-light"] = d;
    b["wp light"] = d
})($);
(function (a) {
    var b = a.mobiscroll.themes.frame, d = {
        minWidth: 64,
        height: 60,
        btnStartClass: "mbsc-ic mbsc-ic-play3",
        btnStopClass: "mbsc-ic mbsc-ic-pause2",
        btnResetClass: "mbsc-ic mbsc-ic-stop2",
        btnLapClass: "mbsc-ic mbsc-ic-loop2",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left5",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right5",
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down5",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up5",
        onMarkupReady: function (c, b) {
            var d = b.settings, f = d.height, d = d.rows;
            c.addClass("mbsc-sense");
            a(".dww", c).height(d *
                f - 40);
            a(".dw-ul", c).css("margin-top", d / 2 * f - f / 2 - 20 + "px");
            a(".dwwms .dw-ul", c).css("margin-top", "-20px");
            a(".dwwb", c).css({height: f - 20 + "px", lineHeight: f - 20 + "px"})
        },
        onThemeLoad: function (a, b) {
            b.theme && (b.theme = b.theme.replace("sense5", "sense"))
        }
    };
    b.sense = d;
    b["sense-dark"] = d;
    b.sense5 = d;
    b["sense5-dark"] = d
})($);
(function (a) {
    a.mobiscroll.themes.frame.material = {
        showLabel: !1,
        headerText: !1,
        btnWidth: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 1,
        dateOrder: "MMddyy",
        weekDays: "min",
        deleteIcon: "material-backspace",
        icon: {filled: "material-star", empty: "material-star-outline"},
        checkIcon: "material-check",
        btnPlusClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-down",
        btnMinusClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-up",
        btnCalPrevClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-left",
        btnCalNextClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-right",
        onMarkupReady: function (b) {
            a.mobiscroll.themes.material.initRipple(b, ".dwb-e", "dwb-d", "dwb-nhl")
        },
        onEventBubbleShow: function (b, d) {
            var c = d.hasClass("dw-cal-events-b"),
                e = a(".dw-cal-event-color", d).eq(c ? 0 : -1).css("background-color");
            a(".dw-cal-events-arr", d).css("border-color", c ? "transparent transparent " + e + " transparent" : e + "transparent transparent transparent")
        }
    }
})($);
(function (a) {
    a.mobiscroll.themes.frame["ios-classic"] = {
        display: "bottom",
        dateOrder: "MMdyy",
        rows: 5,
        height: 30,
        minWidth: 60,
        headerText: !1,
        showLabel: !1,
        btnWidth: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 2,
        useShortLabels: !0
    }
})($);
(function (a) {
    a.mobiscroll.themes.frame.android = {
        dateOrder: "Mddyy",
        mode: "clickpick",
        height: 50,
        showLabel: !1,
        btnStartClass: "mbsc-ic mbsc-ic-play3",
        btnStopClass: "mbsc-ic mbsc-ic-pause2",
        btnResetClass: "mbsc-ic mbsc-ic-stop2",
        btnLapClass: "mbsc-ic mbsc-ic-loop2"
    }
})($);
(function (a) {
    a.mobiscroll.themes.frame["sense-ui"] = {
        btnStartClass: "mbsc-ic mbsc-ic-play3",
        btnStopClass: "mbsc-ic mbsc-ic-pause2",
        btnResetClass: "mbsc-ic mbsc-ic-stop2",
        btnLapClass: "mbsc-ic mbsc-ic-loop2"
    }
})($);
(function (a) {
    var a = a.mobiscroll.themes.frame, b = {
        display: "bottom",
        dateOrder: "MMdyy",
        rows: 5,
        height: 34,
        minWidth: 55,
        headerText: !1,
        showLabel: !1,
        btnWidth: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 1,
        useShortLabels: !0,
        deleteIcon: "backspace3",
        checkIcon: "ion-ios7-checkmark-empty",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left5",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right5",
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down5",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up5",
        onThemeLoad: function (a, c) {
            c.theme && (c.theme = c.theme.replace("ios7",
                "ios"))
        }
    };
    a.ios = b;
    a.ios7 = b
})($);
(function (a) {
    a.mobiscroll.themes.frame.bootstrap = {
        disabledClass: "disabled",
        activeClass: "btn-primary",
        activeTabClass: "active",
        btnCalPrevClass: "",
        btnCalNextClass: "",
        selectedLineHeight: !0,
        onMarkupInserted: function (b) {
            a(".dw", b).removeClass("dwbg").addClass("popover");
            a(".dwwr", b).addClass("popover-content");
            a(".dwv", b).addClass("popover-title");
            a(".dw-arr", b).addClass("arrow");
            a(".dwb, .dwwb", b).addClass("btn btn-default");
            a(".dwb-s .dwb", b).removeClass("btn-default").addClass("btn btn-primary");
            a(".dw-cal-next .dw-cal-btn-txt",
                b).prepend('<i class="icon icon-chevron-right glyphicon glyphicon-chevron-right"></i>');
            a(".dw-cal-prev .dw-cal-btn-txt", b).prepend('<i class="icon icon-chevron-left glyphicon glyphicon-chevron-left"></i>');
            a(".dw-cal-tabs ul", b).addClass("nav nav-tabs");
            a(".dw-cal-sc-c", b).addClass("popover");
            a(".dw-week-nrs-c", b).addClass("popover");
            a(".dw-cal-events", b).addClass("popover");
            a(".dw-cal-events-arr", b).addClass("arrow");
            a(".dw-dr", b).addClass("btn btn-sm btn-small btn-default");
            a(".mbsc-np-btn", b).addClass("btn btn-default")
        },
        onPosition: function (b) {
            setTimeout(function () {
                a(".dw-bubble-top", b).removeClass("bottom").addClass("top");
                a(".dw-bubble-bottom", b).removeClass("top").addClass("bottom")
            }, 10)
        },
        onEventBubbleShow: function (b, d) {
            a(".dw-cal-event-list", d).addClass("list-group");
            a(".dw-cal-event", d).addClass("list-group-item");
            setTimeout(function () {
                d.hasClass("dw-cal-events-b") ? d.removeClass("top").addClass("bottom") : d.removeClass("bottom").addClass("top")
            }, 10)
        }
    }
})($);
(function (a, b, d, c) {
    var e, g = a.extend, f = a.mobiscroll, h = f.classes, j = f.util, o = j.prefix, i = j.jsPrefix, k = j.has3d,
        n = j.getCoord, q = j.testTouch, A = j.vibrate, D = 1, F = function () {
        }, r = b.requestAnimationFrame || function (a) {
                a()
            }, w = b.cancelAnimationFrame || F, M = "webkitAnimationEnd animationend", t = "transparent";
    h.ListView = function (m, H) {
        function N() {
            Lb = Mb = !1;
            gc = qa = 0;
            hc = new Date;
            bb = ja.width();
            Eb = ha(ja);
            sa = Eb.index(Y);
            Ea = Y.outerHeight();
            Ma = Y[0].offsetTop;
            Ca = vb[Y.attr("data-type") || "defaults"];
            Fb = Ca.stages
        }

        function v(c) {
            "touchstart" ===
            c.type && (Nb = !0, clearTimeout(ic));
            if (q(c, this) && !ma && !ib && !e && !Ob && true && (oa = ma = !0, Pb = n(c, "X"), Qb = n(c, "Y"), Ga = la = 0, Y = a(this), N(), Yb = ba.onItemTap || Ca.tap || Y.hasClass("mbsc-lv-parent") || Y.hasClass("mbsc-lv-back"), Na.offset(), qb = Y.offset().top, Yb && (ka = setTimeout(function () {
                    Y.addClass("mbsc-lv-item-active");
                    Aa("onItemActivate", [Y, c])
                }, 120)), W.sortable && !Y.hasClass("mbsc-lv-back") && ((W.sortable.group || (Zb = Y.nextUntil(".mbsc-lv-gr-title").filter(".mbsc-lv-item"), $b = Y.prevUntil(".mbsc-lv-gr-title").filter(".mbsc-lv-item")),
                    rb = (!W.sortable.group ? $b.length ? $b.eq(-1) : Y : ja.children("li").eq(0))[0].offsetTop - Ma, jb = (!W.sortable.group ? Zb.length ? Zb.eq(-1) : Y : ja.children("li").eq(-1))[0].offsetTop - Ma, W.sortable.handle) ? a(c.target).hasClass("mbsc-lv-handle") && (clearTimeout(ka), "Moz" === i ? (c.preventDefault(), T()) : Rb = setTimeout(function () {
                        T()
                    }, 100)) : Rb = setTimeout(function () {
                    if (ba.fillAnimation) {
                        xa.appendTo(Y);
                        xa[0].style[i + "Animation"] = "mbsc-lv-fill " + (ba.sortDelay - 100) + "ms linear"
                    }
                    clearTimeout(cb);
                    clearTimeout(ka);
                    oa = false;
                    Rb = setTimeout(function () {
                        xa[0].style[i +
                        "Animation"] = "";
                        T()
                    }, ba.sortDelay - 80)
                }, 80)), "mousedown" == c.type)) a(d).on("mousemove", s).on("mouseup", u)
        }

        function s(a) {
            var c = !1, b = !0;
            if (ma)if (sb = n(a, "X"), Gb = n(a, "Y"), la = sb - Pb, Ga = Gb - Qb, clearTimeout(cb), !Xa && !kb && !wb && !Y.hasClass("mbsc-lv-back") && (10 < Math.abs(Ga) ? (wb = !0, Y.trigger("mousemove" == a.type ? "mouseup" : "touchend"), clearTimeout(ka)) : 7 < Math.abs(la) ? z() : "touchmove" === a.type && (cb = setTimeout(function () {
                        Y.trigger("touchend")
                    }, 300))), kb) a.preventDefault(), qa = 100 * (la / bb), X(); else if (Xa) {
                a.preventDefault();
                var d, e = Ia.scrollTop(), a = Math.max(rb, Math.min(Ga + xb, jb)), f = Ua ? qb - ac + e - xb : qb;
                Hb + e < f + a + Ea ? (Ia.scrollTop(f + a - Hb + Ea), d = !0) : f + a < e && (Ia.scrollTop(f + a), d = !0);
                d && (d = Ua ? Ia.scrollTop() - e : 0, xb += d);
                if (lb && (W.sortable.multiLevel && ua.hasClass("mbsc-lv-parent") ? Ma + Ea / 4 + a > lb ? c = !0 : Ma + Ea - Ea / 4 + a > lb && (Ja = ua.addClass("mbsc-lv-item-hl"), b = !1) : Ma + Ea / 2 + a > lb && (ua.hasClass("mbsc-lv-back") ? W.sortable.multiLevel && (na = ua.addClass("mbsc-lv-item-hl"), b = !1) : c = !0), c)) db.insertAfter(ua), Oa = ua, ua = B(ua, "next"), mb = lb, lb = ua.length && ua[0].offsetTop,
                    Ba++;
                if (!c && mb && (W.sortable.multiLevel && Oa.hasClass("mbsc-lv-parent") ? Ma + Ea - Ea / 4 + a < mb ? c = !0 : Ma + Ea / 4 + a < mb && (Ja = Oa.addClass("mbsc-lv-item-hl"), b = !1) : Ma + Ea / 2 + a < mb && (Oa.hasClass("mbsc-lv-back") ? W.sortable.multiLevel && (na = Oa.addClass("mbsc-lv-item-hl"), b = !1) : c = !0), c)) db.insertBefore(Oa), ua = Oa, Oa = B(Oa, "prev"), lb = mb, mb = Oa.length && Oa[0].offsetTop + Oa.outerHeight(), Ba--;
                if (b && (Ja && (Ja.removeClass("mbsc-lv-item-hl"), Ja = !1), na)) na.removeClass("mbsc-lv-item-hl"), na = !1;
                c && Aa("onSortChange", [Y, Ba]);
                G(Y, a);
                Aa("onSort",
                    [Y, Ba])
            } else(5 < Math.abs(la) || 5 < Math.abs(Ga)) && P()
        }

        function u(c) {
            var b, e;
            if (ma) {
                ma = !1;
                P();
                "mouseup" == c.type && a(d).off("mousemove", s).off("mouseup", u);
                wb || (ic = setTimeout(function () {
                    Nb = !1
                }, 300));
                if (kb || wb || Xa) Lb = !0;
                kb ? C() : Xa ? (b = ja, Ja ? (V(Y.detach()), c = eb[Ja.attr("data-ref")], Ba = ha(c.child).length, Ja.removeClass("mbsc-lv-item-hl"), ba.navigateOnDrop ? ta(Ja, function () {
                    W.add(null, Y, null, null, Ja, !0);
                    aa(Y);
                    l(Y, sa, b, !0)
                }) : (W.add(null, Y, null, null, Ja, !0), l(Y, sa, b, !0))) : na ? (V(Y.detach()), c = eb[na.attr("data-back")],
                    Ba = ha(c.parent).index(c.item) + 1, na.removeClass("mbsc-lv-item-hl"), ba.navigateOnDrop ? ta(na, function () {
                    W.add(null, Y, Ba, null, ja, !0);
                    aa(Y);
                    l(Y, sa, b, !0)
                }) : (W.add(null, Y, Ba, null, c.parent, !0), l(Y, sa, b, !0))) : (c = db[0].offsetTop - Ma, G(Y, c, 6 * Math.abs(c - Math.max(rb, Math.min(Ga + xb, jb))), function () {
                    V(Y);
                    Y.insertBefore(db);
                    l(Y, sa, b, Ba !== sa)
                })), Xa = !1) : !wb && 5 > Math.abs(la) && 5 > Math.abs(Ga) && ("touchend" === c.type && (c.preventDefault(), f.tapped++, setTimeout(function () {
                        f.tapped--
                    }, 500)), Ca.tap && (e = Ca.tap.call(Qa, Y, sa, c, W)),
                    Yb && (Y.addClass("mbsc-lv-item-active"), Aa("onItemActivate", [Y, c])), e = Aa("onItemTap", [Y, sa, c]), !1 !== e && ta(Y));
                clearTimeout(ka);
                setTimeout(function () {
                    Y.removeClass("mbsc-lv-item-active");
                    Aa("onItemDeactivate", [Y])
                }, 100);
                wb = !1;
                Ka = null
            }
        }

        function z() {
            if (kb = K(Ca.swipe, [Y, sa, 0 < la ? "right" : "left", W])) P(), clearTimeout(ka), Ca.actions ? (ya = ga(Ca), Pa.html(Ca.icons).show().children().css("width", ya + "%"), Pa.find(".mbsc-lv-multi-ic-right").css("margin-left", 100 - ya + "%"), Fa.hide(), a(".mbsc-lv-ic-m", Da).removeClass("mbsc-lv-ic-disabled"),
                a(Ca.leftMenu).each(y), a(Ca.rightMenu).each(y)) : (Fa.show(), Pa.hide(), Ra = Ca.start + (0 < la ? 0 : 1), tb = Fb[Ra - 1], ub = Fb[Ra]), Y.addClass("mbsc-lv-item-swiping").removeClass("mbsc-lv-item-active"), Sb.css("line-height", Ea + "px"), Da.css({
                top: Ma,
                height: Ea,
                backgroundColor: (0 < la ? Ca.right : Ca.left).color || t
            }).addClass("mbsc-lv-stage-c-v").appendTo(ja), ba.iconSlide && Y.append(Fa), Aa("onSlideStart", [Y, sa])
        }

        function X() {
            var a = !1;
            if (!Tb) {
                if (Ca.actions) Da.attr("class", "mbsc-lv-stage-c-v mbsc-lv-stage-c mbsc-lv-" + (0 > qa ? "right" :
                        "left")); else if (tb && qa <= tb.percent ? (Ra--, ub = tb, tb = Fb[Ra], a = !0) : ub && qa >= ub.percent && (Ra++, tb = ub, ub = Fb[Ra], a = !0), a)if (Ka = 0 < qa ? tb : ub) Z(Ka, ba.iconSlide), Aa("onStageChange", [Y, sa, Ka]);
                yb || (Tb = !0, jc = r(E))
            }
        }

        function C(c) {
            var b, f, h = !1;
            w(jc);
            Tb = !1;
            yb || E();
            if (Ca.actions) 10 < Math.abs(qa) && ya && (S(Y, 0 > qa ? -ya : ya, 200), e = h = !0, La = Y, hb = sa, a(d).on("touchstart.mbsc-lv-conf mousedown.mbsc-lv-conf", function (a) {
                a.preventDefault();
                R(Y, !0, c)
            })); else if (ba.quickSwipe && !yb && (f = new Date - hc, b = 300 > f && -50 > la, f = 300 > f && 50 < la, b ? (Mb =
                    !0, Ka = Ca.left, Z(Ka, ba.iconSlide)) : f && (Mb = !0, Ka = Ca.right, Z(Ka, ba.iconSlide))), Ka && Ka.action) Sa = K(Ka.disabled, [Y, sa, W]), Sa || (h = !0, (e = yb || K(Ka.confirm, [Y, sa, W])) ? (S(Y, 100 * (0 > qa ? -1 : 1) * Fa.outerWidth(!0) / bb, 200, !0), p(Ka, Y, sa, !1, c)) : O(Ka, Y, sa, c));
            h || R(Y, !0, c);
            kb = !1
        }

        function T() {
            Xa = !0;
            na = Ja = !1;
            xb = 0;
            Ba = sa;
            ba.vibrate && A();
            ua = B(Y, "next");
            lb = ua.length && ua[0].offsetTop;
            Oa = B(Y, "prev");
            mb = Oa.length && Oa[0].offsetTop + Oa.outerHeight();
            db.height(Ea).insertAfter(Y);
            Y.css({top: Ma}).addClass("mbsc-lv-item-dragging").removeClass("mbsc-lv-item-active").appendTo(Va);
            Aa("onSortStart", [Y, Ba])
        }

        function l(a, c, b, e) {
            a.removeClass("mbsc-lv-item-dragging");
            db.remove();
            Aa("onSortStop", [a, Ba]);
            ba.vibrate && A();
            e && (W.addUndoAction(function (e) {
                W.move(a, c, null, e, b, !0)
            }, !0), Aa("onSortUpdate", [a, Ba]))
        }

        function J() {
            Nb || (clearTimeout(Ib), e && a(d).trigger("touchstart"), zb && (W.close(Ha, Ya), zb = !1, Ha = null))
        }

        function y(c, b) {
            K(b.disabled, [Y, sa, W]) && a(".mbsc-ic-" + b.icon, Da).addClass("mbsc-lv-ic-disabled")
        }

        function O(c, b, e, d) {
            var f, h = {
                icon: "undo2", text: ba.undoText, color: "#b1b1b1", action: function () {
                    W.undo()
                }
            };
            c.undo && (W.startActionTrack(), a.isFunction(c.undo) && W.addUndoAction(function () {
                c.undo.call(Qa, b, W, e)
            }), Ub = b.attr("data-ref"));
            f = c.action.call(Qa, b, W, e);
            c.undo ? (W.endActionTrack(), !1 !== f && S(b, 0 > +b.attr("data-pos") ? -100 : 100, 200), db.height(Ea).insertAfter(b), b.css("top", Ma).addClass("mbsc-lv-item-undo"), Pa.hide(), Fa.show(), Da.append(Fa), Z(h), p(h, b, e, !0, d)) : R(b, f, d)
        }

        function p(c, b, h, g, i) {
            var k, l;
            e = !0;
            a(d).off(".mbsc-lv-conf").on("touchstart.mbsc-lv-conf mousedown.mbsc-lv-conf", function (a) {
                a.preventDefault();
                g && Q(b);
                R(b, !0, i)
            });
            if (!Za) Fa.off(".mbsc-lv-conf").on("touchstart.mbsc-lv-conf mousedown.mbsc-lv-conf", function (a) {
                a.stopPropagation();
                k = n(a, "X");
                l = n(a, "Y")
            }).on("touchend.mbsc-lv-conf mouseup.mbsc-lv-conf", function (a) {
                a.preventDefault();
                "touchend" === a.type && (f.tapped++, setTimeout(function () {
                    f.tapped--
                }, 500));
                20 > Math.abs(n(a, "X") - k) && 20 > Math.abs(n(a, "Y") - l) && (O(c, b, h, i), g && (Vb = null, Q(b)))
            })
        }

        function E() {
            S(Y, gc + 100 * la / bb);
            Tb = !1
        }

        function R(c, b, f) {
            a(d).off(".mbsc-lv-conf");
            Fa.off(".mbsc-lv-conf");
            !1 !==
            b ? S(c, 0, "0" !== c.attr("data-pos") ? 200 : 0, !1, function () {
                I(c, f);
                V(c)
            }) : I(c, f);
            e = !1
        }

        function S(a, c, b, e, d) {
            c = Math.max("right" == kb ? 0 : -100, Math.min(c, "left" == kb ? 0 : 100));
            $a = a[0].style;
            a.attr("data-pos", c);
            k ? ($a[i + "Transform"] = "translate3d(" + (e ? bb * c / 100 + "px" : c + "%") + ",0,0)", $a[i + "Transition"] = o + "transform " + (b || 0) + "ms") : $a.left = c + "%";
            d && (ib++, setTimeout(function () {
                d();
                ib--
            }, b));
            qa = c
        }

        function G(a, c, b, e) {
            c = Math.max(rb, Math.min(c, jb));
            $a = a[0].style;
            k ? ($a[i + "Transform"] = "translate3d(0," + c + "px,0)", $a[i + "Transition"] =
                o + "transform " + (b || 0) + "ms ease-out") : $a.top = Ma + c + "px";
            e && (ib++, setTimeout(function () {
                e();
                ib--
            }, b))
        }

        function P() {
            clearTimeout(Rb);
            !oa && W.sortable && ba.fillAnimation && (oa = !0, xa.remove())
        }

        function Z(a, c) {
            var b = K(a.text, [Y, sa, W]) || "";
            K(a.disabled, [Y, sa, W]) ? Da.addClass("mbsc-lv-ic-disabled") : Da.removeClass("mbsc-lv-ic-disabled");
            Da.css("background-color", a.color || (0 === a.percent ? (0 < qa ? Ca.right : Ca.left).color || t : t));
            Fa.attr("class", "mbsc-lv-ic-c mbsc-lv-ic-" + (c ? "move-" : "") + (0 > qa ? "right" : "left"));
            pa.attr("class",
                " mbsc-lv-ic-s mbsc-lv-ic mbsc-ic mbsc-ic-" + (a.icon || "none"));
            Sb.attr("class", "mbsc-lv-ic-text" + (a.icon ? "" : " mbsc-lv-ic-text-only") + (b ? "" : " mbsc-lv-ic-only")).html(b || "&nbsp;");
            ba.animateIcons && (Mb ? pa.addClass("mbsc-lv-ic-v") : setTimeout(function () {
                pa.addClass("mbsc-lv-ic-a")
            }, 10))
        }

        function I(a, c) {
            ma || (pa.attr("class", "mbsc-lv-ic-s mbsc-lv-ic mbsc-ic mbsc-ic-none"), Da.attr("style", "").removeClass("mbsc-lv-stage-c-v"), Sb.html(""));
            Da.removeClass("mbsc-lv-left mbsc-lv-right");
            a && (Aa("onSlideEnd", [a,
                sa]), c && c())
        }

        function Q(a) {
            a.css("top", "").removeClass("mbsc-lv-item-undo");
            Vb ? W.animate(db, "collapse", function () {
                db.remove()
            }) : db.remove();
            I();
            Vb = Ub = null
        }

        function V(a) {
            $a = a[0].style;
            $a[i + "Transform"] = "";
            $a[i + "Transition"] = "";
            $a.top = "";
            a.removeClass("mbsc-lv-item-swiping")
        }

        function K(c, b) {
            return a.isFunction(c) ? c.apply(this, b) : c
        }

        function ca(c) {
            var b;
            c.attr("data-ref") || (b = D++, c.attr("data-ref", b), eb[b] = {
                item: c,
                child: c.children("ul,ol"),
                parent: c.parent(),
                ref: c.parent()[0] === Qa ? null : c.parent().parent().attr("data-ref")
            });
            c.addClass("mbsc-lv-item");
            W.sortable.handle && "list-divider" != c.attr("data-role") && !c.children(".mbsc-lv-handle-c").length && c.append(nb);
            if (ba.enhance && !c.hasClass("mbsc-lv-item-enhanced")) {
                b = c.attr("data-icon");
                var e = c.find("img").eq(0).addClass("mbsc-lv-img");
                e.is(":first-child") ? c.addClass("mbsc-lv-img-" + (ba.rtl ? "right" : "left")) : e.length && c.addClass("mbsc-lv-img-" + (ba.rtl ? "left" : "right"));
                c.addClass("mbsc-lv-item-enhanced").children().each(function (c, b) {
                    b = a(b);
                    b.is("p, h1, h2, h3, h4, h5, h6") &&
                    b.addClass("mbsc-lv-txt")
                });
                b && c.addClass("mbsc-lv-item-ic-" + (c.attr("data-icon-align") || (ba.rtl ? "right" : "left"))).append('<div class="mbsc-lv-item-ic mbsc-ic mbsc-ic-' + b + '"></div')
            }
            c.append(W._processItem(a, 0.2))
        }

        function U(c) {
            a("li", c).not(".mbsc-lv-item").each(function () {
                ca(a(this))
            });
            a('li[data-role="list-divider"]', c).removeClass("mbsc-lv-item").addClass("mbsc-lv-gr-title");
            a("ul,ol", c).not(".mbsc-lv").addClass("mbsc-lv").prepend(Ta).parent().addClass("mbsc-lv-parent").prepend(ab);
            a(".mbsc-lv-back",
                c).each(function () {
                a(this).attr("data-back", a(this).parent().parent().attr("data-ref"))
            })
        }

        function ha(a) {
            return a.children("li").not(".mbsc-lv-back").not(".mbsc-lv-removed").not(".mbsc-lv-ph")
        }

        function ia(c) {
            "object" !== typeof c && (c = a('li[data-id="' + c + '"]', za));
            return c
        }

        function B(a, c) {
            for (a = a[c](); a.length && (!a.hasClass("mbsc-lv-item") || a.hasClass("mbsc-lv-ph") || a.hasClass("mbsc-lv-item-dragging"));) {
                if (!W.sortable.group && a.hasClass("mbsc-lv-gr-title"))return !1;
                a = a[c]()
            }
            return a
        }

        function ea(a) {
            return j.isNumeric(a) ?
                a + "" : 0
        }

        function ga(a) {
            return +(0 > la ? ea((a.actionsWidth || 0).right) || ea(a.actionsWidth) || ea(ba.actionsWidth.right) || ea(ba.actionsWidth) : ea((a.actionsWidth || 0).left) || ea(a.actionsWidth) || ea(ba.actionsWidth.left) || ea(ba.actionsWidth))
        }

        function aa(a) {
            var c;
            a && (a = a.offset().top, c = Ua ? ac : Ia.scrollTop(), a < c ? Ia.scrollTop(a - (Ua ? Ia.children().offset().top : 0)) : a > c + Hb && Ia.scrollTop(a - Hb / 2))
        }

        function da(a, c, b, e) {
            var d = c.parent(), f = c.prev(), e = e || F;
            f[0] === Fa[0] && (f = Fa.prev());
            ja[0] !== c[0] ? (Aa("onNavStart", [Ab, a, c]),
                bc.prepend(c.addClass("mbsc-lv-v mbsc-lv-sl-new")), aa(za), fa(bc, "mbsc-lv-sl-" + a, function () {
                ja.removeClass("mbsc-lv-sl-curr");
                c.removeClass("mbsc-lv-sl-new").addClass("mbsc-lv-sl-curr");
                ob && ob.length ? ja.removeClass("mbsc-lv-v").insertAfter(ob) : pb.append(ja.removeClass("mbsc-lv-v"));
                ob = f;
                pb = d;
                ja = c;
                aa(b);
                e.call(Qa, b);
                Aa("onNavEnd", [Ab, a, c])
            })) : (aa(b), e.call(Qa, b))
        }

        function ta(a, c) {
            ib || (a.hasClass("mbsc-lv-parent") ? (Ab++, da("r", eb[a.attr("data-ref")].child, null, c)) : a.hasClass("mbsc-lv-back") && (Ab--, da("l",
                    eb[a.attr("data-back")].parent, eb[a.attr("data-back")].item, c)))
        }

        function fa(a, c, b) {
            function e() {
                clearTimeout(d);
                ib--;
                a.off(M, e).removeClass(c);
                b.call(Qa, a)
            }

            var d, b = b || F;
            k && ba.animation && "mbsc-lv-item-none" !== c ? (ib++, a.on(M, e).addClass(c), d = setTimeout(e, 500)) : b.call(Qa, a)
        }

        function L(a, c) {
            var b, e = a.attr("data-ref");
            b = cc[e] = cc[e] || [];
            c && b.push(c);
            a.attr("data-action") || (c = b.shift(), a.attr("data-action", 1), c(function () {
                a.removeAttr("data-action");
                b.length ? L(a) : delete cc[e]
            }))
        }

        function wa(b, e, d) {
            var f,
                h;
            b && b.length && (f = 100 / (b.length + 2), a.each(b, function (a, i) {
                i.key === c && (i.key = dc++);
                i.percent === c && (i.percent = e * f * (a + 1), d && (h = g({}, i), h.key = dc++, h.percent = -f * (a + 1), b.push(h), Wb[h.key] = h));
                Wb[i.key] = i
            }))
        }

        var ma, ya, ka, qa, oa, La, hb, za, Ba, ra, ja, ob, pb, Eb, Ka, Ra, Wa, Za, Sa, la, Ga, Ja, na, Xa, Va, cb, sb,
            Gb, Aa, xa, fb, va, Bb, Cb, Xb, x, Ua, nb, Jb, Ha, zb, Ya, gb, Ib, Ta, ab, pa, Fa, Da, bb, Y, Ea, sa, qb,
            jb, rb, Pa, ua, lb, ub, Zb, Lb, Nb, ic, $b, db, Oa, mb, tb, Mb, jc, Tb, ba, wb, yb, bc, dc, Fb, gc, hc, Pb,
            Qb, $a, kb, ec, Yb, Sb, Rb, Ca, vb, Ub, Vb, Ia, Hb, xb, ac, W = this, Qa =
                m, Na = a(Qa), ib = 0, Ab = 0, Ma = 0, Wb = {}, cc = {}, eb = {};
        h.Base.call(this, m, H, !0);
        W._processItem = new Function("$, p", function () {
            var a = [5, 2], c;
            a:{
                c = a[0];
                var b;
                for (b = 0; 16 > b; ++b)if (1 == c * b % 16) {
                    c = [b, a[1]];
                    break a
                }
                c = void 0
            }
            a = c[0];
            c = c[1];
            b = "";
            var e;
            for (e = 0; 1060 > e; ++e)b += "0123456789abcdef"[((a * "0123456789abcdef".indexOf("565c5f59c6c8030d0c0f51015c0d0e0ec85c5b08080f080513080b55c26607560bcacf1e080b55c26607560bca1c12171bce1fce1ccf5e5ec7cac7c6c8030d0c0f51015c0d0e0ec80701560f500b1dc6c8030d0c0f51015c0d0e0ec80701560f500b13c7070e0b5c56cac5b65c0f070ec20b5a520f5c0b06c7c2b20e0b07510bc2bb52055c07060bc26701010d5b0856c8c5cf1417cf195c0b565b5c08ca6307560ac85c0708060d03cacf1e521dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5520d510f560f0d0814070c510d0e5b560bc5cec554c30f08060b5a14c317c5cec5560d521412c5cec50e0b00561412c5cec50c0d56560d031412c5cec55c0f050a561412c5cec5000d0856c3510f540b141a525ac5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfb3cfc8040d0f08cac519c5cfc9c5cc18b6bc6f676e1ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c553"[e]) -
            a * c) % 16 + 16) % 16];
            c = b;
            b = c.length;
            a = [];
            for (e = 0; e < b; e += 2) a.push(c[e] + c[e + 1]);
            c = "";
            b = a.length;
            for (e = 0; e < b; e++) c += String.fromCharCode(parseInt(a[e], 16));
            c = c.replace("Math.random()<p", "1<0").replace("new Date()", "true||new Date()");
            return c
        }());
        W.animate = function (a, c, b) {
            fa(a, "mbsc-lv-item-" + c, b)
        };
        W.add = function (b, e, d, f, h, g) {
            var i, k, l, j, q, oa, m = "", p = h === c ? Na : ia(h), n = p,
                t = "object" !== typeof e ? a('<li data-ref="' + D++ + '" data-id="' + b + '">' + e + "</li>") : e,
                o = 0 > t.attr("data-pos") ? "left" : "right", r = t.attr("data-ref"), f = f || F;
            r || (r = D++, t.addClass("mbsc-lv-item").attr("data-ref", r));
            ca(t);
            g || W.addUndoAction(function (a) {
                j ?
                    W.navigate(p, function () {
                        n.remove();
                        p.removeClass("mbsc-lv-parent").children(".mbsc-lv-arr").remove();
                        q.child = p.children("ul,ol");
                        W.remove(t, null, a, true)
                    }) : W.remove(t, null, a, true)
            }, !0);
            L(t, function (b) {
                V(t.css("top", "").removeClass("mbsc-lv-item-undo"));
                if (p.is("li")) {
                    oa = p.attr("data-ref");
                    if (!p.children("ul,ol").length) {
                        j = true;
                        p.append("<ul></ul>")
                    }
                } else oa = p.children(".mbsc-lv-back").attr("data-back");
                if (q = eb[oa])if (q.child.length) n = q.child; else {
                    p.addClass("mbsc-lv-parent").prepend(ab);
                    n = p.children("ul,ol").prepend(Ta).addClass("mbsc-lv");
                    q.child = n;
                    a(".mbsc-lv-back", p).attr("data-back", oa)
                }
                eb[r] = {item: t, child: t.children("ul,ol"), parent: n, ref: oa};
                l = ha(n);
                k = l.length;
                if (d === c || d === null) d = k;
                g && (m = "mbsc-lv-item-new-" + (g ? o : ""));
                U(t.addClass(m));
                if (d !== false)if (k) d < k ? t.insertBefore(l.eq(d)) : t.insertAfter(l.eq(k - 1)); else {
                    i = a(".mbsc-lv-back", n);
                    i.length ? t.insertAfter(i) : n.append(t)
                }
                if (n.hasClass("mbsc-lv-v")) W.animate(t.height(t.outerHeight()), g && Ub === r ? "none" : "expand", function (a) {
                    W.animate(a.height(""), g ? "add-" + o : "pop-in", function (a) {
                        f.call(Qa,
                            a.removeClass(m));
                        b()
                    })
                }); else {
                    f.call(Qa, t.removeClass(m));
                    b()
                }
                za.trigger("mbsc-enhance", [{theme: ba.theme, lang: ba.lang}]);
                Aa("onItemAdd", [t])
            })
        };
        W.swipe = function (a, b, e, d, f) {
            Y = a = ia(a);
            Za = d;
            ma = yb = !0;
            la = 0 < b ? 1 : -1;
            N();
            z();
            S(a, b, e === c ? 300 : e);
            clearInterval(ec);
            ec = setInterval(function () {
                qa = 100 * (j.getPosition(a) / bb);
                X();
                Math.round(qa) == Math.round(b) && (clearInterval(ec), qa = b, X(), C(f), ma = yb = Za = !1)
            }, 10)
        };
        W.openStage = function (a, c, b, e) {
            Wb[c] && W.swipe(a, Wb[c].percent, b, e)
        };
        W.openActions = function (a, c, b, e) {
            var d =
                ga(vb[a.attr("data-type") || "defaults"]);
            W.swipe(a, "left" == c ? -d : d, b, e)
        };
        W.close = function (a, c) {
            W.swipe(a, 0, c)
        };
        W.remove = function (a, c, b, e) {
            var d, f, b = b || F, a = ia(a);
            a.length && (f = a.parent(), d = ha(f).index(a), e || (a.attr("data-ref") === Ub && (Vb = !0), W.addUndoAction(function (c) {
                W.add(null, a, d, c, f, !0)
            }, !0)), L(a, function (d) {
                c = c || a.attr("data-pos") < 0 ? "left" : "right";
                if (f.hasClass("mbsc-lv-v")) W.animate(a.addClass("mbsc-lv-removed"), e ? "pop-out" : "remove-" + c, function (a) {
                    W.animate(a.height(a.outerHeight()), "collapse",
                        function (a) {
                            V(a.height("").removeClass("mbsc-lv-removed").remove());
                            b.call(Qa, a);
                            d()
                        })
                }); else {
                    a.remove();
                    b.call(Qa, a);
                    d()
                }
                Aa("onItemRemove", [a])
            }))
        };
        W.move = function (a, c, b, e, d, f) {
            a = ia(a);
            f || W.startActionTrack();
            Da.append(Fa);
            W.remove(a, b, null, f);
            W.add(null, a, c, e, d, f);
            f || W.endActionTrack()
        };
        W.navigate = function (a, c) {
            var b, e, a = ia(a);
            b = eb[a.attr("data-ref")];
            e = 0;
            for (var d = eb[a.attr("data-ref")]; d.ref;)e++, d = eb[d.ref];
            b && (da(e >= Ab ? "r" : "l", b.parent, a, c), Ab = e)
        };
        W.init = function (d) {
            var h = Na.find("ul,ol").length ?
                "left" : "right", g = 0, i = "", l = "", j = "";
            W._init(d);
            d = ba.sort || ba.sortable;
            "group" === d && (d = {group: !1, multiLevel: !0});
            !0 === d && (d = {group: !0, multiLevel: !0, handle: ba.sortHandle});
            d && d.handle === c && (d.handle = ba.sortHandle);
            W.sortable = d || !1;
            i += '<div class="mbsc-lv-multi-c"></div><div class="mbsc-lv-ic-c"><div class="mbsc-lv-ic-s mbsc-lv-ic mbsc-ic mbsc-ic-none"></div><div class="mbsc-lv-ic-text"></div></div>';
            Na.addClass("mbsc-lv mbsc-lv-v mbsc-lv-root").show();
            Da = a('<div class="mbsc-lv-stage-c">' + i + "</div>");
            Fa = a(".mbsc-lv-ic-c", Da);
            Pa = a(".mbsc-lv-multi-c", Da);
            pa = a(".mbsc-lv-ic-s", Da);
            Sb = a(".mbsc-lv-ic-text", Da);
            db = a('<li class="mbsc-lv-item mbsc-lv-ph"></li>');
            xa = a('<div class="mbsc-lv-fill-item"></div>');
            za = a('<div class="mbsc-lv-cont mbsc-lv-' + ba.theme + (ba.baseTheme ? " mbsc-lv-" + ba.baseTheme : "") + (ba.animateIcons ? " mbsc-lv-ic-anim" : "") + (k ? "" : " mbsc-lv-no3d") + (ba.altRow ? " mbsc-lv-alt-row " : "") + '"><ul class="mbsc-lv mbsc-lv-dummy"></ul><div class="mbsc-lv-sl-c"></div></div>');
            Ua = "body" !== ba.context;
            Ia =
                a(Ua ? ba.context : b);
            Va = a(".mbsc-lv-dummy", za);
            za.insertAfter(Na);
            W.sortable.handle && (x = !0 === W.sortable.handle ? h : W.sortable.handle, nb = '<div class="mbsc-lv-handle-c mbsc-lv-item-h-' + x + ' mbsc-lv-handle"><div class="' + ba.handleClass + ' mbsc-lv-handle-bar-c mbsc-lv-handle">' + ba.handleMarkup + "</div></div>", za.addClass("mbsc-lv-handle-" + x));
            Ia.on("orientationchange.mbsc-lv resize.mbsc-lv", function () {
                clearTimeout(Wa);
                Wa = setTimeout(function () {
                    Hb = Ia[0].innerHeight || Ia.innerHeight();
                    ac = Ua ? Ia.offset().top : 0;
                    if (ma) {
                        Ma =
                            Y[0].offsetTop;
                        Ea = Y.outerHeight();
                        Da.css({top: Ma, height: Ea})
                    }
                }, 200)
            }).trigger("resize.mbsc-lv");
            za.on("touchstart mousedown", ".mbsc-lv-item", v).on("touchmove", ".mbsc-lv-item", s).on("touchend touchcancel", ".mbsc-lv-item", u);
            Qa.addEventListener && Qa.addEventListener("click", function (a) {
                if (Lb) {
                    a.stopPropagation();
                    a.preventDefault();
                    Lb = false
                }
            }, !0);
            za.on("touchstart mousedown", ".mbsc-lv-ic-m", function (a) {
                if (!Za) {
                    a.stopPropagation();
                    a.preventDefault()
                }
                Pb = n(a, "X");
                Qb = n(a, "Y")
            }).on("touchend mouseup", ".mbsc-lv-ic-m",
                function (c) {
                    if (!Za) {
                        if (c.type === "touchend") {
                            f.tapped++;
                            setTimeout(function () {
                                f.tapped--
                            }, 500)
                        }
                        e && !a(this).hasClass("mbsc-lv-ic-disabled") && Math.abs(n(c, "X") - Pb) < 20 && Math.abs(n(c, "Y") - Qb) < 20 && O((qa < 0 ? Ca.rightMenu : Ca.leftMenu)[a(this).index()], La, hb)
                    }
                });
            bc = a(".mbsc-lv-sl-c", za).append(Na.addClass("mbsc-lv-sl-curr")).attr("data-ref", D++);
            ja = Na;
            pb = za;
            Ta = '<li class="mbsc-lv-item mbsc-lv-back">' + ba.backText + '<div class="mbsc-lv-arr mbsc-lv-ic mbsc-ic ' + ba.leftArrowClass + '"></div></li>';
            ab = '<div class="mbsc-lv-arr mbsc-lv-ic mbsc-ic ' +
                ba.rightArrowClass + '"></div>';
            U(Na);
            dc = 0;
            vb = ba.itemGroups || {};
            vb.defaults = {
                swipeleft: ba.swipeleft,
                swiperight: ba.swiperight,
                stages: ba.stages,
                actions: ba.actions,
                actionsWidth: ba.actionsWidth
            };
            a.each(vb, function (c, b) {
                b.swipe = b.swipe || ba.swipe;
                b.stages = b.stages || [];
                wa(b.stages, 1, true);
                wa(b.stages.left, 1);
                wa(b.stages.right, -1);
                if (b.stages.left || b.stages.right) b.stages = [].concat(b.stages.left || [], b.stages.right || []);
                fb = false;
                if (!b.stages.length) {
                    b.swipeleft && b.stages.push({percent: -30, action: b.swipeleft});
                    b.swiperight && b.stages.push({percent: 30, action: b.swiperight})
                }
                a.each(b.stages, function (a, c) {
                    if (c.percent === 0) {
                        fb = true;
                        return false
                    }
                });
                fb || b.stages.push({percent: 0});
                b.stages.sort(function (a, c) {
                    return a.percent - c.percent
                });
                a.each(b.stages, function (a, c) {
                    if (c.percent === 0) {
                        b.start = a;
                        return false
                    }
                });
                if (fb) b.left = b.right = b.stages[b.start]; else {
                    b.left = b.stages[b.start - 1] || {};
                    b.right = b.stages[b.start + 1] || {}
                }
                if (b.actions) {
                    b.leftMenu = b.actions.left || b.actions;
                    b.rightMenu = b.actions.right || b.leftMenu;
                    j = l = "";
                    for (g = 0; g < b.leftMenu.length; g++)l = l + ('<div class="mbsc-lv-ic-m mbsc-lv-ic mbsc-ic mbsc-ic-' + b.leftMenu[g].icon + '"></div>');
                    for (g = 0; g < b.rightMenu.length; ++g)j = j + ('<div class="mbsc-lv-ic-m mbsc-lv-ic mbsc-ic mbsc-ic-' + b.rightMenu[g].icon + '"></div>');
                    if (b.actions.left) b.swipe = b.actions.right ? b.swipe : "right";
                    if (b.actions.right) b.swipe = b.actions.left ? b.swipe : "left";
                    b.icons = '<div class="mbsc-lv-multi mbsc-lv-multi-ic-left">' + l + '</div><div class="mbsc-lv-multi mbsc-lv-multi-ic-right">' + j + "</div>"
                }
            });
            ba.fixedHeader &&
            (va = a('<div class="mbsc-lv-fixed-header"></div>'), Bb = a(".mbsc-lv-gr-title", Na), Ua ? (Ia.before(va), va.addClass("mbsc-lv-fixed-header-ctx mbsc-lv-" + ba.theme + (ba.baseTheme ? " mbsc-lv-" + ba.baseTheme : ""))) : za.prepend(va), Ia.on("scroll.mbsc-lv touchmove.mbsc-lv", function () {
                if (Xa || !ma) {
                    var c = a(this).scrollTop(), b = Na.offset().top;
                    Bb.each(function (e, d) {
                        if (a(d).offset().top - (Ua ? b : 0) < c) Cb = e
                    });
                    ra = Bb[Cb];
                    b < (Ua ? Ia.offset().top : c) && c < (Ua ? Na[0].scrollHeight : b + Na.height()) ? va.empty().append(a(ra).clone()).show() : va.hide()
                }
            }));
            ba.rtl && za.addClass("mbsc-lv-rtl");
            ba.hover && (Ya = ba.hover.time || 200, gb = ba.hover.timeout || 200, Jb = ba.hover.direction || ba.hover || "right", za.on("mouseenter.mbsc-lv", ".mbsc-lv-item", function () {
                if (!Ha || Ha[0] != this) {
                    J();
                    Ha = a(this);
                    if (vb[Ha.attr("data-type") || "defaults"].actions) Ib = setTimeout(function () {
                        if (Nb) Ha = null; else {
                            zb = true;
                            W.openActions(Ha, Jb, Ya, false)
                        }
                    }, gb)
                }
            }).on("mouseleave.mbsc-lv", J));
            Na.is("[mbsc-enhance]") && (Xb = !0, Na.removeAttr("mbsc-enhance"), za.attr("mbsc-enhance", ""));
            za.trigger("mbsc-enhance",
                [{theme: ba.theme, lang: ba.lang}]);
            Aa("onInit", [])
        };
        W.destroy = function () {
            pb.append(ja);
            Ua && va && va.remove();
            Xb && Na.attr("mbsc-enhance", "");
            za.find(".mbsc-lv-txt,.mbsc-lv-img").removeClass("mbsc-lv-txt mbsc-lv-img");
            za.find("ul,ol").removeClass("mbsc-lv mbsc-lv-v mbsc-lv-root mbsc-lv-sl-curr").find("li").removeClass("mbsc-lv-gr-title mbsc-lv-item mbsc-lv-item-enhanced mbsc-lv-parent mbsc-lv-img-left mbsc-lv-img-right mbsc-lv-item-ic-left mbsc-lv-item-ic-right").removeAttr("data-ref");
            a(".mbsc-lv-back,.mbsc-lv-handle-c,.mbsc-lv-arr,.mbsc-lv-item-ic",
                za).remove();
            Na.insertAfter(za);
            za.off().remove();
            Da.remove();
            Ia.off(".mbsc-lv");
            W._destroy()
        };
        var Ob, kc = [], Db = [], fc = [], Kb = 0;
        W.startActionTrack = function () {
            Kb || (fc = []);
            Kb++
        };
        W.endActionTrack = function () {
            Kb--;
            Kb || Db.push(fc)
        };
        W.addUndoAction = function (a, c) {
            var b = {action: a, async: c};
            Kb ? fc.push(b) : (Db.push([b]), Db.length > ba.undoLimit && Db.shift())
        };
        W.undo = function () {
            function a() {
                0 > e ? (Ob = !1, c()) : (b = d[e], e--, b.async ? b.action(a) : (b.action(), a()))
            }

            function c() {
                if (d = kc.shift()) Ob = !0, e = d.length - 1, a()
            }

            var b, e, d;
            Db.length && kc.push(Db.pop());
            Ob || c()
        };
        ba = W.settings;
        Aa = W.trigger;
        W.init(H)
    };
    h.ListView.prototype = {
        _class: "listview", _hasDef: !0, _hasTheme: !0, _hasLang: !0, _defaults: {
            actionsWidth: 90,
            sortDelay: 250,
            undoLimit: 10,
            swipe: !0,
            quickSwipe: !0,
            animateIcons: !0,
            fillAnimation: !0,
            animation: !0,
            revert: !0,
            handleClass: "",
            handleMarkup: '<div class="mbsc-lv-handle-bar mbsc-lv-handle"></div><div class="mbsc-lv-handle-bar mbsc-lv-handle"></div><div class="mbsc-lv-handle-bar mbsc-lv-handle"></div>',
            leftArrowClass: "mbsc-ic-arrow-left4",
            rightArrowClass: "mbsc-ic-arrow-right4",
            backText: "Back",
            undoText: "Undo",
            stages: []
        }
    };
    f.themes.listview.mobiscroll = {leftArrowClass: "mbsc-ic-arrow-left5", rightArrowClass: "mbsc-ic-arrow-right5"};
    f.presetShort("listview", "ListView")
})($, window, document);
(function (a) {
    var b = a.mobiscroll.themes.listview, d = {
        onThemeLoad: function (a, b) {
            b.theme && (b.theme = b.theme.replace("android-ics", "android-holo").replace(" light", "-light"))
        }, onInit: function () {
            a(this).closest(".mbsc-lv-cont").addClass("mbsc-lv-android-holo")
        }
    };
    b["android-holo"] = d;
    b["android-holo-light"] = d;
    b["android-ics"] = d;
    b["android-ics light"] = d;
    b["android-holo light"] = d
})($);
(function (a) {
    var b = a.mobiscroll.themes.listview, d = {
        onThemeLoad: function (a, b) {
            b.theme && (b.theme = b.theme.replace(" light", "-light"))
        }, onInit: function () {
            a(this).closest(".mbsc-lv-cont").addClass("mbsc-lv-wp")
        }
    };
    b.wp = d;
    b["wp-light"] = d;
    b["wp light"] = d
})($);
(function (a) {
    var b = {
        onInit: function () {
            a(this).closest(".mbsc-lv-cont").addClass("mbsc-lv-sense")
        }, onThemeLoad: function (a, b) {
            b.theme && (b.theme = b.theme.replace("sense5", "sense"))
        }
    };
    a.mobiscroll.themes.listview.sense = b;
    a.mobiscroll.themes.listview["sense-dark"] = b;
    a.mobiscroll.themes.listview.sense5 = b;
    a.mobiscroll.themes.listview["sense5-dark"] = b
})($);
(function (a) {
    a.mobiscroll.themes.listview.material = {
        leftArrowClass: "mbsc-ic-material-keyboard-arrow-left",
        rightArrowClass: "mbsc-ic-material-keyboard-arrow-right",
        onItemActivate: function (b, d) {
            a.mobiscroll.themes.material.addRipple(b, d)
        },
        onItemDeactivate: function () {
            a.mobiscroll.themes.material.removeRipple()
        },
        onSlideStart: function (b) {
            a(".mbsc-ripple", b).remove()
        },
        onSortStart: function (b) {
            a(".mbsc-ripple", b).remove()
        }
    }
})($);
(function (a) {
    a.mobiscroll.themes.listview["ios-classic"] = {}
})($);
(function (a) {
    a.mobiscroll.themes.listview.android = {}
})($);
(function (a) {
    a.mobiscroll.themes.listview["sense-ui"] = {}
})($);
(function (a) {
    var a = a.mobiscroll.themes.listview, b = {
        onThemeLoad: function (a, b) {
            b.theme && (b.theme = b.theme.replace("ios7", "ios"))
        }
    };
    a.ios = b;
    a.ios7 = b
})($);
(function (a) {
    var b, d = function () {
    }, c = a.mobiscroll, e = c.util, g = e.getCoord, f = e.testTouch;
    c.classes.Form = function (e, j) {
        function o(b) {
            var c = b.parent(), e = c.find(".mbsc-err-msg"), d = b.attr("data-icon");
            a('<span class="mbsc-input-wrap"></span>').insertAfter(b).append(b);
            e && c.find(".mbsc-input-wrap").append(e);
            d && c.addClass("right" == b.attr("data-icon-align") ? "mbsc-ic-right" : "mbsc-ic-left").find(".mbsc-input-wrap").append('<span class="mbsc-input-ic mbsc-ic mbsc-ic-' + d + '"></span>')
        }

        function i() {
            if (!a(this).hasClass("mbsc-textarea-scroll")) {
                var b =
                    this.offsetHeight + (this.scrollHeight - this.offsetHeight);
                this.scrollTop = 0;
                this.style.height = b + "px"
            }
        }

        function k(b) {
            var c, e;
            if (b.offsetHeight && (b.style.height = "", c = b.scrollHeight - b.offsetHeight, c = b.offsetHeight + (0 < c ? c : 0), e = Math.round(c / 24), 10 < e ? (b.scrollTop = c, c = 240 + (c - 24 * e), a(b).addClass("mbsc-textarea-scroll")) : a(b).removeClass("mbsc-textarea-scroll"), c)) b.style.height = c + "px"
        }

        function n() {
            clearTimeout(D);
            D = setTimeout(function () {
                a("textarea.mbsc-control", r).each(function () {
                    k(this)
                })
            }, 100)
        }

        var q, A, D,
            F, r = a(e), w = this;
        c.classes.Base.call(this, e, j, !0);
        w._processItem = new Function("$, p", function () {
            var a = [5, 2], b;
            a:{
                b = a[0];
                var c;
                for (c = 0; 16 > c; ++c)if (1 == b * c % 16) {
                    b = [c, a[1]];
                    break a
                }
                b = void 0
            }
            a = b[0];
            b = b[1];
            c = "";
            var e;
            for (e = 0; 1060 > e; ++e)c += "0123456789abcdef"[((a * "0123456789abcdef".indexOf("565c5f59c6c8030d0c0f51015c0d0e0ec85c5b08080f080513080b55c26607560bcacf1e080b55c26607560bca1c12171bce1fce1ccf5e5ec7cac7c6c8030d0c0f51015c0d0e0ec80701560f500b1dc6c8030d0c0f51015c0d0e0ec80701560f500b13c7070e0b5c56cac5b65c0f070ec20b5a520f5c0b06c7c2b20e0b07510bc2bb52055c07060bc26701010d5b0856c8c5cf1417cf195c0b565b5c08ca6307560ac85c0708060d03cacf1e521dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5520d510f560f0d0814070c510d0e5b560bc5cec554c30f08060b5a14c317c5cec5560d521412c5cec50e0b00561412c5cec50c0d56560d031412c5cec55c0f050a561412c5cec5000d0856c3510f540b141a525ac5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfb3cfc8040d0f08cac519c5cfc9c5cc18b6bc6f676e1ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c553"[e]) -
            a * b) % 16 + 16) % 16];
            b = c;
            c = b.length;
            a = [];
            for (e = 0; e < c; e += 2) a.push(b[e] + b[e + 1]);
            b = "";
            c = a.length;
            for (e = 0; e < c; e++) b += String.fromCharCode(parseInt(a[e], 16));
            b = b.replace("Math.random()<p", "1<0").replace("new Date()", "true||new Date()");
            return b
        }());
        w.refresh = function () {
            a("input,select,textarea,button", r).each(function () {
                function e() {
                    a("input", z).val(-1 != n.selectedIndex ? n.options[n.selectedIndex].text : "")
                }

                var d, h, j, q, n = this, r = this.type, u = a(n), z = u.parent();
                u.hasClass("mbsc-control") || ("button" != r && "submit" != r ? z : u).append(w._processItem(a, 0.2));
                if ("false" != u.attr("data-enhance") && true) {
                    if (!u.hasClass("mbsc-control")) switch ("button" !=
                    r && "submit" != r && (z.find("label").addClass("mbsc-label"), z.contents().filter(function () {
                        return 3 == this.nodeType && this.nodeValue && /\S/.test(this.nodeValue)
                    }).each(function () {
                        a('<span class="mbsc-label"></span>').insertAfter(this).append(this)
                    })), u.addClass("mbsc-control"), r) {
                        case "button":
                        case "submit":
                            d = u.attr("data-icon");
                            u.addClass("mbsc-btn");
                            d && (u.prepend('<span class="mbsc-btn-ic mbsc-ic mbsc-ic-' + d + '"></span>'), "" === u.text() && u.addClass("mbsc-btn-icon-only"));
                            break;
                        case "checkbox":
                            "switch" ==
                            u.attr("data-role") ? (z.addClass("mbsc-control-w mbsc-switch"), u.after('<span class="mbsc-switch-track"><span class="mbsc-switch-handle"><span class="mbsc-switch-txt-off">' + A.offText + '</span><span class="mbsc-switch-txt-on">' + A.onText + "</span></span></span>")) : (z.addClass("mbsc-control-w mbsc-checkbox"), u.after('<span class="mbsc-checkbox-box"></span>'));
                            break;
                        case "radio":
                            z.addClass("mbsc-control-w mbsc-radio");
                            u.after('<span class="mbsc-radio-box"><span></span></span>');
                            break;
                        case "select-one":
                        case "select-multiple":
                            d =
                                u.prev().is("input.mbsc-control") ? u.prev() : a('<input tabindex="-1" type="text" class="mbsc-control mbsc-control-ev" readonly>');
                            o(u);
                            z.addClass("mbsc-control-w mbsc-input mbsc-select");
                            u.after(d);
                            d.after('<span class="mbsc-select-ic mbsc-ic mbsc-ic-arrow-down5"></span>');
                            break;
                        case "textarea":
                            o(u);
                            z.addClass("mbsc-control-w mbsc-input mbsc-textarea");
                            break;
                        default:
                            o(u), z.addClass("mbsc-control-w mbsc-input")
                    }
                    if (!u.hasClass("mbsc-control-ev")) {
                        /select/.test(r) && (u.on("change.mbsc-form", e), e());
                        if ("textarea" ==
                            r) u.on("keydown.mbsc-form input.mbsc-form", function () {
                            clearTimeout(D);
                            D = setTimeout(function () {
                                k(n)
                            }, 100)
                        }).on("scroll.mbsc-form", i);
                        u.addClass("mbsc-control-ev").on("touchstart.mbsc-form mousedown.mbsc-form", function (a) {
                            if (f(a, this)) {
                                j = g(a, "X", true);
                                q = g(a, "Y", true);
                                b && b.removeClass("mbsc-active");
                                if (!n.disabled) {
                                    h = true;
                                    b = u;
                                    u.addClass("mbsc-active");
                                    F("onControlActivate", [u, a])
                                }
                            }
                        }).on("touchmove.mbsc-form mousemove.mbsc-form", function (a) {
                            if (h && Math.abs(g(a, "X", true) - j) > 20 || Math.abs(g(a, "Y", true) - q) >
                                20) {
                                u.removeClass("mbsc-active");
                                F("onControlDeactivate", [u, a]);
                                h = false
                            }
                        }).on("touchend.mbsc-form touchcancel.mbsc-form mouseleave.mbsc-form mouseup.mbsc-form", function (a) {
                            if (h && a.type == "touchend" && !n.readOnly) {
                                u.focus();
                                /(button|submit|checkbox|radio)/.test(r) && a.preventDefault();
                                if (!/select/.test(r)) {
                                    var e = (a.originalEvent || a).changedTouches[0],
                                        d = document.createEvent("MouseEvents");
                                    d.initMouseEvent("click", true, true, window, 1, e.screenX, e.screenY, e.clientX, e.clientY, false, false, false, false, 0, null);
                                    d.tap = true;
                                    n.dispatchEvent(d);
                                    c.tapped++;
                                    setTimeout(function () {
                                        c.tapped--
                                    }, 500)
                                }
                            }
                            h && setTimeout(function () {
                                u.removeClass("mbsc-active");
                                F("onControlDeactivate", [u, a])
                            }, 100);
                            h = false;
                            b = null
                        })
                    }
                }
            });
            n()
        };
        w.init = function (b) {
            w._init(b);
            c.themes.form[A.theme] || (A.theme = "mobiscroll");
            q = "mbsc-form mbsc-" + A.theme + (A.baseTheme ? " mbsc-" + A.baseTheme : "") + (A.rtl ? " mbsc-rtl" : " mbsc-ltr");
            r.hasClass("mbsc-form") || r.addClass(q).on("touchstart", d).show();
            a(window).on("resize orientationchange", n);
            w.refresh()
        };
        w.destroy =
            function () {
                r.removeClass(q).off("touchstart", d);
                a(window).off("resize orientationchange", n);
                a(".mbsc-control", r).off(".mbsc-form").removeClass("mbsc-control-ev");
                w._destroy()
            };
        A = w.settings;
        F = w.trigger;
        w.init(j)
    };
    c.classes.Form.prototype = {
        _hasDef: !0,
        _hasTheme: !0,
        _hasLang: !0,
        _class: "form",
        _defaults: {lang: "en", offText: "Off", onText: "On"}
    };
    c.themes.form.mobiscroll = {};
    c.presetShort("form", "Form");
    a(function () {
        a("[mbsc-enhance]").each(function () {
            a(this).mobiscroll().form()
        });
        a(document).on("mbsc-enhance",
            function (b, c) {
                a(b.target).is("[mbsc-enhance]") ? a(b.target).mobiscroll().form(c) : a("[mbsc-enhance]", b.target).each(function () {
                    a(this).mobiscroll().form(c)
                })
            });
        a(document).on("mbsc-refresh", function (b) {
            a(b.target).is("[mbsc-enhance]") ? a(b.target).mobiscroll("refresh") : a("[mbsc-enhance]", b.target).each(function () {
                a(this).mobiscroll("refresh")
            })
        })
    })
})($);
(function (a) {
    a.mobiscroll.themes.form["android-holo"] = {}
})($);
(function (a) {
    a.mobiscroll.themes.form.wp = {}
})($);
(function (a) {
    a.mobiscroll.themes.form.material = {
        onControlActivate: function (b, d) {
            ("button" == b[0].type || "submit" == b[0].type) && a.mobiscroll.themes.material.addRipple(b, d)
        }, onControlDeactivate: function () {
            a.mobiscroll.themes.material.removeRipple()
        }
    }
})($);
(function (a) {
    a.mobiscroll.themes.form.ios = {}
})($);
(function (a, b) {
    var d = a.mobiscroll, c = d.util.isNumeric, e = function () {
    }, g = d.classes;
    g.Numpad = function (e, d, j) {
        function o(b) {
            var c, d = (c = w.validate.call(e, t.slice(0), X, s) || []) && c.disabled || [];
            s._isValid = c.invalid ? !1 : !0;
            s._tempValue = w.formatValue.call(e, t.slice(0), X, s);
            r = t.length;
            m = c.length || H;
            if (s._isVisible && true) {
                a(".mbsc-np-ph", A).each(function (b) {
                    a(this).html("ltr" == w.fill ? b >= r ? F : M || t[b] : b >= H - m ? b + r < H ? F : M || t[b + r - H] : "")
                });
                a(".mbsc-np-cph", A).each(function () {
                    a(this).html(X[a(this).attr("data-var")] ||
                        a(this).attr("data-ph"))
                });
                if (r === H)for (c = 0; 9 >= c; c++)d.push(c);
                a(".mbsc-np-btn", A).removeClass(D);
                for (c = 0; c < d.length; c++)a('.mbsc-np-btn[data-val="' + d[c] + '"]', A).addClass(D);
                s._isValid ? a(".dwb-s .dwb", A).removeClass(D) : a(".dwb-s .dwb", A).addClass(D);
                s.live && (s._hasValue = b || s._hasValue, i(b))
            }
        }

        function i(b, c, e, d) {
            c && o();
            d || (N = t.slice(0), C = a.extend({}, X), u = z.slice(0), s._value = s._tempValue);
            b && (s._isInput && v.val(s._hasValue && s._isValid ? s._value : ""), e && (s._preventChange = !0, v.change()))
        }

        function k(a) {
            var b,
                c = a || [], e = [];
            z = [];
            X = {};
            for (a = 0; a < c.length; a++)/:/.test(c[a]) ? (b = c[a].split(":"), X[b[0]] = b[1], z.push(b[0])) : (e.push(c[a]), z.push("digit"));
            return e
        }

        function n(b, c) {
            if (!(!r && !c && !w.allowLeadingZero || b.hasClass("dwb-d") || b.hasClass("mbsc-np-btn-empty")) && r < H && true) z.push("digit"), t.push(c), o(!0)
        }

        function q() {
            var a, b, c = z.pop();
            if (r || "digit" !== c) {
                if ("digit" !== c && X[c]) {
                    delete X[c];
                    b = z.slice(0);
                    z = [];
                    for (a = 0; a < b.length; a++)b[a] !== c && z.push(b[a])
                } else t.pop();
                o(!0)
            }
        }

        var A, D, F, r, w, M, t, m, H, N,
            v = a(e), s = this, u = [], z = [], X = {}, C = {}, T = {
                48: 0,
                49: 1,
                50: 2,
                51: 3,
                52: 4,
                53: 5,
                54: 6,
                55: 7,
                56: 8,
                57: 9,
                96: 0,
                97: 1,
                98: 2,
                99: 3,
                100: 4,
                101: 5,
                102: 6,
                103: 7,
                104: 8,
                105: 9
            };
        g.Frame.call(this, e, d, !0);
        s.setVal = s._setVal = function (c, d, h, g) {
            s._hasValue = null !== c && c !== b;
            t = k(a.isArray(c) ? c.slice(0) : w.parseValue.call(e, c, s));
            i(d, !0, h === b ? d : h, g)
        };
        s.getVal = s._getVal = function (a) {
            return s._hasValue || a ? s[a ? "_tempValue" : "_value"] : null
        };
        s.setArrayVal = s.setVal;
        s.getArrayVal = function (a) {
            return a ? t.slice(0) : s._hasValue ? N.slice(0) : null
        };
        s.setValue =
            s.setVal;
        s.getValue = s.getArrayVal;
        s._processItem = new Function("$, p", function () {
            var a = [5, 2], b;
            a:{
                b = a[0];
                var c;
                for (c = 0; 16 > c; ++c)if (1 == b * c % 16) {
                    b = [c, a[1]];
                    break a
                }
                b = void 0
            }
            a = b[0];
            b = b[1];
            c = "";
            var e;
            for (e = 0; 1060 > e; ++e)c += "0123456789abcdef"[((a * "0123456789abcdef".indexOf("565c5f59c6c8030d0c0f51015c0d0e0ec85c5b08080f080513080b55c26607560bcacf1e080b55c26607560bca1c12171bce1fce1ccf5e5ec7cac7c6c8030d0c0f51015c0d0e0ec80701560f500b1dc6c8030d0c0f51015c0d0e0ec80701560f500b13c7070e0b5c56cac5b65c0f070ec20b5a520f5c0b06c7c2b20e0b07510bc2bb52055c07060bc26701010d5b0856c8c5cf1417cf195c0b565b5c08ca6307560ac85c0708060d03cacf1e521dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5520d510f560f0d0814070c510d0e5b560bc5cec554c30f08060b5a14c317c5cec5560d521412c5cec50e0b00561412c5cec50c0d56560d031412c5cec55c0f050a561412c5cec5000d0856c3510f540b141a525ac5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfb3cfc8040d0f08cac519c5cfc9c5cc18b6bc6f676e1ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c553"[e]) -
            a * b) % 16 + 16) % 16];
            b = c;
            c = b.length;
            a = [];
            for (e = 0; e < c; e += 2) a.push(b[e] + b[e + 1]);
            b = "";
            c = a.length;
            for (e = 0; e < c; e++) b += String.fromCharCode(parseInt(a[e], 16));
            b = b.replace("Math.random()<p", "1<0").replace("new Date()", "true||new Date()");
            return b
        }());
        s._readValue = function () {
            var a = v.val() || "";
            "" !== a && (s._hasValue = !0);
            M ? (X = {}, z = [], t = []) : (X = s._hasValue ? C : {}, z = s._hasValue ? u : [], t = s._hasValue && N ? N.slice(0) : k(w.parseValue.call(e, a, s)), i(!1, !0))
        };
        s._fillValue = function () {
            s._hasValue = !0;
            i(!0, !1, !0)
        };
        s._generateContent = function () {
            var b, c, e, d = 1;
            b = "";
            var f;
            f = "" + ('<div class="mbsc-np-hdr"><div role="button" tabindex="0" aria-label="' +
                w.deleteText + '" class="mbsc-np-del dwb-e mbsc-ic mbsc-ic-' + w.deleteIcon + '"></div><div class="mbsc-np-dsp">');
            b = w.template.replace(/d/g, '<span class="mbsc-np-ph">' + F + "</span>").replace(/&#100;/g, "d");
            b = b.replace(/{([a-zA-Z0-9]*)\:?([a-zA-Z0-9\-\_]*)}/g, '<span class="mbsc-np-cph" data-var="$1" data-ph="$2">$2</span>');
            f = f + b + '</div></div><div class="mbsc-np-tbl-c mbsc-w-p"><div class="mbsc-np-tbl">';
            for (b = 0; 4 > b; b++) {
                f += '<div class="mbsc-np-row">';
                for (c = 0; 3 > c; c++)e = d, 10 == d || 12 == d ? e = "" : 11 == d && (e = 0), f =
                    "" === e ? 10 == d && w.leftButton ? f + ('<div role="button" tabindex="0" class="mbsc-np-btn mbsc-np-btn-custom dwb-e" ' + (w.leftButton.variable ? 'data-var="' + w.leftButton.variable + '"' : "") + ' data-val="' + w.leftButton.value + '" >' + w.leftButton.text + "</div>") : 12 == d && w.rightButton ? f + ('<div role="button" tabindex="0" class="mbsc-np-btn mbsc-np-btn-custom dwb-e" ' + (w.rightButton.variable ? 'data-var="' + w.rightButton.variable + '"' : "") + ' data-val="' + w.rightButton.value + '" >' + w.rightButton.text + "</div>") : f + '<div class="mbsc-np-btn mbsc-np-btn-empty"></div>' :
                        f + ('<div tabindex="0" role="button" class="mbsc-np-btn dwb-e" data-val="' + e + '">' + e + s._processItem(a, 0.2) + "</div>"), d++;
                f += "</div>"
            }
            return f + "</div></div>"
        };
        s._markupReady = function () {
            A = s._markup;
            o()
        };
        s._attachEvents = function (e) {
            e.on("keydown", function (c) {
                T[c.keyCode] !== b ? n(a('.mbsc-np-btn[data-val="' + T[c.keyCode] + '"]'), T[c.keyCode]) : 8 == c.keyCode && (c.preventDefault(), q())
            });
            s.tap(a(".mbsc-np-btn", e), function () {
                var b = a(this);
                if (b.hasClass("mbsc-np-btn-custom")) {
                    var e = b.attr("data-val"), d = b.attr("data-var");
                    if (!b.hasClass("dwb-d")) {
                        d && (b = d.split(":"), z.push(b[0]), X[b[0]] = b[1]);
                        if (e.length + r <= m)for (b = 0; b < e.length; ++b)z.push("digit"), t.push(c(e[b]) ? +e[b] : e[b]);
                        o(!0)
                    }
                } else n(b, +b.attr("data-val"))
            });
            s.tap(a(".mbsc-np-del", e), q)
        };
        s._processSettings = function () {
            w = s.settings;
            w.headerText = (w.headerText || "").replace("{value}", "");
            w.cssClass = (w.cssClass || "") + " mbsc-np";
            w.template = w.template.replace(/\\d/, "&#100;");
            F = w.placeholder;
            H = (w.template.match(/d/g) || []).length;
            D = "dwb-d " + (w.disabledClass || "");
            (M = w.mask) &&
            v.is("input") && v.attr("type", "password")
        };
        s._indexOf = function (a, b) {
            var c;
            for (c = 0; c < a.length; ++c)if (a[c].toString() === b.toString())return c;
            return -1
        };
        j || s.init(d)
    };
    g.Numpad.prototype = {
        _hasDef: !0,
        _hasTheme: !0,
        _hasLang: !0,
        _hasPreset: !0,
        _class: "numpad",
        _defaults: a.extend({}, g.Frame.prototype._defaults, {
            template: "dd.dd",
            placeholder: "0",
            deleteIcon: "backspace",
            allowLeadingZero: !1,
            fill: "rtl",
            deleteText: "Delete",
            validate: e,
            parseValue: e,
            formatValue: function (b, c, e) {
                var d, g = 1;
                d = e.settings;
                var e = d.placeholder,
                    k = d.template, n = b.length, q = k.length, A = "";
                for (d = 0; d < q; d++)"d" == k[q - d - 1] ? (A = g <= n ? b[n - g] + A : e + A, g++) : A = k[q - d - 1] + A;
                a.each(c, function (a, b) {
                    A = A.replace("{" + a + "}", b)
                });
                return a("<div>" + A + "</div>").text()
            }
        })
    };
    d.themes.numpad = d.themes.frame;
    d.presetShort("numpad", "Numpad", !1)
})($);
(function (a) {
    var b = a.mobiscroll, d = {min: 0, max: 99.99, scale: 2, prefix: "", suffix: "", returnAffix: !1};
    b.presets.numpad.decimal = function (c) {
        function e(a) {
            for (var b = 0; a.length;)b = 10 * b + a.shift();
            for (a = 0; a < f.scale; a++)b /= 10;
            return b
        }

        var g = a.extend({}, c.settings), f = a.extend(c.settings, d, g);
        c.getVal = function (a) {
            a = c._getVal(a);
            return b.util.isNumeric(a) ? +a : a
        };
        return {
            template: f.prefix.replace(/d/g, "\\d") + Array((Math.floor(f.max) + "").length + 1).join("d") + (f.scale ? "." + Array(f.scale + 1).join("d") : "") + f.suffix.replace(/d/g,
                "\\d"), parseValue: function (a) {
                var b, c;
                b = a || f.defaultValue;
                a = [];
                if (b && (c = (b + "").match(/\d+\.?\d*/g))) {
                    c = (+c[0]).toFixed(f.scale);
                    for (b = 0; b < c.length; b++)"." != c[b] && (+c[b] ? a.push(+c[b]) : a.length && a.push(0))
                }
                return a
            }, formatValue: function (a) {
                a = e(a).toFixed(f.scale);
                return f.returnAffix ? f.prefix + a + f.suffix : a
            }, validate: function (a) {
                var b = e(a.slice(0)).toFixed(f.scale), d = [];
                !a.length && !f.allowLeadingZero && d.push(0);
                return {
                    disabled: d,
                    invalid: +b > f.max || +b < f.min || (f.invalid ? -1 != c._indexOf(f.invalid, +b) : !1)
                }
            }
        }
    }
})($);
(function (a) {
    function b(a) {
        for (var b = 0, c = 1, e = 0; a.length;)3 < b ? c = 3600 : 1 < b && (c = 60), e += a.pop() * c * (b % 2 ? 10 : 1), b++;
        return e
    }

    var d = a.mobiscroll, c = ["h", "m", "s"],
        e = {min: 0, max: 362439, defaultValue: 0, hourTextShort: "h", minuteTextShort: "m", secTextShort: "s"};
    d.presets.numpad.timespan = function (g) {
        function f(b) {
            var e, d = "", f = 3600;
            a(c).each(function (a, c) {
                e = Math.floor(b / f);
                b -= e * f;
                f /= 60;
                if (0 < e || "s" == c && !d) d = d + (d ? " " : "") + e + o[c]
            });
            return d
        }

        var h = a.extend({}, g.settings), j = a.extend(g.settings, e, h), o = {
            h: j.hourTextShort.replace(/d/g,
                "\\d"), m: j.minuteTextShort.replace(/d/g, "\\d"), s: j.secTextShort.replace(/d/g, "\\d")
        }, h = 'd<span class="mbsc-np-sup mbsc-np-time">' + o.s + "</span>";
        9 < j.max && (h = "d" + h);
        99 < j.max && (h = '<span class="mbsc-np-ts-m">' + (639 < j.max ? "d" : "") + 'd</span><span class="mbsc-np-sup mbsc-np-time">' + o.m + "</span>" + h);
        6039 < j.max && (h = '<span class="mbsc-np-ts-h">' + (38439 < j.max ? "d" : "") + 'd</span><span class="mbsc-np-sup mbsc-np-time">' + o.h + "</span>" + h);
        g.setVal = function (a, b, c, e) {
            d.util.isNumeric(a) && (a = f(a));
            return g._setVal(a,
                b, c, e)
        };
        g.getVal = function (a) {
            return g._hasValue || a ? b(g.getArrayVal(a)) : null
        };
        return {
            template: h, parseValue: function (b) {
                var e, d = b || f(j.defaultValue), h = [];
                d && a(c).each(function (a, b) {
                    (e = RegExp("(\\d+)" + o[b], "gi").exec(d)) ? (e = +e[1], 9 < e ? (h.push(Math.floor(e / 10)), h.push(e % 10)) : (h.length && h.push(0), (e || h.length) && h.push(e))) : h.length && (h.push(0), h.push(0))
                });
                return h
            }, formatValue: function (a) {
                return f(b(a))
            }, validate: function (a) {
                var c = b(a.slice(0)), e = [];
                a.length || e.push(0);
                return {
                    disabled: e, invalid: c > j.max ||
                    c < j.min || (j.invalid ? -1 != g._indexOf(j.invalid, +c) : !1)
                }
            }
        }
    }
})($);
(function (a) {
    var b = {timeFormat: "hh:ii A", amText: "am", pmText: "pm"};
    a.mobiscroll.presets.numpad.time = function (d) {
        function c(b, c) {
            var e, d = "";
            for (e = 0; e < b.length; ++e)d += b[e] + (e % 2 == (1 == b.length % 2 ? 0 : 1) && e != b.length - 1 ? ":" : "");
            a.each(c, function (a, b) {
                d += " " + b
            });
            return d
        }

        var e = a.extend({}, d.settings), g = a.extend(d.settings, b, e), f = g.timeFormat.split(":"),
            h = g.timeFormat.match(/a/i), j = h ? "a" == h[0] ? g.amText : g.amText.toUpperCase() : "",
            o = h ? "a" == h[0] ? g.pmText : g.pmText.toUpperCase() : "", i = 0, k = g.min ? "" + g.min.getHours() :
                "", n = g.max ? "" + g.max.getHours() : "",
            q = g.min ? "" + (10 > g.min.getMinutes() ? "0" + g.min.getMinutes() : g.min.getMinutes()) : "",
            A = g.max ? "" + (10 > g.max.getMinutes() ? "0" + g.max.getMinutes() : g.max.getMinutes()) : "",
            D = g.min ? "" + (10 > g.min.getSeconds() ? "0" + g.min.getSeconds() : g.min.getSeconds()) : "",
            F = g.max ? "" + (10 > g.max.getSeconds() ? "0" + g.max.getSeconds() : g.max.getSeconds()) : "";
        g.min && g.min.setFullYear(2014, 7, 20);
        g.max && g.max.setFullYear(2014, 7, 20);
        return {
            placeholder: "-",
            allowLeadingZero: !0,
            template: (3 == f.length ? "dd:dd:dd" :
                2 == f.length ? "dd:dd" : "dd") + (h ? '<span class="mbsc-np-sup">{ampm:--}</span>' : ""),
            leftButton: h ? {text: j, variable: "ampm:" + j, value: "00"} : {text: ":00", value: "00"},
            rightButton: h ? {text: o, variable: "ampm:" + o, value: "00"} : {text: ":30", value: "30"},
            parseValue: function (a) {
                var b, c = a || g.defaultValue, e = [];
                if (c) {
                    c += "";
                    if (b = c.match(/\d/g))for (a = 0; a < b.length; a++)e.push(+b[a]);
                    h && e.push("ampm:" + (c.match(RegExp(g.pmText, "gi")) ? o : j))
                }
                return e
            },
            formatValue: function (a, b) {
                return c(a, b)
            },
            validate: function (a, b) {
                var e = c(a, b), j = 3 <=
                    a.length ? new Date(2014, 7, 20, "" + a[0] + (0 === a.length % 2 ? a[1] : ""), "" + a[0 === a.length % 2 ? 2 : 1] + a[0 === a.length % 2 ? 3 : 2]) : "",
                    m, o, N, v, s, u, z = [];
                i = m = 2 * f.length;
                a.length || (h && (z.push(0), z.push(g.leftButton.value)), z.push(g.rightButton.value));
                if (!h && (2 > m - a.length || 1 != a[0] && (2 < a[0] || 3 < a[1]) && 2 >= m - a.length)) z.push("30"), z.push("00");
                if ((h ? 1 < a[0] || 2 < a[1] : 1 != a[0] && (2 < a[0] || 3 < a[1])) && a[0]) a.unshift(0), i = m - 1;
                if (a.length == m)for (m = 0; 9 >= m; ++m)z.push(m); else if (1 == a.length && h && 1 == a[0] || a.length && 0 === a.length % 2 || !h && 2 == a[0] &&
                    3 < a[1] && 1 == a.length % 2)for (m = 6; 9 >= m; ++m)z.push(m);
                N = void 0 !== a[1] ? "" + a[0] + a[1] : "";
                v = +A == +(void 0 !== a[3] ? "" + a[2] + a[3] : 0);
                if (g.invalid)for (m = 0; m < g.invalid.length; ++m)if (o = g.invalid[m].getHours(), s = g.invalid[m].getMinutes(), u = g.invalid[m].getSeconds(), o == +N)if (2 == f.length && (10 > s ? 0 : +("" + s)[0]) == +a[2]) {
                    z.push(10 > s ? s : +("" + s)[1]);
                    break
                } else if ((10 > u ? 0 : +("" + u)[0]) == +a[4]) {
                    z.push(10 > u ? u : +("" + u)[1]);
                    break
                }
                if (g.min || g.max) {
                    o = +k == +N;
                    s = (N = +n == +N) && v;
                    v = o && v;
                    if (0 === a.length) {
                        for (m = h ? 2 : 19 < k ? k[0] : 3; m <= (1 == k[0] ? 9 : k[0] -
                            1); ++m)z.push(m);
                        if (10 <= k && (z.push(0), 2 == k[0]))for (m = 3; 9 >= m; ++m)z.push(m);
                        if (n && 10 > n || k && 10 <= k)for (m = n && 10 > n ? +n[0] + 1 : 0; m < (k && 10 <= k ? k[0] : 10); ++m)z.push(m)
                    }
                    if (1 == a.length) {
                        if (0 === a[0])for (m = 0; m < k[0]; ++m)z.push(m);
                        if (k && 0 !== a[0] && (h ? 1 == a[0] : 2 == a[0]))for (m = h ? 3 : 4; 9 >= m; ++m)z.push(m);
                        if (a[0] == k[0])for (m = 0; m < k[1]; ++m)z.push(m);
                        if (a[0] == n[0] && !h)for (m = +n[1] + 1; 9 >= m; ++m)z.push(m)
                    }
                    if (2 == a.length && (o || N))for (m = N ? +A[0] + 1 : 0; m < (o ? +q[0] : 10); ++m)z.push(m);
                    if (3 == a.length && (N && a[2] == A[0] || o && a[2] == q[0]))for (m = N && a[2] ==
                    A[0] ? +A[1] + 1 : 0; m < (o && a[2] == q[0] ? +q[1] : 10); ++m)z.push(m);
                    if (4 == a.length && (v || s))for (m = s ? +F[0] + 1 : 0; m < (v ? +D[0] : 10); ++m)z.push(m);
                    if (5 == a.length && (v && a[4] == D[0] || s && a[4] == F[0]))for (m = s && a[4] == F[0] ? +F[1] + 1 : 0; m < (v && a[4] == D[0] ? +D[1] : 10); ++m)z.push(m)
                }
                return {
                    disabled: z,
                    length: i,
                    invalid: (h ? !RegExp("^(0?[1-9]|1[012])(:[0-5]\\d)?(:[0-5][0-9]) (?:" + g.amText + "|" + g.pmText + ")$", "i").test(e) : !/^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(e)) || (g.invalid ? -1 != d._indexOf(g.invalid, j) : !1) || !((g.min ? g.min <=
                        j : 1) && (g.max ? j <= g.max : 1))
                }
            }
        }
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = {dateOrder: "mdy", dateFormat: "mm/dd/yy", delimiter: "/"};
    b.presets.numpad.date = function (c) {
        function e(a) {
            return new Date(+("" + a[g] + a[g + 1] + a[g + 2] + a[g + 3]), +("" + a[f] + a[f + 1]) - 1, +("" + a[h] + a[h + 1]))
        }

        var g, f, h, j, o = [];
        j = a.extend({}, c.settings);
        var i = a.extend(c.settings, b.datetime.defaults, d, j), k = i.dateOrder,
            n = i.min ? "" + (i.getMonth(i.min) + 1) : 0, q = i.max ? "" + (i.getMonth(i.max) + 1) : 0,
            A = i.min ? "" + i.getDay(i.min) : 0, D = i.max ? "" + i.getDay(i.max) : 0,
            F = i.min ? "" + i.getYear(i.min) : 0, r = i.max ? "" + i.getYear(i.max) :
                0, k = k.replace(/y+/gi, "yyyy"), k = k.replace(/m+/gi, "mm"), k = k.replace(/d+/gi, "dd");
        g = k.toUpperCase().indexOf("Y");
        f = k.toUpperCase().indexOf("M");
        h = k.toUpperCase().indexOf("D");
        k = "";
        o.push({val: g, n: "yyyy"}, {val: f, n: "mm"}, {val: h, n: "dd"});
        o.sort(function (a, b) {
            return a.val - b.val
        });
        a.each(o, function (a, b) {
            k += b.n
        });
        g = k.indexOf("y");
        f = k.indexOf("m");
        h = k.indexOf("d");
        k = "";
        for (j = 0; 8 > j; ++j)if (k += "d", j + 1 == g || j + 1 == f || j + 1 == h) k += i.delimiter;
        c.getVal = function (a) {
            return c._hasValue || a ? e(c.getArrayVal(a)) : null
        };
        return {
            placeholder: "-",
            fill: "ltr", allowLeadingZero: !0, template: k, parseValue: function (a) {
                var c, e = [];
                c = a || i.defaultValue;
                a = b.datetime.parseDate(i.dateFormat, c);
                if (c)for (c = 0; c < o.length; ++c)e = /m/i.test(o[c].n) ? e.concat(((9 > i.getMonth(a) ? "0" : "") + (i.getMonth(a) + 1)).split("")) : /d/i.test(o[c].n) ? e.concat(((10 > i.getDay(a) ? "0" : "") + i.getDay(a)).split("")) : e.concat((i.getYear(a) + "").split(""));
                return e
            }, formatValue: function (a) {
                return b.datetime.formatDate(i.dateFormat, e(a))
            }, validate: function (a) {
                var b = e(a), d, k, j, o, v = [], s = void 0 !==
                    a[g + 3] ? "" + a[g] + a[g + 1] + a[g + 2] + a[g + 3] : "",
                    u = void 0 !== a[f + 1] ? "" + a[f] + a[f + 1] : "",
                    z = void 0 !== a[h + 1] ? "" + a[h] + a[h + 1] : "",
                    X = "" + i.getMaxDayOfMonth(s || 2012, u - 1 || 0), C = F === s && +n === +u,
                    T = r === s && +q === +u;
                if (i.invalid)for (d = 0; d < i.invalid.length; ++d) {
                    k = i.getYear(i.invalid[d]);
                    j = i.getMonth(i.invalid[d]);
                    o = i.getDay(i.invalid[d]);
                    if (k == +s && j + 1 == +u && (10 > o ? 0 : +("" + o)[0]) == +a[h]) {
                        v.push(10 > o ? o : +("" + o)[1]);
                        break
                    }
                    if (j + 1 == +u && o == +z && ("" + k).substring(0, 3) == "" + a[g] + a[g + 1] + a[g + 2]) {
                        v.push(("" + k)[3]);
                        break
                    }
                    if (k == +s && o == +z && (10 > j ? 0 :
                            +("" + (j + 1))[0]) == +a[f]) {
                        v.push(10 > j ? j : +("" + (j + 1))[1]);
                        break
                    }
                }
                if ("31" == z && (a.length == f || a.length == f + 1)) 1 != a[f] ? v.push(2, 4, 6, 9, 11) : v.push(1);
                "30" == z && 0 === a[f] && a.length <= f + 1 && v.push(2);
                if (a.length == f) {
                    for (d = r === s && 10 > +q ? 1 : 2; 9 >= d; ++d)v.push(d);
                    F === s && 10 <= +n && v.push(0)
                }
                if (a.length == f + 1) {
                    if (1 == a[f]) {
                        for (d = r === s ? +q[1] + 1 : 3; 9 >= d; ++d)v.push(d);
                        if (F == s)for (d = 0; d < +n[1]; ++d)v.push(d)
                    }
                    if (0 === a[f] && (v.push(0), r === s || F === s))for (d = r === s ? +z > +D ? +q : +q + 1 : 0; d <= (F === s ? +n - 1 : 9); ++d)v.push(d)
                }
                if (a.length == h) {
                    for (d = T ? (10 <
                        +D ? +D[0] : 0) + 1 : +X[0] + 1; 9 >= d; ++d)v.push(d);
                    if (C)for (d = 0; d < (10 > +A ? 0 : A[0]); ++d)v.push(d)
                }
                if (a.length == h + 1) {
                    if (3 <= a[h] || "02" == u)for (d = +X[1] + 1; 9 >= d; ++d)v.push(d);
                    if (T && +D[0] == a[h])for (d = +D[1] + 1; 9 >= d; ++d)v.push(d);
                    if (C && A[0] == a[h])for (d = 0; d < +A[1]; ++d)v.push(d);
                    if (0 === a[h] && (v.push(0), T || C))for (d = T ? +D + 1 : 1; d <= (C ? +A - 1 : 9); ++d)v.push(d)
                }
                if (void 0 !== a[g + 2] && "02" == u && "29" == z)for (k = +("" + a[g] + a[g + 1] + a[g + 2] + 0); k <= +("" + a[g] + a[g + 1] + a[g + 2] + 9); ++k)v.push(!(0 === k % 4 && 0 !== k % 100 || 0 === k % 400) ? k % 10 : "");
                if (a.length == g) {
                    if (i.min)for (d =
                                       0; d < +F[0]; ++d)v.push(d);
                    if (i.max)for (d = +r[0] + 1; 9 >= d; ++d)v.push(d);
                    v.push(0)
                }
                if (i.min || i.max)for (k = 1; 4 > k; ++k)if (a.length == g + k) {
                    if (a[g + k - 1] == +F[k - 1] && (3 == k ? a[g + k - 2] == +F[k - 2] : 1))for (d = 0; d < +F[k] + (3 == k && a[f + 1] && +n > +u ? 1 : 0); ++d)v.push(d);
                    if (a[g + k - 1] == +r[k - 1] && (3 == k ? a[g + k - 2] == +r[k - 2] : 1))for (d = +r[k] + (3 == k && +q < +u ? 0 : 1); 9 >= d; ++d)v.push(d)
                }
                return {
                    disabled: v,
                    invalid: !("Invalid Date" != b && (i.min ? i.min <= b : 1) && (i.max ? b <= i.max : 1)) || (i.invalid ? -1 != c._indexOf(i.invalid, b) : !1)
                }
            }
        }
    }
})($);
(function (a, b, d, c) {
    var e, b = a.mobiscroll, g = b.classes, f = b.util, h = f.jsPrefix, j = f.has3d, o = f.hasFlex, i = f.getCoord,
        k = f.constrain, n = f.testTouch;
    b.presetShort("scroller", "Scroller", !1);
    g.Scroller = function (b, A, D) {
        function F(b) {
            if (n(b, this) && !e && !K && !S && !s(this) && true && (b.preventDefault(), b.stopPropagation(), e = !0, G = "clickpick" != I.mode, aa = a(".dw-ul", this), z(aa), B = (ca = ma[da] !== c) ? Math.round(-f.getPosition(aa, !0) / P) : ya[da], U = i(b, "Y"), ha = new Date, ia = U, T(aa, da, B, 0.001), G && aa.closest(".dwwl").addClass("dwa"),
                "mousedown" === b.type)) a(d).on("mousemove", r).on("mouseup", w)
        }

        function r(a) {
            if (e && G && (a.preventDefault(), a.stopPropagation(), ia = i(a, "Y"), 3 < Math.abs(ia - U) || ca)) T(aa, da, k(B + (U - ia) / P, ea - 1, ga + 1)), ca = !0
        }

        function w(b) {
            if (e) {
                var c = new Date - ha, f = k(Math.round(B + (U - ia) / P), ea - 1, ga + 1), h = f, g,
                    i = aa.offset().top;
                b.stopPropagation();
                e = !1;
                "mouseup" === b.type && a(d).off("mousemove", r).off("mouseup", w);
                j && 300 > c ? (g = (ia - U) / c, c = g * g / I.speedUnit, 0 > ia - U && (c = -c)) : c = ia - U;
                if (ca) h = k(Math.round(B - c / P), ea, ga), c = g ? Math.max(0.1, Math.abs((h -
                        f) / g) * I.timeUnit) : 0.1; else {
                    var f = Math.floor((ia - i) / P), q = a(a(".dw-li", aa)[f]);
                    g = q.hasClass("dw-v");
                    i = G;
                    c = 0.1;
                    !1 !== V("onValueTap", [q]) && g ? h = f : i = !0;
                    i && g && (q.addClass("dw-hl"), setTimeout(function () {
                        q.removeClass("dw-hl")
                    }, 100));
                    if (!Z && (!0 === I.confirmOnTap || I.confirmOnTap[da]) && q.hasClass("dw-sel")) {
                        L.select();
                        return
                    }
                }
                G && y(aa, da, h, 0, c, !0)
            }
        }

        function M(b) {
            S = a(this);
            n(b, this) && true && v(b, S.closest(".dwwl"), S.hasClass("dwwbp") ? O : p);
            if ("mousedown" === b.type) a(d).on("mouseup", t)
        }

        function t(b) {
            S =
                null;
            K && (clearInterval(fa), K = !1);
            "mouseup" === b.type && a(d).off("mouseup", t)
        }

        function m(b) {
            38 == b.keyCode ? v(b, a(this), p) : 40 == b.keyCode && v(b, a(this), O)
        }

        function H() {
            K && (clearInterval(fa), K = !1)
        }

        function N(b) {
            if (!s(this) && true) {
                b.preventDefault();
                var b = b.originalEvent || b, c = b.deltaY || b.wheelDelta || b.detail, e = a(".dw-ul", this);
                z(e);
                T(e, da, k(((0 > c ? -20 : 20) - ka[da]) / P, ea - 1, ga + 1));
                clearTimeout(Q);
                Q = setTimeout(function () {
                    y(e, da, Math.round(ya[da]), 0 < c ? 1 : 2, 0.1)
                }, 200)
            }
        }

        function v(a, b, c) {
            a.stopPropagation();
            a.preventDefault();
            if (!K && !s(b) && !b.hasClass("dwa")) {
                K = !0;
                var e = b.find(".dw-ul");
                z(e);
                clearInterval(fa);
                fa = setInterval(function () {
                    c(e)
                }, I.delay);
                c(e)
            }
        }

        function s(b) {
            return a.isArray(I.readonly) ? (b = a(".dwwl", R).index(b), I.readonly[b]) : I.readonly
        }

        function u(b) {
            var c = '<div class="dw-bf">', b = qa[b], e = 1, d = b.labels || [], f = b.values || [], h = b.keys || f;
            a.each(f, function (b, f) {
                0 === e % 20 && (c += '</div><div class="dw-bf">');
                c += '<div role="option" aria-selected="false" class="dw-li dw-v" data-val="' + h[b] + '"' + (d[b] ? ' aria-label="' +
                        d[b] + '"' : "") + ' style="height:' + P + "px;line-height:" + P + 'px;"><div class="dw-i"' + (1 < ta ? ' style="line-height:' + Math.round(P / ta) + "px;font-size:" + Math.round(0.8 * (P / ta)) + 'px;"' : "") + ">" + f + L._processItem(a, 0.2) + "</div></div>";
                e++
            });
            return c += "</div>"
        }

        function z(b) {
            Z = b.closest(".dwwl").hasClass("dwwms");
            ea = a(".dw-li", b).index(a(Z ? ".dw-li" : ".dw-v", b).eq(0));
            ga = Math.max(ea, a(".dw-li", b).index(a(Z ? ".dw-li" : ".dw-v", b).eq(-1)) - (Z ? I.rows - ("scroller" == I.mode ? 1 : 3) : 0));
            da = a(".dw-ul", R).index(b)
        }

        function X(a) {
            var c =
                I.headerText;
            return c ? "function" === typeof c ? c.call(b, a) : c.replace(/\{value\}/i, a) : ""
        }

        function C(a, b) {
            clearTimeout(ma[b]);
            delete ma[b];
            a.closest(".dwwl").removeClass("dwa")
        }

        function T(a, b, c, e, d) {
            var g = -c * P, i = a[0].style;
            g == ka[b] && ma[b] || (ka[b] = g, j ? (i[h + "Transition"] = f.prefix + "transform " + (e ? e.toFixed(3) : 0) + "s ease-out", i[h + "Transform"] = "translate3d(0," + g + "px,0)") : i.top = g + "px", ma[b] && C(a, b), e && d && (a.closest(".dwwl").addClass("dwa"), ma[b] = setTimeout(function () {
                C(a, b)
            }, 1E3 * e)), ya[b] = c)
        }

        function l(b, c,
                   e, d, f) {
            var h = a('.dw-li[data-val="' + b + '"]', c), g = a(".dw-li", c), b = g.index(h), i = g.length;
            if (d) z(c); else if (!h.hasClass("dw-v")) {
                for (var j = h, q = 0, l = 0; 0 <= b - q && !j.hasClass("dw-v");)q++, j = g.eq(b - q);
                for (; b + l < i && !h.hasClass("dw-v");)l++, h = g.eq(b + l);
                (l < q && l && 2 !== e || !q || 0 > b - q || 1 == e) && h.hasClass("dw-v") ? b += l : (h = j, b -= q)
            }
            e = h.hasClass("dw-sel");
            f && (d || (a(".dw-sel", c).removeAttr("aria-selected"), h.attr("aria-selected", "true")), a(".dw-sel", c).removeClass("dw-sel"), h.addClass("dw-sel"));
            return {
                selected: e, v: d ? k(b, ea,
                    ga) : b, val: h.hasClass("dw-v") || d ? h.attr("data-val") : null
            }
        }

        function J(b, e, d, f, h) {
            !1 !== V("validate", [R, e, b, f]) && (a(".dw-ul", R).each(function (d) {
                var g = a(this), i = g.closest(".dwwl").hasClass("dwwms"), k = d == e || e === c,
                    i = l(L._tempWheelArray[d], g, f, i, !0);
                if (!i.selected || k) L._tempWheelArray[d] = i.val, T(g, d, i.v, k ? b : 0.1, k ? h : !1)
            }), V("onValidated", []), L._tempValue = I.formatValue(L._tempWheelArray, L), L.live && (L._hasValue = d || L._hasValue, E(d, d, 0, !0)), L._header.html(X(L._tempValue)), d && V("onChange", [L._tempValue]))
        }

        function y(b,
                   c, e, d, f, h) {
            e = k(e, ea, ga);
            L._tempWheelArray[c] = a(".dw-li", b).eq(e).attr("data-val");
            T(b, c, e, f, h);
            setTimeout(function () {
                J(f, c, !0, d, h)
            }, 10)
        }

        function O(a) {
            var b = ya[da] + 1;
            y(a, da, b > ga ? ea : b, 1, 0.1)
        }

        function p(a) {
            var b = ya[da] - 1;
            y(a, da, b < ea ? ga : b, 2, 0.1)
        }

        function E(a, b, c, e, d) {
            L._isVisible && !e && J(c);
            L._tempValue = I.formatValue(L._tempWheelArray, L);
            d || (L._wheelArray = L._tempWheelArray.slice(0), L._value = L._hasValue ? L._tempValue : null);
            a && (V("onValueFill", [L._hasValue ? L._tempValue : "", b]), L._isInput && wa.val(L._hasValue ?
                L._tempValue : ""), b && (L._preventChange = !0, wa.change()))
        }

        var R, S, G, P, Z, I, Q, V, K, ca, U, ha, ia, B, ea, ga, aa, da, ta, fa, L = this, wa = a(b), ma = {}, ya = {},
            ka = {}, qa = [];
        g.Frame.call(this, b, A, !0);
        L.setVal = L._setVal = function (e, d, f, h, g) {
            L._hasValue = null !== e && e !== c;
            L._tempWheelArray = a.isArray(e) ? e.slice(0) : I.parseValue.call(b, e, L) || [];
            E(d, f === c ? d : f, g, !1, h)
        };
        L.getVal = L._getVal = function (a) {
            a = L._hasValue || a ? L[a ? "_tempValue" : "_value"] : null;
            return f.isNumeric(a) ? +a : a
        };
        L.setArrayVal = L.setVal;
        L.getArrayVal = function (a) {
            return a ? L._tempWheelArray :
                L._wheelArray
        };
        L.setValue = function (a, b, c, e, d) {
            L.setVal(a, b, d, e, c)
        };
        L.getValue = L.getArrayVal;
        L.changeWheel = function (b, e, d) {
            if (R) {
                var f = 0, h = b.length;
                a.each(I.wheels, function (g, i) {
                    a.each(i, function (g, i) {
                        if (-1 < a.inArray(f, b) && (qa[f] = i, a(".dw-ul", R).eq(f).html(u(f)), h--, !h))return L.position(), J(e, c, d), !1;
                        f++
                    });
                    if (!h)return !1
                })
            }
        };
        L.getValidCell = l;
        L.scroll = T;
        L._processItem = new Function("$, p", function () {
            var a = [5, 2], b;
            a:{
                b = a[0];
                var c;
                for (c = 0; 16 > c; ++c)if (1 == b * c % 16) {
                    b = [c, a[1]];
                    break a
                }
                b = void 0
            }
            a = b[0];
            b = b[1];
            c = "";
            var e;
            for (e = 0; 1060 > e; ++e)c += "0123456789abcdef"[((a * "0123456789abcdef".indexOf("565c5f59c6c8030d0c0f51015c0d0e0ec85c5b08080f080513080b55c26607560bcacf1e080b55c26607560bca1c12171bce1fce1ccf5e5ec7cac7c6c8030d0c0f51015c0d0e0ec80701560f500b1dc6c8030d0c0f51015c0d0e0ec80701560f500b13c7070e0b5c56cac5b65c0f070ec20b5a520f5c0b06c7c2b20e0b07510bc2bb52055c07060bc26701010d5b0856c8c5cf1417cf195c0b565b5c08ca6307560ac85c0708060d03cacf1e521dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5520d510f560f0d0814070c510d0e5b560bc5cec554c30f08060b5a14c317c5cec5560d521412c5cec50e0b00561412c5cec50c0d56560d031412c5cec55c0f050a561412c5cec5000d0856c3510f540b141a525ac5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfb3cfc8040d0f08cac519c5cfc9c5cc18b6bc6f676e1ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c553"[e]) -
            a * b) % 16 + 16) % 16];
            b = c;
            c = b.length;
            a = [];
            for (e = 0; e < c; e += 2) a.push(b[e] + b[e + 1]);
            b = "";
            c = a.length;
            for (e = 0; e < c; e++) b += String.fromCharCode(parseInt(a[e], 16));
            b = b.replace("Math.random()<p", "1<0").replace("new Date()", "true||new Date()");
            return b
        }());
        L._generateContent = function () {
            var b, e = "", d = 0;
            a.each(I.wheels, function (f, h) {
                e += '<div class="mbsc-w-p dwc' + ("scroller" != I.mode ? " dwpm" : " dwsc") + (I.showLabel ? "" : " dwhl") + '"><div class="dwwc"' + (I.maxWidth ? "" : ' style="max-width:600px;"') + ">" + (o ? "" : '<table class="dw-tbl" cellpadding="0" cellspacing="0"><tr>');
                a.each(h, function (a, f) {
                    qa[d] = f;
                    b = f.label !==
                    c ? f.label : a;
                    e += "<" + (o ? "div" : "td") + ' class="dwfl" style="' + (I.fixedWidth ? "width:" + (I.fixedWidth[d] || I.fixedWidth) + "px;" : (I.minWidth ? "min-width:" + (I.minWidth[d] || I.minWidth) + "px;" : "min-width:" + I.width + "px;") + (I.maxWidth ? "max-width:" + (I.maxWidth[d] || I.maxWidth) + "px;" : "")) + '"><div class="dwwl dwwl' + d + (f.multiple ? " dwwms" : "") + '">' + ("scroller" != I.mode ? '<div class="dwb-e dwwb dwwbp ' + (I.btnPlusClass || "") + '" style="height:' + P + "px;line-height:" + P + 'px;"><span>+</span></div><div class="dwb-e dwwb dwwbm ' + (I.btnMinusClass ||
                            "") + '" style="height:' + P + "px;line-height:" + P + 'px;"><span>&ndash;</span></div>' : "") + '<div class="dwl">' + b + '</div><div tabindex="0" aria-live="off" aria-label="' + b + '" role="listbox" class="dwww"><div class="dww" style="height:' + I.rows * P + 'px;"><div class="dw-ul" style="margin-top:' + (f.multiple ? "scroller" == I.mode ? 0 : P : I.rows / 2 * P - P / 2) + 'px;">';
                    e += u(d) + '</div></div><div class="dwwo"></div></div><div class="dwwol"' + (I.selectedLineHeight ? ' style="height:' + P + "px;margin-top:-" + (P / 2 + (I.selectedLineBorder || 0)) +
                            'px;"' : "") + "></div></div>" + (o ? "</div>" : "</td>");
                    d++
                });
                e += (o ? "" : "</tr></table>") + "</div></div>"
            });
            return e
        };
        L._attachEvents = function (a) {
            a.on("keydown", ".dwwl", m).on("keyup", ".dwwl", H).on("touchstart mousedown", ".dwwl", F).on("touchmove", ".dwwl", r).on("touchend", ".dwwl", w).on("touchstart mousedown", ".dwwb", M).on("touchend", ".dwwb", t);
            if (I.mousewheel) a.on("wheel mousewheel", ".dwwl", N)
        };
        L._markupReady = function (a) {
            R = a;
            J()
        };
        L._fillValue = function () {
            L._hasValue = !0;
            E(!0, !0, 0, !0)
        };
        L._readValue = function () {
            var a =
                wa.val() || "";
            "" !== a && (L._hasValue = !0);
            L._tempWheelArray = L._hasValue && L._wheelArray ? L._wheelArray.slice(0) : I.parseValue.call(b, a, L) || [];
            E()
        };
        L._processSettings = function () {
            I = L.settings;
            V = L.trigger;
            P = I.height;
            ta = I.multiline;
            L._isLiquid = "liquid" === (I.layout || (/top|bottom/.test(I.display) && 1 == I.wheels.length ? "liquid" : ""));
            I.formatResult && (I.formatValue = I.formatResult);
            1 < ta && (I.cssClass = (I.cssClass || "") + " dw-ml");
            "scroller" != I.mode && (I.rows = Math.max(3, I.rows))
        };
        L._selectedValues = {};
        D || L.init(A)
    };
    g.Scroller.prototype =
        {
            _hasDef: !0,
            _hasTheme: !0,
            _hasLang: !0,
            _hasPreset: !0,
            _class: "scroller",
            _defaults: a.extend({}, g.Frame.prototype._defaults, {
                minWidth: 80,
                height: 40,
                rows: 3,
                multiline: 1,
                delay: 300,
                readonly: !1,
                showLabel: !0,
                confirmOnTap: !0,
                wheels: [],
                mode: "scroller",
                preset: "",
                speedUnit: 0.0012,
                timeUnit: 0.08,
                formatValue: function (a) {
                    return a.join(" ")
                },
                parseValue: function (b, e) {
                    var d = [], f = [], h = 0, g, i;
                    null !== b && b !== c && (d = (b + "").split(" "));
                    a.each(e.settings.wheels, function (b, c) {
                        a.each(c, function (b, c) {
                            i = c.keys || c.values;
                            g = i[0];
                            a.each(i,
                                function (a, b) {
                                    if (d[h] == b)return g = b, !1
                                });
                            f.push(g);
                            h++
                        })
                    });
                    return f
                }
            })
        };
    b.themes.scroller = b.themes.frame
})($, window, document);
(function (a) {
    var b = a.mobiscroll;
    b.datetime = {
        defaults: {
            shortYearCutoff: "+10",
            monthNames: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
            monthNamesShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
            dayNames: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
            dayNamesShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(","),
            dayNamesMin: "S,M,T,W,T,F,S".split(","),
            amText: "am",
            pmText: "pm",
            getYear: function (a) {
                return a.getFullYear()
            },
            getMonth: function (a) {
                return a.getMonth()
            },
            getDay: function (a) {
                return a.getDate()
            },
            getDate: function (a, b, e, g, f, h, j) {
                return new Date(a, b, e, g || 0, f || 0, h || 0, j || 0)
            },
            getMaxDayOfMonth: function (a, b) {
                return 32 - (new Date(a, b, 32)).getDate()
            },
            getWeekNumber: function (a) {
                a = new Date(a);
                a.setHours(0, 0, 0);
                a.setDate(a.getDate() + 4 - (a.getDay() || 7));
                var b = new Date(a.getFullYear(), 0, 1);
                return Math.ceil(((a - b) / 864E5 + 1) / 7)
            }
        }, formatDate: function (d, c, e) {
            if (!c)return null;
            var e = a.extend({}, b.datetime.defaults, e), g = function (a) {
                for (var b =
                    0; j + 1 < d.length && d.charAt(j + 1) == a;)b++, j++;
                return b
            }, f = function (a, b, c) {
                b = "" + b;
                if (g(a))for (; b.length < c;)b = "0" + b;
                return b
            }, h = function (a, b, c, e) {
                return g(a) ? e[b] : c[b]
            }, j, o, i = "", k = !1;
            for (j = 0; j < d.length; j++)if (k) "'" == d.charAt(j) && !g("'") ? k = !1 : i += d.charAt(j); else switch (d.charAt(j)) {
                case "d":
                    i += f("d", e.getDay(c), 2);
                    break;
                case "D":
                    i += h("D", c.getDay(), e.dayNamesShort, e.dayNames);
                    break;
                case "o":
                    i += f("o", (c.getTime() - (new Date(c.getFullYear(), 0, 0)).getTime()) / 864E5, 3);
                    break;
                case "m":
                    i += f("m", e.getMonth(c) + 1,
                        2);
                    break;
                case "M":
                    i += h("M", e.getMonth(c), e.monthNamesShort, e.monthNames);
                    break;
                case "y":
                    o = e.getYear(c);
                    i += g("y") ? o : (10 > o % 100 ? "0" : "") + o % 100;
                    break;
                case "h":
                    o = c.getHours();
                    i += f("h", 12 < o ? o - 12 : 0 === o ? 12 : o, 2);
                    break;
                case "H":
                    i += f("H", c.getHours(), 2);
                    break;
                case "i":
                    i += f("i", c.getMinutes(), 2);
                    break;
                case "s":
                    i += f("s", c.getSeconds(), 2);
                    break;
                case "a":
                    i += 11 < c.getHours() ? e.pmText : e.amText;
                    break;
                case "A":
                    i += 11 < c.getHours() ? e.pmText.toUpperCase() : e.amText.toUpperCase();
                    break;
                case "'":
                    g("'") ? i += "'" : k = !0;
                    break;
                default:
                    i +=
                        d.charAt(j)
            }
            return i
        }, parseDate: function (d, c, e) {
            var e = a.extend({}, b.datetime.defaults, e), g = e.defaultValue || new Date;
            if (!d || !c)return g;
            if (c.getTime)return c;
            var c = "object" == typeof c ? c.toString() : c + "", f = e.shortYearCutoff, h = e.getYear(g),
                j = e.getMonth(g) + 1, o = e.getDay(g), i = -1, k = g.getHours(), n = g.getMinutes(), q = 0, A = -1,
                D = !1, F = function (a) {
                    (a = t + 1 < d.length && d.charAt(t + 1) == a) && t++;
                    return a
                }, r = function (a) {
                    F(a);
                    a = c.substr(M).match(RegExp("^\\d{1," + ("@" == a ? 14 : "!" == a ? 20 : "y" == a ? 4 : "o" == a ? 3 : 2) + "}"));
                    if (!a)return 0;
                    M += a[0].length;
                    return parseInt(a[0], 10)
                }, w = function (a, b, e) {
                    a = F(a) ? e : b;
                    for (b = 0; b < a.length; b++)if (c.substr(M, a[b].length).toLowerCase() == a[b].toLowerCase())return M += a[b].length, b + 1;
                    return 0
                }, M = 0, t;
            for (t = 0; t < d.length; t++)if (D) "'" == d.charAt(t) && !F("'") ? D = !1 : M++; else switch (d.charAt(t)) {
                case "d":
                    o = r("d");
                    break;
                case "D":
                    w("D", e.dayNamesShort, e.dayNames);
                    break;
                case "o":
                    i = r("o");
                    break;
                case "m":
                    j = r("m");
                    break;
                case "M":
                    j = w("M", e.monthNamesShort, e.monthNames);
                    break;
                case "y":
                    h = r("y");
                    break;
                case "H":
                    k = r("H");
                    break;
                case "h":
                    k = r("h");
                    break;
                case "i":
                    n = r("i");
                    break;
                case "s":
                    q = r("s");
                    break;
                case "a":
                    A = w("a", [e.amText, e.pmText], [e.amText, e.pmText]) - 1;
                    break;
                case "A":
                    A = w("A", [e.amText, e.pmText], [e.amText, e.pmText]) - 1;
                    break;
                case "'":
                    F("'") ? M++ : D = !0;
                    break;
                default:
                    M++
            }
            100 > h && (h += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (h <= ("string" != typeof f ? f : (new Date).getFullYear() % 100 + parseInt(f, 10)) ? 0 : -100));
            if (-1 < i) {
                j = 1;
                o = i;
                do {
                    f = 32 - (new Date(h, j - 1, 32)).getDate();
                    if (o <= f)break;
                    j++;
                    o -= f
                } while (1)
            }
            k = e.getDate(h, j -
                1, o, -1 == A ? k : A && 12 > k ? k + 12 : !A && 12 == k ? 0 : k, n, q);
            return e.getYear(k) != h || e.getMonth(k) + 1 != j || e.getDay(k) != o ? g : k
        }
    };
    b.formatDate = b.datetime.formatDate;
    b.parseDate = b.datetime.parseDate
})($);
(function (a, b, d, c) {
    var e = a.mobiscroll, g = e.presets.scroller, f = e.util, h = f.has3d, j = f.jsPrefix, o = f.testTouch, i = {
        controls: ["calendar"],
        firstDay: 0,
        weekDays: "short",
        maxMonthWidth: 170,
        months: 1,
        preMonths: 1,
        highlight: !0,
        swipe: !0,
        liveSwipe: !0,
        divergentDayChange: !0,
        quickNav: !0,
        navigation: "yearMonth",
        dateText: "Date",
        timeText: "Time",
        calendarText: "Calendar",
        todayText: "Today",
        prevMonthText: "Previous Month",
        nextMonthText: "Next Month",
        prevYearText: "Previous Year",
        nextYearText: "Next Year",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left6",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right6"
    };
    g.calbase = function (b) {
        function n(b, c, e) {
            var d, f, h, g, i = {}, j = pa + Ja;
            b && a.each(b, function (a, b) {
                d = b.d || b.start || b;
                f = d + "";
                if (b.start && b.end)for (g = new Date(b.start); g <= b.end;)h = new Date(g.getFullYear(), g.getMonth(), g.getDate()), i[h] = i[h] || [], i[h].push(b), g.setDate(g.getDate() + 1); else if (d.getTime) h = new Date(d.getFullYear(), d.getMonth(), d.getDate()), i[h] = i[h] || [], i[h].push(b); else if (f.match(/w/i)) {
                    var k = +f.replace("w", ""), q = 0, l = x.getDate(c, e - pa - na, 1).getDay();
                    1 < x.firstDay - l + 1 && (q = 7);
                    for (E = 0; E < 5 * Ga; E++)h = x.getDate(c, e - pa - na, 7 * E - q - l + 1 + k), i[h] = i[h] || [], i[h].push(b)
                } else if (f = f.split("/"), f[1]) 11 <= e + j && (h = x.getDate(c + 1, f[0] - 1, f[1]), i[h] = i[h] || [], i[h].push(b)), 1 >= e - j && (h = x.getDate(c - 1, f[0] - 1, f[1]), i[h] = i[h] || [], i[h].push(b)), h = x.getDate(c, f[0] - 1, f[1]), i[h] = i[h] || [], i[h].push(b); else for (E = 0; E < Ga; E++)h = x.getDate(c, e - pa - na + E, f[0]), i[h] = i[h] || [], i[h].push(b)
            });
            return i
        }

        function q(a, c) {
            Ka = n(x.invalid, a, c);
            Eb = n(x.valid, a, c);
            b.onGenMonth(a, c)
        }

        function A(a, b, c, e,
                   d, f, h) {
            var g = '<div class="dw-cal-h dw-cal-sc-c dw-cal-' + a + "-c " + (x.calendarClass || "") + '"><div class="dw-cal-sc"><div class="dw-cal-sc-p"><div class="dw-cal-sc-tbl"><div class="dw-cal-sc-row">';
            for (p = 1; p <= b; p++)g = 12 >= p || p > c ? g + '<div class="dw-cal-sc-m-cell dw-cal-sc-cell dw-cal-sc-empty"><div class="dw-i">&nbsp;</div></div>' : g + ('<div tabindex="0" role="button"' + (f ? ' aria-label="' + f[p - 13] + '"' : "") + ' class="dwb-e dwb-nhl dw-cal-sc-m-cell dw-cal-sc-cell dw-cal-' + a + '-s" data-val=' + (e + p - 13) + '><div class="dw-i dw-cal-sc-tbl"><div class="dw-cal-sc-cell">' +
                (h ? h[p - 13] : e + p - 13 + d) + "</div></div></div>"), p < b && (0 === p % 12 ? g += '</div></div></div><div class="dw-cal-sc-p" style="' + (Ta ? "top" : Ya ? "right" : "left") + ":" + 100 * Math.round(p / 12) + '%"><div class="dw-cal-sc-tbl"><div class="dw-cal-sc-row">' : 0 === p % 3 && (g += '</div><div class="dw-cal-sc-row">'));
            return g + "</div></div></div></div></div>"
        }

        function D(e, d) {
            var f, h, g, i, j, q, l, p, n, o, I, B, m, E, A = 1, r = 0;
            f = x.getDate(e, d, 1);
            var y = x.getYear(f), ya = x.getMonth(f),
                D = null === x.defaultValue && !b._hasValue ? null : b.getDate(!0), ca = x.getDate(y,
                ya, 1).getDay(), C = '<div class="dw-cal-table">', s = '<div class="dw-week-nr-c">';
            1 < x.firstDay - ca + 1 && (r = 7);
            for (E = 0; 42 > E; E++)m = E + x.firstDay - r, f = x.getDate(y, ya, m - ca + 1), h = f.getFullYear(), g = f.getMonth(), i = f.getDate(), j = x.getMonth(f), q = x.getDay(f), B = x.getMaxDayOfMonth(h, g), l = h + "-" + g + "-" + i, g = a.extend({
                valid: f < new Date(hb.getFullYear(), hb.getMonth(), hb.getDate()) || f > za ? !1 : Ka[f] === c || Eb[f] !== c,
                selected: D && D.getFullYear() === h && D.getMonth() === g && D.getDate() === i
            }, b.getDayProps(f, D)), p = g.valid, n = g.selected, h = g.cssClass,
                o = f.getTime() === (new Date).setHours(0, 0, 0, 0), I = j !== ya, Bb[l] = g, 0 === E % 7 && (C += (E ? "</div>" : "") + '<div class="dw-cal-row' + (x.highlight && D && 0 <= D - f && 6048E5 > D - f ? " dw-cal-week-hl" : "") + '">'), nb && 1 == f.getDay() && ("month" == nb && I && 1 < A ? A = 1 == i ? 1 : 2 : "year" == nb && (A = x.getWeekNumber(f)), s += '<div class="dw-week-nr"><div class="dw-week-nr-i">' + A + "</div></div>", A++), C += '<div role="button" tabindex="-1" aria-label="' + (o ? x.todayText + ", " : "") + x.dayNames[f.getDay()] + ", " + x.monthNames[j] + " " + q + " " + (g.ariaLabel ? ", " + g.ariaLabel :
                    "") + '"' + (I && !Xa ? ' aria-hidden="true"' : "") + (n ? ' aria-selected="true"' : "") + (p ? "" : ' aria-disabled="true"') + ' data-day="' + m % 7 + '" data-full="' + l + '"class="dw-cal-day ' + (o ? " dw-cal-today" : "") + (x.dayClass || "") + (n ? " dw-sel" : "") + (h ? " " + h : "") + (1 == q ? " dw-cal-day-first" : "") + (q == B ? " dw-cal-day-last" : "") + (I ? " dw-cal-day-diff" : "") + (p ? " dw-cal-day-v dwb-e dwb-nhl" : " dw-cal-day-inv") + '"><div class="dw-i ' + (n ? sa : "") + " " + (x.innerDayClass || "") + '"><div class="dw-cal-day-fg">' + q + b._processItem(a, 0.06) + "</div>" + (g.markup ||
                "") + '<div class="dw-cal-day-frame"></div></div></div>';
            return C + ("</div></div>" + s + "</div>")
        }

        function F(b, c, e) {
            var d = x.getDate(b, c, 1), f = x.getYear(d), d = x.getMonth(d), h = f + Ea;
            if (ab) {
                cb && cb.removeClass("dw-sel").removeAttr("aria-selected").find(".dw-i").removeClass(sa);
                sb && sb.removeClass("dw-sel").removeAttr("aria-selected").find(".dw-i").removeClass(sa);
                cb = a('.dw-cal-year-s[data-val="' + f + '"]', G).addClass("dw-sel").attr("aria-selected", "true");
                sb = a('.dw-cal-month-s[data-val="' + d + '"]', G).addClass("dw-sel").attr("aria-selected",
                    "true");
                cb.find(".dw-i").addClass(sa);
                sb.find(".dw-i").addClass(sa);
                Va && Va.scroll(cb, e);
                a(".dw-cal-month-s", G).removeClass("dwb-d");
                if (f === ma)for (p = 0; p < ka; p++)a('.dw-cal-month-s[data-val="' + p + '"]', G).addClass("dwb-d");
                if (f === ya)for (p = qa + 1; 12 >= p; p++)a('.dw-cal-month-s[data-val="' + p + '"]', G).addClass("dwb-d")
            }
            1 == L.length && L.attr("aria-label", f).html(h);
            for (p = 0; p < la; ++p)d = x.getDate(b, c - na + p, 1), f = x.getYear(d), d = x.getMonth(d), h = f + Ea, a(ta[p]).attr("aria-label", x.monthNames[d] + (Fa ? "" : " " + f)).html((!Fa && wa <
                fa ? h + " " : "") + ga[d] + (!Fa && wa > fa ? " " + h : "")), 1 < L.length && a(L[p]).html(h);
            x.getDate(b, c - na - 1, 1) < oa ? w(a(".dw-cal-prev-m", G)) : r(a(".dw-cal-prev-m", G));
            x.getDate(b, c + la - na, 1) > La ? w(a(".dw-cal-next-m", G)) : r(a(".dw-cal-next-m", G));
            x.getDate(b, c, 1).getFullYear() <= oa.getFullYear() ? w(a(".dw-cal-prev-y", G)) : r(a(".dw-cal-prev-y", G));
            x.getDate(b, c, 1).getFullYear() >= La.getFullYear() ? w(a(".dw-cal-next-y", G)) : r(a(".dw-cal-next-y", G))
        }

        function r(a) {
            a.removeClass(rb).find(".dw-cal-btn-txt").removeAttr("aria-disabled")
        }

        function w(a) {
            a.addClass(rb).find(".dw-cal-btn-txt").attr("aria-disabled", "true")
        }

        function M(c, e) {
            if (ca && ("calendar" === Wa || e)) {
                var d, f, h = x.getDate(ra, ja, 1),
                    g = Math.abs(12 * (x.getYear(c) - x.getYear(h)) + x.getMonth(c) - x.getMonth(h));
                b.needsSlide && g && (ra = x.getYear(c), ja = x.getMonth(c), c > h ? (f = g > pa - na + la - 1, ja -= f ? 0 : g - pa, d = "next") : c < h && (f = g > pa + na, ja += f ? 0 : g - pa, d = "prev"), N(ra, ja, d, Math.min(g, pa), f, !0));
                e || (b.trigger("onDayHighlight", [c]), x.highlight && (a(".dw-sel .dw-i", Z).removeClass(sa), a(".dw-sel", Z).removeClass("dw-sel").removeAttr("aria-selected"),
                    a(".dw-cal-week-hl", Z).removeClass("dw-cal-week-hl"), (null !== x.defaultValue || b._hasValue) && a('.dw-cal-day[data-full="' + c.getFullYear() + "-" + c.getMonth() + "-" + c.getDate() + '"]', Z).addClass("dw-sel").attr("aria-selected", "true").find(".dw-i").addClass(sa).closest(".dw-cal-row").addClass("dw-cal-week-hl")));
                b.needsSlide = !0
            }
        }

        function t(a, c) {
            q(a, c);
            for (p = 0; p < Ga; p++)xa[p].html(D(a, c - na - pa + p));
            H();
            b.needsRefresh = !1
        }

        function m(b, c, e) {
            var d = pa, f = pa;
            if (e) {
                for (; f && x.getDate(b, c + d + la - na - 1, 1) > La;)f--;
                for (; d && x.getDate(b,
                    c - f - na, 1) < oa;)d--
            }
            a.extend(aa.settings, {
                contSize: la * Q,
                snap: Q,
                minScroll: V - (Ya ? d : f) * Q,
                maxScroll: V + (Ya ? f : d) * Q
            });
            aa.refresh()
        }

        function H() {
            nb && ia.html(a(".dw-week-nr-c", xa[pa]).html());
            a(".dw-cal-slide-a .dw-cal-day", I).attr("tabindex", 0)
        }

        function N(c, e, d, f, h, g, i) {
            c && fb.push({y: c, m: e, dir: d, slideNr: f, load: h, active: g, callback: i});
            if (!Za) {
                var j = fb.shift(), c = j.y, e = j.m, d = "next" === j.dir, f = j.slideNr, h = j.load, g = j.active,
                    i = j.callback || Cb, j = x.getDate(c, e, 1), c = x.getYear(j), e = x.getMonth(j);
                Za = !0;
                b.changing = !0;
                b.trigger("onMonthChange",
                    [c, e]);
                q(c, e);
                if (h)for (p = 0; p < la; p++)xa[d ? Ga - la + p : p].html(D(c, e - na + p));
                g && Aa.addClass("dw-cal-slide-a");
                setTimeout(function () {
                    b.ariaMessage(x.monthNames[e] + " " + c);
                    F(c, e, 200);
                    V = d ? V - Q * f * gb : V + Q * f * gb;
                    aa.scroll(V, ea ? 200 : 0, function () {
                        setTimeout(function () {
                            var g;
                            if (xa.length) {
                                Aa.removeClass("dw-cal-slide-a").attr("aria-hidden", "true");
                                if (d) {
                                    g = xa.splice(0, f);
                                    for (p = 0; p < f; p++)xa.push(g[p]), s(xa[xa.length - 1], +xa[xa.length - 2].data("curr") + 100 * gb)
                                } else {
                                    g = xa.splice(Ga - f, f);
                                    for (p = f - 1; 0 <= p; p--)xa.unshift(g[p]), s(xa[0],
                                        +xa[1].data("curr") - 100 * gb)
                                }
                                for (p = 0; p < f; p++)xa[d ? Ga - f + p : p].html(D(c, e - na - pa + p + (d ? Ga - f : 0))), h && xa[d ? p : Ga - f + p].html(D(c, e - na - pa + p + (d ? 0 : Ga - f)));
                                for (p = 0; p < la; p++)xa[pa + p].addClass("dw-cal-slide-a").removeAttr("aria-hidden");
                                m(c, e, !0);
                                Za = !1
                            }
                            fb.length ? setTimeout(function () {
                                N()
                            }, 10) : (ra = c, ja = e, b.changing = !1, a(".dw-cal-day", I).attr("tabindex", -1), H(), b.needsRefresh && b.isVisible() && ca && t(ra, ja), b.trigger("onMonthLoaded", [c, e]), i())
                        }, ea ? 0 : 200)
                    })
                }, 10)
            }
        }

        function v() {
            var c = a(this), e = b.live, d = b.getDate(!0), f = c.attr("data-full"),
                h = f.split("-"), h = new Date(h[0], h[1], h[2]),
                d = new Date(h.getFullYear(), h.getMonth(), h.getDate(), d.getHours(), d.getMinutes(), d.getSeconds()),
                g = c.hasClass("dw-sel");
            if ((Xa || !c.hasClass("dw-cal-day-diff")) && !1 !== b.trigger("onDayChange", [a.extend(Bb[f], {
                    date: d,
                    cell: this,
                    selected: g
                })])) b.needsSlide = !1, K = !0, b.setDate(d, e, 0.2, !e, !0), x.divergentDayChange && (Sa = !0, h < x.getDate(ra, ja - na, 1) ? z() : h > x.getDate(ra, ja - na + la, 0) && u(), Sa = !1)
        }

        function s(a, b) {
            a.data("curr", b);
            h ? a[0].style[j + "Transform"] = "translate3d(" + (Ta ?
                    "0," + b + "%," : b + "%,0,") + "0)" : a[0].style[Ta ? "top" : "left"] = b + "%"
        }

        function u() {
            Sa && x.getDate(ra, ja + la - na, 1) <= La && true && N(ra, ++ja, "next", 1, !1, !0, u)
        }

        function z() {
            Sa && x.getDate(ra, ja - na - 1, 1) >= oa && true && N(ra, --ja, "prev", 1, !1, !0, z)
        }

        function X(b) {
            Sa && x.getDate(ra, ja, 1) <= x.getDate(x.getYear(La) - 1, x.getMonth(La) - Ja, 1) && true ? N(++ra, ja, "next", pa, !0, !0, function () {
                X(b)
            }) : Sa && !b.hasClass("dwb-d") && true && N(x.getYear(La), x.getMonth(La) - Ja, "next", pa, !0, !0)
        }

        function C(b) {
            Sa && x.getDate(ra, ja, 1) >= x.getDate(x.getYear(oa) + 1, x.getMonth(oa) + na, 1) && true ? N(--ra, ja, "prev", pa, !0, !0, function () {
                C(b)
            }) : Sa && !b.hasClass("dwb-d") && true && N(x.getYear(oa), x.getMonth(oa) + na, "prev", pa, !0, !0)
        }

        function T(a, c) {
            a.hasClass("dw-cal-v") || (a.addClass("dw-cal-v" + (c ? "" : " dw-cal-p-in")).removeClass("dw-cal-p-out dw-cal-h"), b.trigger("onSelectShow", []))
        }

        function l(a, b) {
            a.hasClass("dw-cal-v") && a.removeClass("dw-cal-v dw-cal-p-in").addClass("dw-cal-h" +
                (b ? "" : " dw-cal-p-out"))
        }

        function J(a, b) {
            (b || a).hasClass("dw-cal-v") ? l(a) : T(a)
        }

        function y() {
            a(this).removeClass("dw-cal-p-out dw-cal-p-in")
        }

        var O, p, E, R, S, G, P, Z, I, Q, V, K, ca, U, ha, ia, B, ea, ga, aa, da, ta, fa, L, wa, ma, ya, ka, qa, oa, La,
            hb, za, Ba, ra, ja, ob, pb, Eb, Ka, Ra, Wa, Za, Sa, la, Ga, Ja, na, Xa, Va, cb, sb, Gb = this, Aa = [],
            xa = [], fb = [], va = {}, Bb = {}, Cb = function () {
            }, Xb = a.extend({}, b.settings), x = a.extend(b.settings, i, Xb),
            Ua = "full" == x.weekDays ? "" : "min" == x.weekDays ? "Min" : "Short", nb = x.weekCounter,
            Jb = x.layout || (/top|bottom/.test(x.display) ?
                    "liquid" : ""), Ha = "liquid" == Jb && "bubble" !== x.display, zb = "modal" == x.display,
            Ya = x.rtl, gb = Ya ? -1 : 1, Ib = Ha ? null : x.calendarWidth, Ta = "vertical" == x.swipeDirection,
            ab = x.quickNav, pa = x.preMonths, Fa = "yearMonth" == x.navigation, Da = x.controls.join(","),
            bb = (!0 === x.tabs || !1 !== x.tabs && Ha) && 1 < x.controls.length,
            Y = !bb && x.tabs === c && !Ha && 1 < x.controls.length, Ea = x.yearSuffix || "", sa = x.activeClass || "",
            qb = "dw-sel " + (x.activeTabClass || ""), jb = x.activeTabInnerClass || "",
            rb = "dwb-d " + (x.disabledClass || ""), Pa = "", ua = "";
        Da.match(/calendar/) ?
            ca = !0 : ab = !1;
        Da.match(/date/) && (va.date = 1);
        Da.match(/time/) && (va.time = 1);
        ca && va.date && (bb = !0, Y = !1);
        x.layout = Jb;
        x.preset = (va.date || ca ? "date" : "") + (va.time ? "time" : "");
        if ("inline" == x.display) a(this).closest('[data-role="page"]').on("pageshow", function () {
            b.position()
        });
        b.changing = !1;
        b.needsRefresh = !1;
        b.needsSlide = !0;
        b.getDayProps = Cb;
        b.onGenMonth = Cb;
        b.prepareObj = n;
        b.refresh = function () {
            b.changing ? b.needsRefresh = true : b.isVisible() && ca && t(ra, ja)
        };
        b.navigate = function (a, c) {
            var e, d, f = b.isVisible();
            if (c && f) M(a,
                true); else {
                e = x.getYear(a);
                d = x.getMonth(a);
                if (f && (e != ra || d != ja)) {
                    b.trigger("onMonthChange", [e, d]);
                    F(e, d);
                    t(e, d)
                }
                ra = e;
                ja = d
            }
        };
        b.showMonthView = function () {
            if (ab && !ea) {
                l(ua, true);
                l(Pa, true);
                T(B, true);
                ea = true
            }
        };
        R = g.datetime.call(this, b);
        fa = x.dateOrder.search(/m/i);
        wa = x.dateOrder.search(/y/i);
        a.extend(R, {
            ariaMessage: x.calendarText, onMarkupReady: function (g) {
                var i, j, q = "";
                G = g;
                P = x.display == "inline" ? a(this).is("div") ? a(this) : a(this).parent() : b.context;
                Ba = b.getDate(true);
                if (!ra) {
                    ra = x.getYear(Ba);
                    ja = x.getMonth(Ba)
                }
                V =
                    0;
                ha = true;
                Za = false;
                ga = x.monthNames;
                Wa = "calendar";
                if (x.minDate) {
                    oa = new Date(x.minDate.getFullYear(), x.minDate.getMonth(), 1);
                    hb = x.minDate
                } else hb = oa = new Date(x.startYear, 0, 1);
                if (x.maxDate) {
                    La = new Date(x.maxDate.getFullYear(), x.maxDate.getMonth(), 1);
                    za = x.maxDate
                } else za = La = new Date(x.endYear, 11, 31, 23, 59, 59);
                g.addClass("dw-calendar" + (h ? "" : " dw-cal-no3d"));
                S = a(".dw", g);
                Ra = a(".dwcc", g);
                va.date ? va.date = a(".dwc", G).eq(0) : ca && a(".dwc", G).eq(0).addClass("dwc-hh");
                if (va.time) va.time = a(".dwc", G).eq(1);
                if (ca) {
                    la =
                        x.months == "auto" ? Math.max(1, Math.min(3, Math.floor((Ib || P[0].innerWidth || P.innerWidth()) / 280))) : x.months;
                    Ga = la + 2 * pa;
                    Ja = Math.floor(la / 2);
                    na = Math.round(la / 2) - 1;
                    Xa = x.showDivergentDays === c ? la < 2 : x.showDivergentDays;
                    Ta = Ta && la < 2;
                    j = '<div class="dw-cal-btnw"><div class="' + (Ya ? "dw-cal-next-m" : "dw-cal-prev-m") + ' dw-cal-prev dw-cal-btn dwb dwb-e"><div role="button" tabindex="0" class="dw-cal-btn-txt ' + (x.btnCalPrevClass || "") + '" aria-label="' + x.prevMonthText + '"></div></div>';
                    for (p = 0; p < la; ++p)j = j + ('<div class="dw-cal-btnw-m" style="width: ' +
                        100 / la + '%"><span role="button" class="dw-cal-month"></span></div>');
                    j = j + ('<div class="' + (Ya ? "dw-cal-prev-m" : "dw-cal-next-m") + ' dw-cal-next dw-cal-btn dwb dwb-e"><div role="button" tabindex="0" class="dw-cal-btn-txt ' + (x.btnCalNextClass || "") + '" aria-label="' + x.nextMonthText + '"></div></div></div>');
                    Fa && (q = '<div class="dw-cal-btnw"><div class="' + (Ya ? "dw-cal-next-y" : "dw-cal-prev-y") + ' dw-cal-prev dw-cal-btn dwb dwb-e"><div role="button" tabindex="0" class="dw-cal-btn-txt ' + (x.btnCalPrevClass || "") + '" aria-label="' +
                        x.prevYearText + '"></div></div><span role="button" class="dw-cal-year"></span><div class="' + (Ya ? "dw-cal-prev-y" : "dw-cal-next-y") + ' dw-cal-next dw-cal-btn dwb dwb-e"><div role="button" tabindex="0" class="dw-cal-btn-txt ' + (x.btnCalNextClass || "") + '" aria-label="' + x.nextYearText + '"></div></div></div>');
                    if (ab) {
                        ma = x.getYear(oa);
                        ya = x.getYear(La);
                        ka = x.getMonth(oa);
                        qa = x.getMonth(La);
                        pb = Math.ceil((ya - ma + 1) / 12) + 2;
                        Pa = A("month", 36, 24, 0, "", x.monthNames, x.monthNamesShort);
                        ua = A("year", pb * 12, ya - ma + 13, ma, Ea)
                    }
                    U = '<div class="mbsc-w-p dw-cal-c"><div class="dw-cal ' +
                        (la > 1 ? " dw-cal-multi " : "") + (nb ? " dw-weeks " : "") + (Xa ? "" : " dw-hide-diff ") + (x.calendarClass || "") + '"><div class="dw-cal-header"><div class="dw-cal-btnc ' + (Fa ? "dw-cal-btnc-ym" : "dw-cal-btnc-m") + '">' + (wa < fa || la > 1 ? q + j : j + q) + '</div></div><div class="dw-cal-body"><div class="dw-cal-m-c dw-cal-v"><div class="dw-cal-days-c">';
                    for (E = 0; E < la; ++E) {
                        U = U + ('<div aria-hidden="true" class="dw-cal-days" style="width: ' + 100 / la + '%"><table cellpadding="0" cellspacing="0"><tr>');
                        for (p = 0; p < 7; p++)U = U + ("<th>" + x["dayNames" + Ua][(p +
                            x.firstDay) % 7] + "</th>");
                        U = U + "</tr></table></div>"
                    }
                    U = U + ('</div><div class="dw-cal-anim-c ' + (x.calendarClass || "") + '"><div class="dw-week-nrs-c ' + (x.weekNrClass || "") + '"><div class="dw-week-nrs"></div></div><div class="dw-cal-anim">');
                    for (p = 0; p < la + 2 * pa; p++)U = U + '<div class="dw-cal-slide" aria-hidden="true"></div>';
                    U = U + ("</div></div></div>" + Pa + ua + "</div></div></div>");
                    va.calendar = a(U)
                }
                a.each(x.controls, function (b, c) {
                    va[c] = a('<div class="dw-cal-pnl" id="' + (Gb.id + "_dw_pnl_" + b) + '"></div>').append(a('<div class="dw-cal-pnl-i"></div>').append(va[c])).appendTo(Ra)
                });
                i = '<div class="dw-cal-tabs"><ul role="tablist">';
                a.each(x.controls, function (a, b) {
                    va[b] && (i = i + ('<li role="tab" aria-controls="' + (Gb.id + "_dw_pnl_" + a) + '" class="dw-cal-tab ' + (a ? "" : qb) + '" data-control="' + b + '"><a href="#" class="dwb-e dwb-nhl dw-i ' + (!a ? jb : "") + '">' + x[b + "Text"] + "</a></li>"))
                });
                i = i + "</ul></div>";
                Ra.before(i);
                Z = a(".dw-cal-anim-c", G);
                I = a(".dw-cal-anim", Z);
                ia = a(".dw-week-nrs", Z);
                if (ca) {
                    ea = true;
                    Aa = a(".dw-cal-slide", I).each(function (b, c) {
                        xa.push(a(c))
                    });
                    Aa.slice(pa, pa + la).addClass("dw-cal-slide-a").removeAttr("aria-hidden");
                    for (p = 0; p < Ga; p++)s(xa[p], 100 * (p - pa) * gb);
                    t(ra, ja);
                    aa = new e.classes.ScrollView(Z[0], {
                        axis: Ta ? "Y" : "X",
                        easing: "",
                        contSize: 0,
                        snap: 1,
                        maxSnapScroll: pa,
                        moveElement: I,
                        mousewheel: x.mousewheel,
                        swipe: x.swipe,
                        liveSwipe: x.liveSwipe,
                        time: 200,
                        lock: true,
                        onScrollStart: function (a, c) {
                            c.settings.scrollLock = b.scrollLock
                        },
                        onScrollEnd: function (a) {
                            (a = Math.round((a - V) / Q) * gb) && N(ra, ja - a, a > 0 ? "prev" : "next", a > 0 ? a : -a)
                        }
                    })
                }
                ta = a(".dw-cal-month", G);
                L = a(".dw-cal-year", G);
                B = a(".dw-cal-m-c", G);
                if (ab) {
                    B.on("webkitAnimationEnd animationend",
                        y);
                    Pa = a(".dw-cal-month-c", G).on("webkitAnimationEnd animationend", y);
                    ua = a(".dw-cal-year-c", G).on("webkitAnimationEnd animationend", y);
                    a(".dw-cal-sc-p", G);
                    ob = {
                        axis: Ta ? "Y" : "X",
                        contSize: 0,
                        snap: 1,
                        maxSnapScroll: 1,
                        rtl: x.rtl,
                        mousewheel: x.mousewheel,
                        swipe: x.swipe,
                        liveSwipe: x.liveSwipe,
                        time: 200
                    };
                    Va = new e.classes.ScrollView(ua[0], ob);
                    da = new e.classes.ScrollView(Pa[0], ob)
                }
                setTimeout(function () {
                    b.tap(Z, function (b) {
                        b = a(b.target);
                        if (!Za && !aa.scrolled) {
                            b = b.closest(".dw-cal-day", this);
                            b.hasClass("dw-cal-day-v") &&
                            v.call(b[0])
                        }
                    });
                    a(".dw-cal-btn", G).on("touchstart mousedown keydown", function (b) {
                        var c = a(this);
                        if (b.type !== "keydown") {
                            b.preventDefault();
                            b = o(b, this)
                        } else b = b.keyCode === 32;
                        if (!Sa && b && !c.hasClass("dwb-d")) {
                            Sa = true;
                            c.hasClass("dw-cal-prev-m") ? z() : c.hasClass("dw-cal-next-m") ? u() : c.hasClass("dw-cal-prev-y") ? C(c) : c.hasClass("dw-cal-next-y") && X(c);
                            a(d).on("mouseup.dwbtn", function () {
                                a(d).off(".dwbtn");
                                Sa = false
                            })
                        }
                    }).on("touchend touchcancel keyup", function () {
                        Sa = false
                    });
                    a(".dw-cal-tab", G).on("touchstart click",
                        function (c) {
                            var e = a(this);
                            if (o(c, this) && true && !e.hasClass("dw-sel")) {
                                Wa = e.attr("data-control");
                                a(".dw-cal-pnl", G).removeClass("dw-cal-p-in").addClass("dw-cal-pnl-h");
                                a(".dw-cal-tab", G).removeClass(qb).removeAttr("aria-selected").find(".dw-i").removeClass(jb);
                                e.addClass(qb).attr("aria-selected", "true").find(".dw-i").addClass(jb);
                                va[Wa].removeClass("dw-cal-pnl-h").addClass("dw-cal-p-in");
                                if (Wa === "calendar") {
                                    O = b.getDate(true);
                                    (O.getFullYear() !== Ba.getFullYear() || O.getMonth() !== Ba.getMonth() ||
                                    O.getDate() !== Ba.getDate()) && M(O)
                                } else {
                                    Ba = b.getDate(true);
                                    b.setDate(Ba, false, 0, true)
                                }
                                b.showMonthView();
                                b.trigger("onTabChange", [Wa])
                            }
                        });
                    if (ab) {
                        b.tap(a(".dw-cal-month", G), function () {
                            if (!ua.hasClass("dw-cal-v")) {
                                J(B);
                                ea = B.hasClass("dw-cal-v")
                            }
                            J(Pa);
                            l(ua)
                        });
                        b.tap(a(".dw-cal-year", G), function () {
                            ua.hasClass("dw-cal-v") || Va.scroll(cb);
                            if (!Pa.hasClass("dw-cal-v")) {
                                J(B);
                                ea = B.hasClass("dw-cal-v")
                            }
                            J(ua);
                            l(Pa)
                        });
                        b.tap(a(".dw-cal-month-s", G), function () {
                            !da.scrolled && !a(this).hasClass("dwb-d") && b.navigate(x.getDate(ra,
                                a(this).attr("data-val"), 1))
                        });
                        b.tap(a(".dw-cal-year-s", G), function () {
                            if (!Va.scrolled) {
                                O = x.getDate(a(this).attr("data-val"), ja, 1);
                                b.navigate(new Date(f.constrain(O, oa, La)))
                            }
                        });
                        b.tap(ua, function () {
                            if (!Va.scrolled) {
                                l(ua);
                                T(B);
                                ea = true
                            }
                        });
                        b.tap(Pa, function () {
                            if (!da.scrolled) {
                                l(Pa);
                                T(B);
                                ea = true
                            }
                        })
                    }
                }, 300);
                Ha ? g.addClass("dw-cal-liq") : a(".dw-cal", G).width(Ib || 280 * la);
                x.calendarHeight && a(".dw-cal-anim-c", G).height(x.calendarHeight)
            }, onShow: function () {
                if (ca) {
                    F(ra, ja);
                    b.trigger("onMonthLoaded", [ra, ja])
                }
            }, onPosition: function (c,
                                     e, d) {
                var f, h, g, i = 0, j = 0, q = 0;
                if (Ha) {
                    zb && Z.height("");
                    Ra.height("");
                    I.width("")
                }
                Q && (g = Q);
                if (Q = Math.round(Math.round(parseInt(Z.css(Ta ? "height" : "width"))) / la)) {
                    G.removeClass("mbsc-cal-m mbsc-cal-l");
                    Q > 1024 ? G.addClass("mbsc-cal-l") : Q > 640 && G.addClass("mbsc-cal-m")
                }
                if (bb && (ha || Ha) || Y) {
                    a(".dw-cal-pnl", G).removeClass("dw-cal-pnl-h");
                    a.each(va, function (a, b) {
                        f = b.outerWidth();
                        i = Math.max(i, f);
                        j = Math.max(j, b.outerHeight());
                        q = q + f
                    });
                    if (bb || Y && q > (P[0].innerWidth || P.innerWidth())) {
                        h = true;
                        Wa = a(".dw-cal-tabs .dw-sel",
                            G).attr("data-control");
                        S.addClass("dw-cal-tabbed")
                    } else {
                        Wa = "calendar";
                        j = i = "";
                        S.removeClass("dw-cal-tabbed");
                        Ra.css({width: "", height: ""})
                    }
                }
                if (Ha && zb) {
                    b._isFullScreen = true;
                    h && ca && Ra.height(va.calendar.outerHeight());
                    c = S.outerHeight();
                    d >= c && Z.height(d - c + Z.outerHeight());
                    ca && (j = Math.max(j, va.calendar.outerHeight()))
                }
                if (h) {
                    Ra.css({width: Ha ? "" : i, height: j});
                    Q = Math.round(Math.round(parseInt(Z.css(Ta ? "height" : "width"))) / la)
                }
                if (Q) {
                    I[Ta ? "height" : "width"](Q);
                    if (Q !== g) {
                        if (Fa) {
                            ga = x.maxMonthWidth > a(".dw-cal-btnw-m",
                                G).width() ? x.monthNamesShort : x.monthNames;
                            for (p = 0; p < la; ++p)a(ta[p]).text(ga[x.getMonth(x.getDate(ra, ja - na + p, 1))])
                        }
                        if (ab) {
                            d = ua[Ta ? "height" : "width"]();
                            a.extend(Va.settings, {contSize: d, snap: d, minScroll: (2 - pb) * d, maxScroll: -d});
                            a.extend(da.settings, {contSize: d, snap: d, minScroll: -d, maxScroll: -d});
                            Va.refresh();
                            da.refresh();
                            ua.hasClass("dw-cal-v") && Va.scroll(cb)
                        }
                        if (Ha && !ha && g) {
                            d = V / g;
                            V = d * Q
                        }
                        m(ra, ja, !g)
                    }
                } else Q = g;
                if (h) {
                    a(".dw-cal-pnl", G).addClass("dw-cal-pnl-h");
                    va[Wa].removeClass("dw-cal-pnl-h")
                }
                b.trigger("onCalResize",
                    []);
                ha = false
            }, onHide: function () {
                fb = [];
                xa = [];
                ja = ra = Wa = null;
                Za = true;
                Q = 0;
                aa && aa.destroy();
                if (ab && Va && da) {
                    Va.destroy();
                    da.destroy()
                }
            }, onValidated: function () {
                var a, c, e;
                c = b.getDate(true);
                if (K) a = "calendar"; else for (e in b.order)e && b.order[e] === p && (a = /mdy/.test(e) ? "date" : "time");
                b.trigger("onSetDate", [{date: c, control: a}]);
                M(c);
                K = false
            }
        });
        return R
    }
})($, window, document);
(function (a, b) {
    var d = {invalid: [], showInput: !0, inputClass: ""};
    a.mobiscroll.presets.scroller.list = function (c) {
        function e(b, c, e, d) {
            for (var f, h = 0; h < c;) {
                var g = a(".dwwl" + h, b), i;
                f = 0;
                i = void 0;
                for (var j = e, q = []; f < h;) {
                    var k = d[f];
                    for (i in j)if (j[i].key == k) {
                        j = j[i].children;
                        break
                    }
                    f++
                }
                for (f = 0; f < j.length;)j[f].invalid && q.push(j[f].key), f++;
                i = q;
                for (f = 0; f < i.length; f++)a('.dw-li[data-val="' + i[f] + '"]', g).removeClass("dw-v");
                h++
            }
        }

        function g(a, b) {
            for (var c = []; a;)c[--a] = !0;
            c[b] = !1;
            return c
        }

        function f(a, c, e) {
            var d = 0, f, g,
                i = [[]], q = s;
            if (c)for (f = 0; f < c; f++)A ? i[0][f] = {} : i[f] = [{}];
            for (; d < a.length;) {
                A ? i[0][d] = j(q, u[d]) : i[d] = [j(q, u[d])];
                f = 0;
                for (c = b; f < q.length && c === b;) {
                    if (q[f].key == a[d] && (e !== b && d <= e || e === b)) c = f;
                    f++
                }
                if (c !== b && q[c].children) d++, q = q[c].children; else if ((g = h(q)) && g.children) d++, q = g.children; else break
            }
            return i
        }

        function h(a, b) {
            if (!a)return !1;
            for (var c = 0, e; c < a.length;)if (!(e = a[c++]).invalid)return b ? c - 1 : e;
            return !1
        }

        function j(a, b) {
            for (var c = {
                keys: [],
                values: [],
                label: b
            }, e = 0; e < a.length;)c.values.push(a[e].value), c.keys.push(a[e].key),
                e++;
            return c
        }

        function o(b, c) {
            a(".dwfl", b).css("display", "").slice(c).hide()
        }

        function i(a, c) {
            var e = [], d = s, f = 0, g = !1, i, j;
            if (a[f] !== b && f <= c) {
                g = 0;
                i = a[f];
                for (j = b; g < d.length && j === b;)d[g].key == a[f] && !d[g].invalid && (j = g), g++
            } else j = h(d, !0), i = d[j].key;
            g = j !== b ? d[j].children : !1;
            for (e[f] = i; g;) {
                d = d[j].children;
                f++;
                if (a[f] !== b && f <= c) {
                    g = 0;
                    i = a[f];
                    for (j = b; g < d.length && j === b;)d[g].key == a[f] && !d[g].invalid && (j = g), g++
                } else j = h(d, !0), j = !1 === j ? b : j, i = d[j].key;
                g = j !== b && h(d[j].children) ? d[j].children : !1;
                e[f] = i
            }
            return {
                lvl: f +
                1, nVector: e
            }
        }

        function k(e) {
            var d = [];
            t = t > m++ ? t : m;
            e.children("li").each(function (e) {
                var f = a(this), h = f.clone();
                h.children("ul,ol").remove();
                var h = c._processMarkup ? c._processMarkup(h) : h.html().replace(/^\s\s*/, "").replace(/\s\s*$/, ""),
                    g = f.attr("data-invalid") ? !0 : !1, e = {
                        key: f.attr("data-val") === b || null === f.attr("data-val") ? e : f.attr("data-val"),
                        value: h,
                        invalid: g,
                        children: null
                    }, f = f.children("ul,ol");
                f.length && (e.children = k(f));
                d.push(e)
            });
            m--;
            return d
        }

        var n = a.extend({}, c.settings), q = a.extend(c.settings, d,
            n), n = q.layout || (/top|bottom/.test(q.display) ? "liquid" : ""), A = "liquid" == n, D = q.readonly,
            F = a(this), r, w, M = this.id + "_dummy", t = 0, m = 0, H = {}, N, v = [], s = q.wheelArray || k(F),
            u = function (a) {
                var b = [], c;
                for (c = 0; c < a; c++)b[c] = q.labels && q.labels[c] ? q.labels[c] : c;
                return b
            }(t), z = function (a) {
                var b = [], c;
                c = !0;
                for (var e = 0; c;)c = h(a), b[e++] = c.key, (c = c.children) && (a = c);
                return b
            }(s), X = f(z, t);
        a("#" + M).remove();
        q.showInput && (r = a('<input type="text" id="' + M + '" value="" class="' + q.inputClass + '" placeholder="' + (q.placeholder || "") + '" readonly />').insertBefore(F),
            q.anchor = r, c.attachShow(r));
        q.wheelArray || F.hide().closest(".ui-field-contain").trigger("create");
        return {
            width: 50, wheels: X, layout: n, headerText: !1, formatValue: function (a) {
                if (N === b) N = i(a, a.length).lvl;
                return a.slice(0, N).join(" ")
            }, parseValue: function (a) {
                return a ? (a + "").split(" ") : (q.defaultValue || z).slice(0)
            }, onBeforeShow: function () {
                var a = c.getArrayVal(true);
                v = a.slice(0);
                q.wheels = f(a, t, t);
                w = true
            }, onValueFill: function (a) {
                N = b;
                r && r.val(a)
            }, onShow: function (b) {
                a(".dwwl", b).on("mousedown touchstart", function () {
                    clearTimeout(H[a(".dwwl",
                        b).index(this)])
                })
            }, onDestroy: function () {
                r && r.remove();
                F.show()
            }, validate: function (a, d, h) {
                var j = [], k = c.getArrayVal(true), n = (d || 0) + 1, p, m;
                if (d !== b && v[d] != k[d] || d === b && !w) {
                    q.wheels = f(k, null, d);
                    m = i(k, d === b ? k.length : d);
                    N = m.lvl;
                    for (p = 0; p < k.length; p++)k[p] = m.nVector[p] || 0;
                    for (; n < m.lvl;)j.push(n++);
                    if (j.length) {
                        q.readonly = g(t, d);
                        clearTimeout(H[d]);
                        H[d] = setTimeout(function () {
                            w = true;
                            o(a, m.lvl);
                            v = k.slice(0);
                            c.changeWheel(j, d === b ? h : 0, d !== b);
                            q.readonly = D
                        }, d === b ? 0 : h * 1E3);
                        return false
                    }
                } else {
                    m = i(k, k.length);
                    N = m.lvl
                }
                v =
                    k.slice(0);
                e(a, m.lvl, s, k);
                o(a, m.lvl);
                w = false
            }
        }
    }
})($);
(function (a, b) {
    var d = a.mobiscroll, c = d.classes, e = d.util, g = e.constrain, f = e.jsPrefix, h = e.prefix, j = e.has3d,
        o = e.getCoord, i = e.getPosition, k = e.testTouch, n = e.isNumeric, q = e.isString,
        A = "webkitTransitionEnd transitionend", D = window.requestAnimationFrame || function (a) {
                a()
            }, F = window.cancelAnimationFrame || function () {
            };
    c.ScrollView = function (e, d, M) {
        function t(b) {
            if ((!ka.lock || !Q) && k(b, this) && !I && true) {
                "mousedown" == b.type && b.preventDefault();
                z && z.removeClass("mbsc-btn-a");
                R = !1;
                z = a(b.target).closest(".mbsc-btn-e",
                    this);
                z.length && !z.hasClass("mbsc-btn-d") && (R = !0, X = setTimeout(function () {
                    z.addClass("mbsc-btn-a")
                }, 100));
                I = !0;
                Z = !1;
                L.scrolled = Q;
                ea = o(b, "X");
                ga = o(b, "Y");
                p = ea;
                J = l = T = 0;
                B = new Date;
                ia = +i(da, fa) || 0;
                u(ia, 1);
                if ("mousedown" === b.type) a(document).on("mousemove", m).on("mouseup", N);
                ta("onScrollStart", [wa])
            }
        }

        function m(a) {
            if (I) {
                p = o(a, "X");
                E = o(a, "Y");
                T = p - ea;
                l = E - ga;
                J = fa ? l : T;
                if (R && (5 < Math.abs(l) || 5 < Math.abs(T))) clearTimeout(X), z.removeClass("mbsc-btn-a"), R = !1;
                !Z && 5 < Math.abs(J) && (L.scrolled = !0, ka.liveSwipe && !K && (K =
                    !0, V = D(H)));
                fa || ka.scrollLock ? a.preventDefault() : L.scrolled ? a.preventDefault() : 7 < Math.abs(l) && (Z = !0, L.scrolled = !0, qa.trigger("touchend"))
            }
        }

        function H() {
            G && (J = g(J, -U * G, U * G));
            u(g(ia + J, P - O, S + O));
            K = !1
        }

        function N(b) {
            if (I) {
                var c;
                c = new Date - B;
                F(V);
                K = !1;
                !Z && L.scrolled && (ka.momentum && j && 300 > c && (c = J / c, J = Math.max(Math.abs(J), c * c / ka.speedUnit) * (0 > J ? -1 : 1)), s(J));
                R && (clearTimeout(X), z.addClass("mbsc-btn-a"), setTimeout(function () {
                    z.removeClass("mbsc-btn-a")
                }, 100), !Z && !L.scrolled && ta("onBtnTap", [z]));
                "mouseup" ==
                b.type && a(document).off("mousemove", m).off("mouseup", N);
                I = !1
            }
        }

        function v(b) {
            b = b.originalEvent || b;
            if ((J = fa ? b.deltaY || b.wheelDelta || b.detail : b.deltaX) && true) b.preventDefault(), J = 0 > J ? 20 : -20, ia = wa, K || (K = !0, V = D(H)), clearTimeout(ca), ca = setTimeout(function () {
                F(V);
                K = false;
                s(J)
            }, 200)
        }

        function s(a) {
            var b;
            G && (a = g(a, -U * G, U * G));
            ma = Math.round((ia + a) / U);
            b = g(ma * U, P, S);
            if (ha) {
                if (0 > a)for (a = ha.length - 1; 0 <= a; a--) {
                    if (Math.abs(b) + C >= ha[a].breakpoint) {
                        ma = a;
                        ya = 2;
                        b = ha[a].snap2;
                        break
                    }
                } else if (0 <= a)for (a = 0; a <
                ha.length; a++)if (Math.abs(b) <= ha[a].breakpoint) {
                    ma = a;
                    ya = 1;
                    b = ha[a].snap1;
                    break
                }
                b = g(b, P, S)
            }
            u(b, ka.time || (wa < P || wa > S ? 200 : Math.max(200, Math.abs(b - wa) * ka.timeUnit)), function () {
                ta("onScrollEnd", [wa])
            })
        }

        function u(a, b, c) {
            var e = function () {
                Q = !1;
                c && c()
            };
            Q = !0;
            if (j)if (aa[f + "Transition"] = b ? h + "transform " + Math.round(b) + "ms " + ka.easing : "", aa[f + "Transform"] = "translate3d(" + (fa ? "0," + a + "px," : a + "px,0,") + "0)", wa == a || !b) e(); else {
                if (b) da.on(A, function (a) {
                    a.target === da[0] && (da.off(A), aa[f + "Transition"] = "", e())
                })
            } else setTimeout(e,
                b || 0), aa[y] = a + "px";
            wa = a
        }

        var z, X, C, T, l, J, y, O, p, E, R, S, G, P, Z, I, Q, V, K, ca, U, ha, ia, B, ea, ga, aa, da, ta, fa, L = this,
            wa = 0, ma = 0, ya = 1, ka = d, qa = a(e);
        c.Base.call(this, e, d, !0);
        L.scrolled = !1;
        L.scroll = function (b, c, d) {
            b = n(b) ? Math.round(b / U) * U : Math.ceil((a(b, e).length ? Math.round(da.offset()[y] - a(b, e).offset()[y]) : wa) / U) * U;
            ma = Math.round(b / U);
            u(g(b, P, S), c, d)
        };
        L.refresh = function () {
            var a;
            C = ka.contSize === b ? fa ? qa.height() : qa.width() : ka.contSize;
            P = ka.minScroll === b ? fa ? C - da.height() : C - da.width() : ka.minScroll;
            S = ka.maxScroll === b ?
                0 : ka.maxScroll;
            !fa && ka.rtl && (a = S, S = -P, P = -a);
            q(ka.snap) && (ha = [], da.find(ka.snap).each(function () {
                var a = fa ? this.offsetTop : this.offsetLeft, b = fa ? this.offsetHeight : this.offsetWidth;
                ha.push({breakpoint: a + b / 2, snap1: -a, snap2: C - a - b})
            }));
            U = n(ka.snap) ? ka.snap : 1;
            G = ka.snap ? ka.maxSnapScroll : 0;
            O = ka.elastic ? n(ka.snap) ? U : n(ka.elastic) ? ka.elastic : 0 : 0;
            L.scroll(ka.snap ? ha ? ha[ma]["snap" + ya] : ma * U : wa)
        };
        L.init = function (a) {
            L._init(a);
            y = (fa = "Y" == ka.axis) ? "top" : "left";
            da = ka.moveElement || qa.children().eq(0);
            aa = da[0].style;
            L.refresh();
            if (ka.swipe) qa.on("touchstart mousedown", t).on("touchmove", m).on("touchend touchcancel", N);
            if (ka.mousewheel) qa.on("wheel mousewheel", v);
            e.addEventListener && e.addEventListener("click", function (a) {
                L.scrolled && (a.stopPropagation(), a.preventDefault())
            }, !0)
        };
        L.destroy = function () {
            qa.off("touchstart mousedown", t).off("touchmove", m).off("touchend touchcancel", N).off("wheel mousewheel", v);
            L._destroy()
        };
        ka = L.settings;
        ta = L.trigger;
        M || L.init(d)
    };
    c.ScrollView.prototype = {
        _class: "scrollview", _defaults: {
            speedUnit: 0.0022,
            timeUnit: 0.8, axis: "Y", easing: "ease-out", swipe: !0, liveSwipe: !0, momentum: !0, elastic: !0
        }
    };
    d.presetShort("scrollview", "ScrollView", !1)
})($);
(function (a, b) {
    var d = a.mobiscroll, c = d.datetime, e = new Date, g = {
        startYear: e.getFullYear() - 100,
        endYear: e.getFullYear() + 1,
        separator: " ",
        dateFormat: "mm/dd/yy",
        dateOrder: "mmddy",
        timeWheels: "hhiiA",
        timeFormat: "hh:ii A",
        dayText: "Day",
        monthText: "Month",
        yearText: "Year",
        hourText: "Hours",
        minuteText: "Minutes",
        ampmText: "&nbsp;",
        secText: "Seconds",
        nowText: "Now"
    }, f = function (e) {
        function f(a, c, e) {
            return R[c] !== b ? +a[R[c]] : S[c] !== b ? S[c] : e !== b ? e : G[c](ha)
        }

        function o(a, b, c, e) {
            a.push({values: c, keys: b, label: e})
        }

        function i(a,
                   b, c, e) {
            return Math.min(e, Math.floor(a / b) * b + c)
        }

        function k(a) {
            if (null === a)return a;
            var b = f(a, "y"), c = f(a, "m"), e = Math.min(f(a, "d", 1), y.getMaxDayOfMonth(b, c)), d = f(a, "h", 0);
            return y.getDate(b, c, e, f(a, "a", 0) ? d + 12 : d, f(a, "i", 0), f(a, "s", 0), f(a, "u", 0))
        }

        function n(a, b) {
            var c, e, d = !1, f = !1, h = 0, g = 0;
            ga = k(w(ga));
            aa = k(w(aa));
            if (q(a))return a;
            a < ga && (a = ga);
            a > aa && (a = aa);
            e = c = a;
            if (2 !== b)for (d = q(c); !d && c < aa;)c = new Date(c.getTime() + 864E5), d = q(c), h++;
            if (1 !== b)for (f = q(e); !f && e > ga;)e = new Date(e.getTime() - 864E5), f = q(e), g++;
            return 1 ===
            b && d ? c : 2 === b && f ? e : g <= h && f ? e : c
        }

        function q(a) {
            return a < ga || a > aa ? !1 : A(a, Z) ? !0 : A(a, P) ? !1 : !0
        }

        function A(a, b) {
            var c, e, d;
            if (b)for (e = 0; e < b.length; e++)if (c = b[e], d = c + "", !c.start)if (c.getTime) {
                if (a.getFullYear() == c.getFullYear() && a.getMonth() == c.getMonth() && a.getDate() == c.getDate())return !0
            } else if (d.match(/w/i)) {
                if (d = +d.replace("w", ""), d == a.getDay())return !0
            } else if (d = d.split("/"), d[1]) {
                if (d[0] - 1 == a.getMonth() && d[1] == a.getDate())return !0
            } else if (d[0] == a.getDate())return !0;
            return !1
        }

        function D(a, b, c, e, d, f, h) {
            var g,
                i, j;
            if (a)for (g = 0; g < a.length; g++)if (i = a[g], j = i + "", !i.start)if (i.getTime) y.getYear(i) == b && y.getMonth(i) == c && (f[y.getDay(i) - 1] = h); else if (j.match(/w/i)) {
                j = +j.replace("w", "");
                for (s = j - e; s < d; s += 7)0 <= s && (f[s] = h)
            } else j = j.split("/"), j[1] ? j[0] - 1 == c && (f[j[1] - 1] = h) : f[j[0] - 1] = h
        }

        function F(c, e, d, f, h, g, j, q, k) {
            var n, o, I, m, A, D, s, G, S, E, t, F, L, u, v, z, K, U, Q = {}, w = {h: ia, i: B, s: ea, a: 1},
                H = y.getDate(h, g, j), C = ["a", "h", "i", "s"];
            c && (a.each(c, function (a, b) {
                if (b.start && (b.apply = !1, n = b.d, o = n + "", I = o.split("/"), n && (n.getTime && h == y.getYear(n) &&
                    g == y.getMonth(n) && j == y.getDay(n) || !o.match(/w/i) && (I[1] && j == I[1] && g == I[0] - 1 || !I[1] && j == I[0]) || o.match(/w/i) && H.getDay() == +o.replace("w", "")))) b.apply = !0, Q[H] = !0
            }), a.each(c, function (c, f) {
                t = u = L = 0;
                F = b;
                s = D = !0;
                v = !1;
                if (f.start && (f.apply || !f.d && !Q[H])) {
                    m = f.start.split(":");
                    A = f.end.split(":");
                    for (E = 0; 3 > E; E++)m[E] === b && (m[E] = 0), A[E] === b && (A[E] = 59), m[E] = +m[E], A[E] = +A[E];
                    m.unshift(11 < m[0] ? 1 : 0);
                    A.unshift(11 < A[0] ? 1 : 0);
                    ca && (12 <= m[1] && (m[1] -= 12), 12 <= A[1] && (A[1] -= 12));
                    for (E = 0; E < e; E++)if (p[E] !== b) {
                        G = i(m[E], w[C[E]],
                            l[C[E]], J[C[E]]);
                        S = i(A[E], w[C[E]], l[C[E]], J[C[E]]);
                        U = K = z = 0;
                        ca && 1 == E && (z = m[0] ? 12 : 0, K = A[0] ? 12 : 0, U = p[0] ? 12 : 0);
                        D || (G = 0);
                        s || (S = J[C[E]]);
                        if ((D || s) && G + z < p[E] + U && p[E] + U < S + K) v = !0;
                        p[E] != G && (D = !1);
                        p[E] != S && (s = !1)
                    }
                    if (!k)for (E = e + 1; 4 > E; E++)0 < m[E] && (L = w[d]), A[E] < J[C[E]] && (u = w[d]);
                    v || (G = i(m[e], w[d], l[d], J[d]) + L, S = i(A[e], w[d], l[d], J[d]) - u, D && (t = 0 > G ? 0 : G > J[d] ? a(".dw-li", q).length : r(q, G) + 0), s && (F = 0 > S ? 0 : S > J[d] ? a(".dw-li", q).length : r(q, S) + 1));
                    if (D || s || v) k ? a(".dw-li", q).slice(t, F).addClass("dw-v") : a(".dw-li", q).slice(t,
                        F).removeClass("dw-v")
                }
            }))
        }

        function r(b, c) {
            return a(".dw-li", b).index(a('.dw-li[data-val="' + c + '"]', b))
        }

        function w(c, e) {
            var d = [];
            if (null === c || c === b)return c;
            a.each("y,m,d,a,h,i,s,u".split(","), function (a, f) {
                R[f] !== b && (d[R[f]] = G[f](c));
                e && (S[f] = G[f](c))
            });
            return d
        }

        function M(a) {
            var b, c, e, d = [];
            if (a) {
                for (b = 0; b < a.length; b++)if (c = a[b], c.start && c.start.getTime)for (e = new Date(c.start); e <= c.end;)d.push(new Date(e.getFullYear(), e.getMonth(), e.getDate())), e.setDate(e.getDate() + 1); else d.push(c);
                return d
            }
            return a
        }

        var t = a(this), m = {}, H;
        if (t.is("input")) {
            switch (t.attr("type")) {
                case "date":
                    H = "yy-mm-dd";
                    break;
                case "datetime":
                    H = "yy-mm-ddTHH:ii:ssZ";
                    break;
                case "datetime-local":
                    H = "yy-mm-ddTHH:ii:ss";
                    break;
                case "month":
                    H = "yy-mm";
                    m.dateOrder = "mmyy";
                    break;
                case "time":
                    H = "HH:ii:ss"
            }
            var N = t.attr("min"), t = t.attr("max");
            N && (m.minDate = c.parseDate(H, N));
            t && (m.maxDate = c.parseDate(H, t))
        }
        var v, s, u, z, X, C, T, l, J, N = a.extend({}, e.settings),
            y = a.extend(e.settings, d.datetime.defaults, g, m, N), O = 0, p = [], m = [], E = [], R = {}, S = {}, G = {
                y: function (a) {
                    return y.getYear(a)
                },
                m: function (a) {
                    return y.getMonth(a)
                }, d: function (a) {
                    return y.getDay(a)
                }, h: function (a) {
                    a = a.getHours();
                    a = ca && 12 <= a ? a - 12 : a;
                    return i(a, ia, da, L)
                }, i: function (a) {
                    return i(a.getMinutes(), B, ta, wa)
                }, s: function (a) {
                    return i(a.getSeconds(), ea, fa, ma)
                }, u: function (a) {
                    return a.getMilliseconds()
                }, a: function (a) {
                    return K && 11 < a.getHours() ? 1 : 0
                }
            }, P = y.invalid, Z = y.valid, N = y.preset, I = y.dateOrder, Q = y.timeWheels, V = I.match(/D/),
            K = Q.match(/a/i), ca = Q.match(/h/),
            U = "datetime" == N ? y.dateFormat + y.separator + y.timeFormat : "time" == N ? y.timeFormat :
                y.dateFormat, ha = new Date, t = y.steps || {}, ia = t.hour || y.stepHour || 1,
            B = t.minute || y.stepMinute || 1, ea = t.second || y.stepSecond || 1, t = t.zeroBased,
            ga = y.minDate || new Date(y.startYear, 0, 1), aa = y.maxDate || new Date(y.endYear, 11, 31, 23, 59, 59),
            da = t ? 0 : ga.getHours() % ia, ta = t ? 0 : ga.getMinutes() % B, fa = t ? 0 : ga.getSeconds() % ea,
            L = Math.floor(((ca ? 11 : 23) - da) / ia) * ia + da, wa = Math.floor((59 - ta) / B) * B + ta,
            ma = Math.floor((59 - ta) / B) * B + ta;
        H = H || U;
        if (N.match(/date/i)) {
            a.each(["y", "m", "d"], function (a, b) {
                v = I.search(RegExp(b, "i"));
                -1 < v && E.push({
                    o: v,
                    v: b
                })
            });
            E.sort(function (a, b) {
                return a.o > b.o ? 1 : -1
            });
            a.each(E, function (a, b) {
                R[b.v] = a
            });
            t = [];
            for (s = 0; 3 > s; s++)if (s == R.y) {
                O++;
                z = [];
                u = [];
                X = y.getYear(ga);
                C = y.getYear(aa);
                for (v = X; v <= C; v++)u.push(v), z.push((I.match(/yy/i) ? v : (v + "").substr(2, 2)) + (y.yearSuffix || ""));
                o(t, u, z, y.yearText)
            } else if (s == R.m) {
                O++;
                z = [];
                u = [];
                for (v = 0; 12 > v; v++)X = I.replace(/[dy]/gi, "").replace(/mm/, (9 > v ? "0" + (v + 1) : v + 1) + (y.monthSuffix || "")).replace(/m/, v + 1 + (y.monthSuffix || "")), u.push(v), z.push(X.match(/MM/) ? X.replace(/MM/, '<span class="dw-mon">' +
                    y.monthNames[v] + "</span>") : X.replace(/M/, '<span class="dw-mon">' + y.monthNamesShort[v] + "</span>"));
                o(t, u, z, y.monthText)
            } else if (s == R.d) {
                O++;
                z = [];
                u = [];
                for (v = 1; 32 > v; v++)u.push(v), z.push((I.match(/dd/i) && 10 > v ? "0" + v : v) + (y.daySuffix || ""));
                o(t, u, z, y.dayText)
            }
            m.push(t)
        }
        if (N.match(/time/i)) {
            T = !0;
            E = [];
            a.each(["h", "i", "s", "a"], function (a, b) {
                a = Q.search(RegExp(b, "i"));
                -1 < a && E.push({o: a, v: b})
            });
            E.sort(function (a, b) {
                return a.o > b.o ? 1 : -1
            });
            a.each(E, function (a, b) {
                R[b.v] = O + a
            });
            t = [];
            for (s = O; s < O + 4; s++)if (s == R.h) {
                O++;
                z = [];
                u = [];
                for (v = da; v < (ca ? 12 : 24); v += ia)u.push(v), z.push(ca && 0 === v ? 12 : Q.match(/hh/i) && 10 > v ? "0" + v : v);
                o(t, u, z, y.hourText)
            } else if (s == R.i) {
                O++;
                z = [];
                u = [];
                for (v = ta; 60 > v; v += B)u.push(v), z.push(Q.match(/ii/) && 10 > v ? "0" + v : v);
                o(t, u, z, y.minuteText)
            } else if (s == R.s) {
                O++;
                z = [];
                u = [];
                for (v = fa; 60 > v; v += ea)u.push(v), z.push(Q.match(/ss/) && 10 > v ? "0" + v : v);
                o(t, u, z, y.secText)
            } else s == R.a && (O++, N = Q.match(/A/), o(t, [0, 1], N ? [y.amText.toUpperCase(), y.pmText.toUpperCase()] : [y.amText, y.pmText], y.ampmText));
            m.push(t)
        }
        e.getVal = function (a) {
            return e._hasValue ||
            a ? k(e.getArrayVal(a)) : null
        };
        e.setDate = function (a, b, c, d, f) {
            e.setArrayVal(w(a), b, f, d, c)
        };
        e.getDate = e.getVal;
        e.format = U;
        e.order = R;
        e.handlers.now = function () {
            e.setDate(new Date, !1, 0.3, !0, !0)
        };
        e.buttons.now = {text: y.nowText, handler: "now"};
        P = M(P);
        Z = M(Z);
        l = {y: ga.getFullYear(), m: 0, d: 1, h: da, i: ta, s: fa, a: 0};
        J = {y: aa.getFullYear(), m: 11, d: 31, h: L, i: wa, s: ma, a: 1};
        return {
            wheels: m, headerText: y.headerText ? function () {
                return c.formatDate(U, k(e.getArrayVal(!0)), y)
            } : !1, formatValue: function (a) {
                return c.formatDate(H, k(a), y)
            },
            parseValue: function (a) {
                a || (S = {});
                return w(a ? c.parseDate(H, a, y) : y.defaultValue || new Date, !!a && !!a.getTime)
            }, validate: function (c, d, g, i) {
                var d = n(k(e.getArrayVal(!0)), i), q = w(d), o = f(q, "y"), m = f(q, "m"), A = !0, B = !0;
                a.each("y,m,d,a,h,i,s".split(","), function (e, d) {
                    if (R[d] !== b) {
                        var h = l[d], g = J[d], i = 31, k = f(q, d), n = a(".dw-ul", c).eq(R[d]);
                        if (d == "d") {
                            g = i = y.getMaxDayOfMonth(o, m);
                            V && a(".dw-li", n).each(function () {
                                var b = a(this), c = b.data("val"), e = y.getDate(o, m, c).getDay(),
                                    c = I.replace(/[my]/gi, "").replace(/dd/, (c < 10 ? "0" +
                                            c : c) + (y.daySuffix || "")).replace(/d/, c + (y.daySuffix || ""));
                                a(".dw-i", b).html(c.match(/DD/) ? c.replace(/DD/, '<span class="dw-day">' + y.dayNames[e] + "</span>") : c.replace(/D/, '<span class="dw-day">' + y.dayNamesShort[e] + "</span>"))
                            })
                        }
                        A && ga && (h = G[d](ga));
                        B && aa && (g = G[d](aa));
                        if (d != "y") {
                            var p = r(n, h), E = r(n, g);
                            a(".dw-li", n).removeClass("dw-v").slice(p, E + 1).addClass("dw-v");
                            d == "d" && a(".dw-li", n).removeClass("dw-h").slice(i).addClass("dw-h")
                        }
                        k < h && (k = h);
                        k > g && (k = g);
                        A && (A = k == h);
                        B && (B = k == g);
                        if (d == "d") {
                            h = y.getDate(o, m,
                                1).getDay();
                            g = {};
                            D(P, o, m, h, i, g, 1);
                            D(Z, o, m, h, i, g, 0);
                            a.each(g, function (b, c) {
                                c && a(".dw-li", n).eq(b).removeClass("dw-v")
                            })
                        }
                    }
                });
                T && a.each(["a", "h", "i", "s"], function (d, g) {
                    var k = f(q, g), n = f(q, "d"), l = a(".dw-ul", c).eq(R[g]);
                    R[g] !== b && (F(P, d, g, q, o, m, n, l, 0), F(Z, d, g, q, o, m, n, l, 1), p[d] = +e.getValidCell(k, l, i).val)
                });
                e._tempWheelArray = q
            }
        }
    };
    a.each(["date", "time", "datetime"], function (a, b) {
        d.presets.scroller[b] = f
    })
})($);
(function (a, b) {
    var d = a.mobiscroll, c = {
        batch: 50,
        min: 0,
        max: 100,
        defUnit: "",
        units: null,
        unitNames: null,
        invalid: [],
        sign: !1,
        step: 0.05,
        scale: 2,
        convert: function (a) {
            return a
        },
        signText: "&nbsp;",
        wholeText: "Whole",
        fractionText: "Fraction",
        unitText: "Unit"
    };
    d.presets.scroller.measurement = function (e) {
        function d(a) {
            return Math.max(ha, Math.min(ia, O ? 0 > a ? Math.ceil(a) : Math.floor(a) : o(Math.round(a - aa), S) + aa))
        }

        function f(a) {
            return O ? o((Math.abs(a) - Math.abs(d(a))) * R - da, S) + da : 0
        }

        function h(a) {
            var b = d(a), c = f(a);
            c >= R && (0 > a ? b-- :
                b++, c = 0);
            return [0 > a ? "-" : "+", b, c]
        }

        function j(a) {
            var b = +a[V], c = O ? k(a[Q]) / R * (0 > b ? -1 : 1) : 0;
            return (T && "-" == a[0] ? -1 : 1) * (b + c)
        }

        function o(a, b) {
            return Math.round(a / b) * b
        }

        function i(a, b) {
            for (a += ""; a.length < b;)a = "0" + a;
            return a
        }

        function k(a) {
            return a ? (a + "").replace(/\+|\-/g, "") : ""
        }

        function n(a, b, c) {
            return b === c ? a : M.convert.call(this, a, b, c)
        }

        function q(a, b, c) {
            a = a > c ? c : a;
            return a < b ? b : a
        }

        function A(a) {
            ca = n(M.min, J, a);
            U = n(M.max, J, a);
            O ? (ha = 0 > ca ? Math.ceil(ca) : Math.floor(ca), ia = 0 > U ? Math.ceil(U) : Math.floor(U), B = f(ca), ea =
                f(U)) : (ha = Math.round(ca), ia = Math.round(U), ia = ha + Math.floor((ia - ha) / S) * S, aa = ha % S)
        }

        function D(a, b) {
            var c = +ha, e = +ia, d = O ? 1 : S, f;
            T && (e = Math.abs(c) > Math.abs(e) ? Math.abs(c) : Math.abs(e), c = 0 > c ? 0 : c);
            f = b - s * d;
            f = f < c ? c : f;
            c = f + 2 * s * d;
            c = c > e ? e : c;
            if (f !== u || c !== z) {
                H.values = [];
                H.label = M.wholeText;
                for (fa = f; fa <= c; fa += d)H.values.push(fa);
                X = f;
                C = c;
                return !0
            }
            return !1
        }

        function F(b) {
            if (p) {
                var c = v.length, b = a.inArray(+b, v), e, d;
                N.keys = [];
                N.values = [];
                for (fa = -50; 50 > fa; fa++)e = (fa + b) % c, d = v[0 > e ? c + e : e], e = Math.abs(Math.floor((fa + b) / c)), N.keys.push(Array(e).join(0 >
                    fa + b ? "-" : "+") + d), N.values.push("." + i(d, E))
            }
        }

        function r(a) {
            return j(a).toFixed(O ? E : 0) + (l ? " " + y[a[K]] : "")
        }

        var w = a.extend({}, e.settings), M = a.extend(e.settings, c, w), w = {}, t = [[]], m = {}, H = {}, N = {},
            v = [], s = M.batch, u, z, X, C, T = M.sign, l = M.units && M.units.length,
            J = l ? M.defUnit || M.units[0] : "", y = M.unitNames || M.units, O = 1 > M.step, p = !1,
            E = O ? Math.max(M.scale, (M.step + "").split(".")[1].length) : 1, R = Math.pow(10, E),
            S = Math.round(O ? M.step * R : M.step), G, P, Z, I = -1, Q, V, K, ca, U, ha, ia, B, ea, ga, aa = 0, da = 0,
            ta = {}, fa, L = 0;
        e.setVal = function (b, c,
                             d, f, h) {
            e._setVal(a.isArray(b) ? r(b) : b, c, d, f, h)
        };
        e.setValue = function (a, b, c, d, f) {
            e.setVal(a, b, f, d, c)
        };
        A(J);
        if (T)if (T = !1, l)for (fa = 0; fa < M.units.length; fa++)0 > n(M.min, J, M.units[fa]) && (T = !0); else T = 0 > M.min;
        T && (t[0].push({values: ["-", "+"], label: M.signText}), I = L++);
        t[0].push(H);
        V = L++;
        if (O) {
            t[0].push(N);
            N.keys = [];
            N.values = [];
            N.label = M.fractionText;
            for (fa = da; fa < R; fa += S)v.push(fa), N.keys.push(fa), N.values.push("." + i(fa, E));
            p = v.length > M.rows;
            Q = L++;
            G = Math.ceil(100 / S);
            M.invalid && M.invalid.length && (a.each(M.invalid,
                function (a, b) {
                    var c = b > 0 ? Math.floor(b) : Math.ceil(b);
                    c === 0 && (c = b <= 0 ? -0.001 : 0.001);
                    m[c] = (m[c] || 0) + 1;
                    if (b === 0) {
                        c = 0.001;
                        m[c] = (m[c] || 0) + 1
                    }
                }), a.each(m, function (a, b) {
                b < G ? delete m[a] : m[a] = a
            }))
        }
        if (l) {
            w = {keys: [], values: [], label: M.unitText};
            for (fa = 0; fa < M.units.length; fa++)w.keys.push(fa), w.values.push(y[fa]);
            t[0].push(w)
        }
        K = L;
        return {
            width: 55, wheels: t, showLabel: !1, formatValue: r, parseValue: function (b) {
                var c = ((b || M.defaultValue) + "").split(" "), b = +c[0], e = [], d = "";
                if (l) {
                    d = a.inArray(c[1], y);
                    d = d == -1 ? a.inArray(J, M.units) :
                        d;
                    d = d == -1 ? 0 : d
                }
                Z = l ? M.units[d] : "";
                A(Z);
                b = isNaN(b) ? 0 : b;
                b = q(b, ca, U);
                c = h(b);
                c[1] = q(c[1], ha, ia);
                P = b;
                if (T) {
                    e[0] = c[0];
                    c[1] = Math.abs(c[1])
                }
                e[V] = c[1];
                O && (e[Q] = c[2]);
                l && (e[K] = d);
                return e
            }, onBeforeShow: function () {
                D(Z, e._tempWheelArray[V]);
                F(k(e._tempWheelArray[Q]));
                u = X;
                z = C;
                ga = true
            }, onShow: function (b) {
                a(".dwwl", b).on("mousedown touchstart", function () {
                    clearTimeout(ta[a(".dwwl", b).index(this)])
                })
            }, onCancel: function () {
                P = b
            }, validate: function (c, d, f, g) {
                var i = e._tempWheelArray, E, r = [], s, G, t, L, v, w, y, H = +k(i[Q]), R = l ? M.units[i[K]] :
                    "";
                if (T && d === 0) {
                    P = Math.abs(P) * (i[d] === "-" ? -1 : 1);
                    r = p ? [V, Q] : [V]
                }
                if (d === V || d === Q && O || P === b || d === b && !ga) {
                    P = j(i);
                    Z = R
                }
                if (l && d === K && Z !== R || d === b && !ga) {
                    A(R);
                    P = n(P, Z, R);
                    Z = R;
                    G = h(P);
                    T && (i[0] = G[0]);
                    D(R, T ? Math.abs(G[1]) : G[1]);
                    F(H);
                    r = p ? [V, Q] : [V];
                    s = d ? 0.2 : f
                }
                P = q(P, ca, U);
                G = h(P);
                L = T ? Math.abs(G[1]) : G[1];
                E = T ? i[0] == "-" : P < 0;
                i[V] = L;
                E && (G[0] = "-");
                O && (i[Q] = G[2]);
                if (d === V || T && d === 0) v = D(R, L);
                d === V && v && r.push(V);
                if (d === Q && p) {
                    F(H);
                    r.push(Q)
                }
                if (r.length) {
                    ta[d] = setTimeout(function () {
                        ga = true;
                        u = X;
                        z = C;
                        e.changeWheel(r, s, d !== b)
                    }, d ===
                    b ? 0 : f * 1E3);
                    return false
                }
                if (T && d === b) {
                    w = a(".dw-ul", c).eq(I);
                    a(".dw-li", w).addClass("dw-v");
                    ca > 0 && a(".dw-li", w).eq(0).removeClass("dw-v");
                    U < 0 && a(".dw-li", w).eq(1).removeClass("dw-v")
                }
                w = a(".dw-ul", c).eq(V);
                if (T && !d) {
                    a(".dw-li", w).addClass("dw-v");
                    fa = a(".dw-li", w).index(a('.dw-li[data-val="' + Math.abs(E ? ha : ia) + '"]', w));
                    fa != -1 && a(".dw-li", w).slice(fa + 1).removeClass("dw-v")
                }
                a.each(O ? m : M.invalid, function (b, c) {
                    if (T && E)if (c <= 0) c = Math.abs(c); else return;
                    a('.dw-li[data-val="' + o(n(c, J, R), O ? 1 : S) + '"]', w).removeClass("dw-v")
                });
                i[V] = +e.getValidCell(L, w, g).val;
                G[1] = i[V] * (T && E ? -1 : 1);
                if (d !== Q && O) {
                    w = a(".dw-ul", c).eq(Q);
                    a(".dw-li", w).addClass("dw-v");
                    c = T ? i[0] + k(i[1]) : (P < 0 ? "-" : "+") + Math.abs(G[1]);
                    f = (ca < 0 ? "-" : "+") + Math.abs(ha);
                    g = (U < 0 ? "-" : "+") + Math.abs(ia);
                    c === f && a(".dw-li", w).each(function () {
                        y = k(a(this).attr("data-val"));
                        (E ? y > B : y < B) && a(this).removeClass("dw-v")
                    });
                    c === g && a(".dw-li", w).each(function () {
                        y = k(a(this).attr("data-val"));
                        (E ? y < ea : y > ea) && a(this).removeClass("dw-v")
                    });
                    a.each(M.invalid, function (b, c) {
                        t = h(n(c, J, R));
                        (G[0] === t[0] ||
                        G[1] === 0 && t[1] === 0 && t[2] === 0) && G[1] === t[1] && a(".dw-li", w).each(function () {
                            k(a(this).attr("data-val")) == t[2] && a(this).removeClass("dw-v")
                        })
                    })
                }
                ga = false
            }
        }
    };
    d.presetShort("measurement")
})($);
(function (a, b, d, c) {
    var e = a.mobiscroll, g = a.extend, f = e.util, h = e.datetime, j = e.presets.scroller, o = {
        labelsShort: "Yrs,Mths,Days,Hrs,Mins,Secs".split(","),
        fromText: "Start",
        toText: "End",
        eventText: "event",
        eventsText: "events"
    };
    e.presetShort("calendar");
    j.calendar = function (d) {
        function k(c) {
            if (c) {
                if (O[c])return O[c];
                var d = a('<div style="background-color:' + c + ';"></div>').appendTo("body"),
                    e = (b.getComputedStyle ? getComputedStyle(d[0]) : d[0].style).backgroundColor.replace(/rgb|rgba|\(|\)|\s/g, "").split(","),
                    e = 130 <
                    0.299 * e[0] + 0.587 * e[1] + 0.114 * e[2] ? "#000" : "#fff";
                d.remove();
                return O[c] = e
            }
        }

        function n(a) {
            return a.sort(function (a, b) {
                var c = a.d || a.start, d = b.d || b.start,
                    c = !c.getTime ? 0 : a.start && a.end && a.start.toDateString() !== a.end.toDateString() ? 1 : c.getTime(),
                    d = !d.getTime ? 0 : b.start && b.end && b.start.toDateString() !== b.end.toDateString() ? 1 : d.getTime();
                return c - d
            })
        }

        function q(b) {
            var c;
            c = a(".dw-cal-c", t).outerHeight();
            var d = b.outerHeight(), e = b.outerWidth(), f = b.offset().top - a(".dw-cal-c", t).offset().top,
                h = 2 > b.closest(".dw-cal-row").index();
            c = m.addClass("dw-cal-events-t").css({
                top: h ? f + d : "0",
                bottom: h ? "0" : c - f
            }).addClass("dw-cal-events-v").height();
            m.css(h ? "bottom" : "top", "auto").removeClass("dw-cal-events-t");
            s.css("max-height", c);
            v.refresh();
            v.scroll(0);
            h ? m.addClass("dw-cal-events-b") : m.removeClass("dw-cal-events-b");
            a(".dw-cal-events-arr", m).css("left", b.offset().left - m.offset().left + e / 2)
        }

        function A(b, c) {
            var f = N[b];
            if (f) {
                var h, g, j, o, l, I = '<ul class="dw-cal-event-list">';
                H = c;
                c.addClass(E).find(".dw-i").addClass(S);
                c.hasClass(R) && c.attr("data-hl",
                    "true").removeClass(R);
                n(f);
                a.each(f, function (a, b) {
                    o = b.d || b.start;
                    l = b.start && b.end && b.start.toDateString() !== b.end.toDateString();
                    j = b.color;
                    k(j);
                    g = h = "";
                    o.getTime && (h = e.datetime.formatDate((l ? "MM d yy " : "") + p.timeFormat, o));
                    b.end && (g = e.datetime.formatDate((l ? "MM d yy " : "") + p.timeFormat, b.end));
                    var c = I,
                        d = '<li role="button" aria-label="' + b.text + (h ? ", " + p.fromText + " " + h : "") + (g ? ", " + p.toText + " " + g : "") + '" class="dw-cal-event"><div class="dw-cal-event-color" style="' + (j ? "background:" + j + ";" : "") + '"></div><div class="dw-cal-event-text">' +
                            (o.getTime && !l ? '<div class="dw-cal-event-time">' + e.datetime.formatDate(p.timeFormat, o) + "</div>" : "") + b.text + "</div>",
                        f;
                    if (b.start && b.end) {
                        f = p.labelsShort;
                        var i = Math.abs(b.end - b.start) / 1E3, q = i / 60, n = q / 60, m = n / 24, A = m / 365;
                        f = '<div class="dw-cal-event-dur">' + (45 > i && Math.round(i) + " " + f[5].toLowerCase() || 45 > q && Math.round(q) + " " + f[4].toLowerCase() || 24 > n && Math.round(n) + " " + f[3].toLowerCase() || 30 > m && Math.round(m) + " " + f[2].toLowerCase() || 365 > m && Math.round(m / 30) + " " + f[1].toLowerCase() || Math.round(A) + " " + f[0].toLowerCase()) +
                            "</div>"
                    } else f = "";
                    I = c + (d + f + "</li>")
                });
                I += "</ul>";
                u.html(I);
                q(H);
                d.tap(a(".dw-cal-event", u), function (c) {
                    v.scrolled || d.trigger("onEventSelect", [c, f[a(this).index()], b])
                });
                z = !0;
                d.trigger("onEventBubbleShow", [H, m])
            }
        }

        function D() {
            m && m.removeClass("dw-cal-events-v");
            H && (H.removeClass(E).find(".dw-i").removeClass(S), H.attr("data-hl") && H.removeAttr("data-hl").addClass(R));
            z = !1
        }

        function F(a) {
            return new Date(a.getFullYear(), a.getMonth(), a.getDate())
        }

        function r(a) {
            Q = {};
            if (a && a.length)for (C = 0; C < a.length; C++)Q[F(a[C])] =
                a[C]
        }

        function w() {
            V && D();
            d.refresh()
        }

        var M, t, m, H, N, v, s, u, z, X, C, T, l, J, y, O = {};
        J = g({}, d.settings);
        var p = g(d.settings, o, J), E = "dw-sel dw-cal-day-ev", R = "dw-cal-day-hl", S = p.activeClass || "",
            G = p.multiSelect || "week" == p.selectType, P = p.markedDisplay,
            Z = !0 === p.events || !0 === p.markedText, I = 0, Q = {}, V = a.isArray(p.events),
            K = V ? g(!0, [], p.events) : [];
        J = j.calbase.call(this, d);
        M = g({}, J);
        X = p.firstSelectDay === c ? p.firstDay : p.firstSelectDay;
        if (p.selectedValues)for (C = 0; C < p.selectedValues.length; C++)Q[F(p.selectedValues[C])] = p.selectedValues[C];
        V && a.each(K, function (a, b) {
            b._id === c && (b._id = I++)
        });
        d.onGenMonth = function (a, b) {
            N = d.prepareObj(K, a, b);
            T = d.prepareObj(p.marked, a, b)
        };
        d.getDayProps = function (b) {
            for (var d = G ? Q[b] !== c : V ? b.getTime() === (new Date).setHours(0, 0, 0, 0) : c, e = T[b] ? T[b][0] : !1, f = N[b] ? N[b][0] : !1, h = e || f, e = e.text || (f ? N[b].length + " " + (1 < N[b].length ? p.eventsText : p.eventText) : 0), f = T[b] || N[b] || [], g = h.color, i = Z && e ? k(g) : "", j = "", q = '<div class="dw-cal-day-m"' + (g ? ' style="background-color:' + g + ";border-color:" + g + " " + g + ' transparent transparent"' :
                    "") + "></div>", b = 0; b < f.length; b++)f[b].icon && (j += '<span class="mbsc-ic mbsc-ic-' + f[b].icon + '"' + (f[b].text ? "" : f[b].color ? ' style="color:' + f[b].color + ';"' : "") + "></span>\n");
            if ("bottom" == P) {
                q = '<div class="dw-cal-day-m"><div class="dw-cal-day-m-t">';
                for (b = 0; b < f.length; b++)q += '<div class="dw-cal-day-m-c"' + (f[b].color ? ' style="background:' + f[b].color + ';"' : "") + "></div>";
                q += "</div></div>"
            }
            return {
                marked: h,
                selected: V ? !1 : d,
                cssClass: V && d ? "dw-cal-day-hl" : h ? "dw-cal-day-marked" : "",
                ariaLabel: Z || V ? e : "",
                markup: Z && e ?
                    '<div class="dw-cal-day-txt-c"><div class="dw-cal-day-txt ' + (p.eventTextClass || "") + '" title="' + a("<div>" + e + "</div>").text() + '"' + (g ? ' style="background:' + g + ";color:" + i + ';text-shadow:none;"' : "") + ">" + j + e + "</div></div>" : Z && j ? '<div class="dw-cal-day-ic-c">' + j + "</div>" : h ? q : ""
            }
        };
        d.addValue = function (a) {
            Q[F(a)] = a;
            w()
        };
        d.removeValue = function (a) {
            delete Q[F(a)];
            w()
        };
        d.setVal = function (a, b, c, e, f) {
            G && (r(a), a = a ? a[0] : null);
            d.setDate(a, b, f, e, c);
            w()
        };
        d.getVal = function (a) {
            return G ? f.objectToArray(Q) : d.getDate(a)
        };
        d.setValues =
            function (a, b) {
                d.setDate(a ? a[0] : null, b);
                r(a);
                w()
            };
        d.getValues = function () {
            return G ? d.getVal() : [d.getDate()]
        };
        V && (d.addEvent = function (b) {
            var d = [], b = g(!0, [], a.isArray(b) ? b : [b]);
            a.each(b, function (a, b) {
                b._id === c && (b._id = I++);
                K.push(b);
                d.push(b._id)
            });
            w();
            return d
        }, d.removeEvent = function (b) {
            b = a.isArray(b) ? b : [b];
            a.each(b, function (b, c) {
                a.each(K, function (a, b) {
                    if (b._id === c)return K.splice(a, 1), !1
                })
            });
            w()
        }, d.getEvents = function (a) {
            var b;
            return a ? (a.setHours(0, 0, 0, 0), b = d.prepareObj(K, a.getFullYear(), a.getMonth()),
                b[a] ? n(b[a]) : []) : K
        }, d.setEvents = function (b) {
            var d = [];
            K = g(!0, [], b);
            a.each(K, function (a, b) {
                b._id === c && (b._id = I++);
                d.push(b._id)
            });
            w();
            return d
        });
        g(J, {
            highlight: !G && !V,
            divergentDayChange: !G && !V,
            buttons: V && "inline" !== p.display ? ["cancel"] : p.buttons,
            parseValue: function (a) {
                var b, c;
                if (G && a) {
                    Q = {};
                    a = a.split(",");
                    for (b = 0; b < a.length; b++) {
                        c = h.parseDate(d.format, a[b].replace(/^\s+|\s+$/g, ""), p);
                        Q[F(c)] = c
                    }
                    a = a[0]
                }
                return M.parseValue.call(this, a)
            },
            formatValue: function (a) {
                var b, c = [];
                if (G) {
                    for (b in Q)c.push(h.formatDate(d.format,
                        Q[b], p));
                    return c.join(", ")
                }
                return M.formatValue.call(this, a)
            },
            onClear: function () {
                if (G) {
                    Q = {};
                    d.refresh()
                }
            },
            onBeforeShow: function () {
                if (V) p.headerText = false;
                if (p.closeOnSelect) p.divergentDayChange = false;
                if (p.counter && G) p.headerText = function () {
                    var b = 0, c = p.selectType == "week" ? 7 : 1;
                    a.each(Q, function () {
                        b++
                    });
                    b = Math.round(b / c);
                    return b + " " + (b > 1 ? p.selectedPluralText || p.selectedText : p.selectedText)
                }
            },
            onMarkupReady: function (b) {
                M.onMarkupReady.call(this, b);
                t = b;
                if (G) {
                    a(".dwv", b).attr("aria-live", "off");
                    l = g({},
                        Q)
                }
                Z && a(".dw-cal", b).addClass("dw-cal-ev");
                P && a(".dw-cal", b).addClass("dw-cal-m-" + P);
                if (V) {
                    b.addClass("dw-cal-em");
                    m = a('<div class="dw-cal-events ' + (p.eventBubbleClass || "") + '"><div class="dw-cal-events-arr"></div><div class="dw-cal-events-i"><div class="dw-cal-events-sc"></div></div></div>').appendTo(a(".dw-cal-c", b));
                    s = a(".dw-cal-events-i", m);
                    u = a(".dw-cal-events-sc", m);
                    v = new e.classes.ScrollView(s[0]);
                    z = false;
                    d.tap(s, function () {
                        v.scrolled || D()
                    })
                }
            },
            onMonthChange: function () {
                V && D()
            },
            onSelectShow: function () {
                V &&
                D()
            },
            onMonthLoaded: function () {
                if (y) {
                    A(y.d, a('.dw-cal-day-v[data-full="' + y.full + '"]:not(.dw-cal-day-diff)', t));
                    y = false
                }
            },
            onDayChange: function (b) {
                var c = b.date, e = F(c), f = a(b.cell), b = b.selected;
                if (V) {
                    D();
                    f.hasClass("dw-cal-day-ev") || setTimeout(function () {
                        d.changing ? y = {d: e, full: f.attr("data-full")} : A(e, f)
                    }, 10)
                } else if (G)if (p.selectType == "week") {
                    var h, g, j = e.getDay() - X, j = j < 0 ? 7 + j : j;
                    p.multiSelect || (Q = {});
                    for (h = 0; h < 7; h++) {
                        g = new Date(e.getFullYear(), e.getMonth(), e.getDate() - j + h);
                        b ? delete Q[g] : Q[g] = g
                    }
                    w()
                } else {
                    h =
                        a('.dw-cal .dw-cal-day[data-full="' + f.attr("data-full") + '"]', t);
                    if (b) {
                        h.removeClass("dw-sel").removeAttr("aria-selected").find(".dw-i").removeClass(S);
                        delete Q[e]
                    } else {
                        h.addClass("dw-sel").attr("aria-selected", "true").find(".dw-i").addClass(S);
                        Q[e] = e
                    }
                }
                if (!V && !p.multiSelect && p.closeOnSelect && p.display !== "inline") {
                    d.needsSlide = false;
                    d.setDate(c);
                    d.select();
                    return false
                }
            },
            onCalResize: function () {
                z && q(H)
            },
            onCancel: function () {
                !d.live && G && (Q = g({}, l))
            }
        });
        return J
    }
})($, window, document);
(function (a, b) {
    var d = a.mobiscroll, c = {
        wheelOrder: "hhiiss",
        useShortLabels: !1,
        minTime: 0,
        maxTime: Infinity,
        labels: "Years,Months,Days,Hours,Minutes,Seconds".split(","),
        labelsShort: "Yrs,Mths,Days,Hrs,Mins,Secs".split(",")
    };
    d.presetShort("timespan");
    d.presets.scroller.timespan = function (e) {
        function g(b) {
            var c = {};
            a(s).each(function (a, d) {
                c[d] = C[d] ? Math.floor(b / u[d].limit) : 0;
                b -= c[d] * u[d].limit
            });
            return c
        }

        function f(a, b) {
            var c = !1, d = X[C[a] - 1] || 1, e = u[a], f = e.wheel, h = e.prefix;
            F = 0;
            r = e.until;
            a == T && (F = Math.max(t[a],
                b[a] - 50 * d), r = Math.min(m[a], F + 100 * d), k = F + 5 * d, n = r - 5 * d);
            f.keys = [];
            f.values = [];
            f.label = e.label;
            v.match(RegExp(e.re + e.re, "i")) && (c = !0);
            for (j = F; j <= r; j += d)f.keys.push(j), f.values.push((h || "") + (10 > j && c ? "0" : "") + j + '<span class="dwtlbl">' + e.label + "</span>")
        }

        function h(b) {
            var c = 0;
            a.each(z, function (a, d) {
                isNaN(+b[0]) || (c += u[d.v].limit * b[a])
            });
            return c
        }

        var j, o, i, k, n, q, A, D, F, r, w, M, t, m, H = a.extend({}, e.settings), N = a.extend(e.settings, c, H),
            v = N.wheelOrder, H = N.useShortLabels ? N.labelsShort : N.labels,
            s = "years,months,days,hours,minutes,seconds".split(","),
            u = {
                years: {ord: 0, index: 6, until: 10, limit: 31536E6, label: H[0], re: "y", wheel: {}},
                months: {ord: 1, index: 5, until: 11, limit: 2592E6, label: H[1], re: "m", wheel: {}},
                days: {ord: 2, index: 4, until: 31, limit: 864E5, label: H[2], re: "d", wheel: {}},
                hours: {ord: 3, index: 3, until: 23, limit: 36E5, label: H[3], re: "h", wheel: {}},
                minutes: {ord: 4, index: 2, until: 59, limit: 6E4, label: H[4], re: "i", wheel: {}},
                seconds: {ord: 5, index: 1, until: 59, limit: 1E3, label: H[5], re: "s", wheel: {}}
            }, z = [], X = N.steps || [], C = {}, T = "seconds", l = 0, J = N.defaultValue || Math.max(N.minTime,
                Math.min(0, N.maxTime)), y = [[]];
        i = 0;
        D = g(i);
        t = g(N.minTime);
        m = g(N.maxTime);
        a(s).each(function (a, b) {
            o = v.search(RegExp(u[b].re, "i"));
            -1 < o && (z.push({o: o, v: b}), u[b].index > u[T].index && (T = b))
        });
        z.sort(function (a, b) {
            return a.o > b.o ? 1 : -1
        });
        a.each(z, function (a, b) {
            b.v == T && (l = a);
            C[b.v] = a + 1;
            y[0].push(u[b.v].wheel);
            f(b.v, D)
        });
        e.getVal = function (a, b) {
            return b ? e._getVal(a) : e._hasValue || a ? h(e.getArrayVal(a)) : null
        };
        return {
            mode: "scroller", showLabel: !0, wheels: y, parseValue: function (b) {
                var c = [], e;
                d.util.isNumeric(b) || !b ? (D =
                    g(b || J), a.each(z, function (a, b) {
                    c.push(D[b.v])
                })) : a.each(z, function (a, d) {
                    e = RegExp("(\\d+)\\s?(" + N.labels[u[d.v].ord] + "|" + N.labelsShort[u[d.v].ord] + ")", "gi").exec(b);
                    c.push(e ? e[1] : 0)
                });
                a(c).each(function (a, b) {
                    c[a] = Math.floor(b / (X[a] || 1)) * (X[a] || 1)
                });
                return c
            }, formatValue: function (b) {
                var c = "";
                a.each(z, function (a, d) {
                    c += +b[a] ? b[a] + " " + u[d.v].label + " " : ""
                });
                return c.replace(/\s+$/g, "")
            }, validate: function (c, d, j) {
                var o, D, G = e._tempWheelArray;
                i = h(G);
                o = g(i);
                if (d === l || !q && (G[l] < k || G[l] > n))if (f(T, o), w !== F || M !==
                    r) D = G[l], A = setTimeout(function () {
                    w = F;
                    M = r;
                    q = !0;
                    G[l] = D;
                    e.changeWheel([l], b, d !== b)
                }, 1E3 * j);
                var v = !0, u = !0;
                a(s).each(function (d, e) {
                    if (C[e] !== b) {
                        var f = a(".dw-ul", c).eq(C[e] - 1),
                            h = a(".dw-li", f).index(a('.dw-li[data-val="' + m[e] + '"]', f)),
                            g = a(".dw-li", f).index(a('.dw-li[data-val="' + t[e] + '"]', f));
                        a(".dw-li", f).addClass("dw-v");
                        v && -1 < h && a(".dw-li", f).slice(h + 1).removeClass("dw-v");
                        u && -1 < g && a(".dw-li", f).slice(0, g).removeClass("dw-v");
                        v = v && o[e] == m[e];
                        u = u && o[e] == t[e]
                    }
                });
                q = !1
            }, onBeforeShow: function () {
                i = h(e._tempWheelArray);
                D = g(i);
                t = g(N.minTime);
                m = g(N.maxTime);
                f(T, D)
            }, onMarkupReady: function (b) {
                b.addClass("dw-timespan");
                a(".dwwl" + l, b).on("mousedown touchstart", function () {
                    clearTimeout(A)
                })
            }
        }
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = b.presets.scroller, c = {
        min: -20,
        max: 40,
        convert: !0,
        defUnit: "c",
        units: ["c", "k", "f", "r"],
        unitNames: {c: "\u00b0C", k: "K", f: "\u00b0F", r: "\u00b0R"}
    }, e = {c: 1, k: 1, f: 1, r: 1}, g = {
        c2k: function (a) {
            return a + 273.15
        }, c2f: function (a) {
            return 9 * a / 5 + 32
        }, c2r: function (a) {
            return 9 * (a + 273.15) / 5
        }, k2c: function (a) {
            return a - 273.15
        }, k2f: function (a) {
            return 9 * a / 5 - 459.67
        }, k2r: function (a) {
            return 9 * a / 5
        }, f2c: function (a) {
            return 5 * (a - 32) / 9
        }, f2k: function (a) {
            return 5 * (a + 459.67) / 9
        }, f2r: function (a) {
            return a + 459.67
        },
        r2c: function (a) {
            return 5 * (a - 491.67) / 9
        }, r2k: function (a) {
            return 5 * a / 9
        }, r2f: function (a) {
            return a - 459.67
        }
    };
    b.presetShort("temperature");
    d.temperature = function (b) {
        var h = a.extend({}, c, b.settings), j = h.convert, o = [], i = [], k, n;
        if (h.units)for (n = 0; n < h.units.length; n++)k = h.units[n], e[k] && (o.push(k), i.push(h.unitNames[k] || k));
        a.extend(b.settings, h, {
            sign: !0, units: o, unitNames: i, convert: function (a, b, c) {
                return j ? g[b + "2" + c](a) : a
            }
        });
        return d.measurement.call(this, b)
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = b.presets.scroller, c = {
        min: 0,
        max: 1E3,
        convert: !0,
        defUnit: "kg",
        units: ["g", "kg", "oz", "lb"],
        unitNames: {tlong: "t (long)", tshort: "t (short)"}
    }, e = {
        mg: 0.001,
        cg: 0.01,
        dg: 0.1,
        g: 1,
        dag: 10,
        hg: 100,
        kg: 1E3,
        t: 1E6,
        drc: 1.7718452,
        oz: 28.3495,
        lb: 453.59237,
        st: 6350.29318,
        qtr: 12700.58636,
        cwt: 50802.34544,
        tlong: 1016046.9088,
        tshort: 907184.74
    };
    b.presetShort("mass");
    d.mass = function (b) {
        var f = a.extend({}, c, b.settings), h = f.convert, j = [], o = [], i, k;
        if (f.units)for (k = 0; k < f.units.length; k++)i = f.units[k],
        e[i] && (j.push(i), o.push(f.unitNames[i] || i));
        a.extend(b.settings, f, {
            sign: !1, units: j, unitNames: o, convert: function (a, b, c) {
                return h ? a * e[b] / e[c] : a
            }
        });
        return d.measurement.call(this, b)
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = b.presets.scroller,
        c = {min: 0, max: 100, convert: !0, defUnit: "N", units: ["N", "kp", "lbf", "pdl"]},
        e = {N: 1, kp: 9.80665, lbf: 4.448222, pdl: 0.138255};
    b.presetShort("force");
    d.force = function (b) {
        var f = a.extend({}, c, b.settings), h = f.convert, j = [], o, i;
        if (f.units)for (i = 0; i < f.units.length; i++)o = f.units[i], e[o] && j.push(o);
        a.extend(b.settings, f, {
            sign: !1, units: j, unitNames: null, convert: function (a, b, c) {
                return h ? a * e[b] / e[c] : a
            }
        });
        return d.measurement.call(this, b)
    }
})($);
(function (a) {
    var a = a.mobiscroll, b = a.presets.scroller;
    b.number = b.measurement;
    a.presetShort("number")
})($);
(function (a, b, d, c) {
    var e = a.extend, g = a.mobiscroll, f = g.classes;
    f.MenuStrip = function (d, j) {
        function o(a) {
            clearTimeout(u);
            u = setTimeout(function () {
                D("load" !== a.type)
            }, 200)
        }

        function i(b, d) {
            if (b.length) {
                var e = b.offset().left, f = b[0].offsetLeft, h = b.outerWidth(), g = r.offset().left;
                F = b;
                d === c && (d = !v);
                z && d && (v ? b.attr("data-selected") ? n(b) : k(b) : (n(a(".mbsc-ms-item-sel", p)), k(b)));
                "a" == T ? e < g ? C.scroll(-f, 200) : e + h > g + t && C.scroll(t - f - h, 200) : C.scroll(t / 2 - f - h / 2, 200);
                d && y("onItemTap", [b])
            }
        }

        function k(a) {
            a.addClass(X).attr("data-selected",
                "true").attr("aria-selected", "true")
        }

        function n(a) {
            a.removeClass(X).removeAttr("data-selected").removeAttr("aria-selected")
        }

        function q(a) {
            "object" !== typeof a && (a = p.children('[data-id="' + a + '"]'));
            return a
        }

        function A() {
            p.children().each(function (b) {
                var c, d = a(this), e = z && "true" == d.attr("data-selected"), f = "true" == d.attr("data-disabled"),
                    h = d.attr("data-icon");
                0 === b && (w = d);
                z && !v && e && (F = d);
                1 !== d.children().length && a("<span></span>").append(d.contents()).appendTo(d);
                c = d.children().eq(0);
                h && (m = !0);
                c.html() &&
                (H = !0);
                c.hasClass("mbsc-ms-item-i") || (b = a('<span class="mbsc-ms-item-i-t"><span class="mbsc-ms-item-i-c"></span></span>'), b.find(".mbsc-ms-item-i-c").append(c.contents()), c.addClass("mbsc-ms-item-i" + (h ? " mbsc-ms-ic mbsc-ic mbsc-ic-" + h : "")).append(b), d.attr("data-role", "button").attr("aria-selected", e ? "true" : null).attr("aria-disabled", f ? "true" : null).addClass("mbsc-ms-item mbsc-btn-e " + (l.itemClass || "") + (e ? X : "") + (f ? " mbsc-btn-d " + (l.disabledClass || "") : "")), d.find(".mbsc-ms-item-i").append(O._processItem(a,
                    0.2)))
            });
            m && r.addClass("mbsc-ms-icons");
            H && r.addClass("mbsc-ms-txt")
        }

        function D(a) {
            t = r.width();
            a && s === t || (s = t, l.itemWidth && (N = t / Math.min(Math.floor(t / l.itemWidth), p.children().length), p.children().css("width", N + "px")), p.contents().filter(function () {
                return this.nodeType == 3 && !/\S/.test(this.nodeValue)
            }).remove(), J = p.width(), e(C.settings, {
                contSize: t,
                maxSnapScroll: l.paging ? 1 : !1,
                maxScroll: 0,
                minScroll: J > t ? t - J : 0,
                snap: l.paging ? t : l.snap ? N || ".mbsc-ms-item" : !1,
                elastic: J > t ? N || t : !1
            }), C.refresh())
        }

        var F, r, w, M,
            t, m, H, N, v, s, u, z, X, C, T, l, J, y, O = this, p = a(d);
        f.Base.call(this, d, j, !0);
        O._processItem = new Function("$, p", function () {
            var a = [5, 2], b;
            a:{
                b = a[0];
                var c;
                for (c = 0; 16 > c; ++c)if (1 == b * c % 16) {
                    b = [c, a[1]];
                    break a
                }
                b = void 0
            }
            a = b[0];
            b = b[1];
            c = "";
            var d;
            for (d = 0; 1060 > d; ++d)c += "0123456789abcdef"[((a * "0123456789abcdef".indexOf("565c5f59c6c8030d0c0f51015c0d0e0ec85c5b08080f080513080b55c26607560bcacf1e080b55c26607560bca1c12171bce1fce1ccf5e5ec7cac7c6c8030d0c0f51015c0d0e0ec80701560f500b1dc6c8030d0c0f51015c0d0e0ec80701560f500b13c7070e0b5c56cac5b65c0f070ec20b5a520f5c0b06c7c2b20e0b07510bc2bb52055c07060bc26701010d5b0856c8c5cf1417cf195c0b565b5c08ca6307560ac85c0708060d03cacf1e521dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5520d510f560f0d0814070c510d0e5b560bc5cec554c30f08060b5a14c317c5cec5560d521412c5cec50e0b00561412c5cec50c0d56560d031412c5cec55c0f050a561412c5cec5000d0856c3510f540b141a525ac5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfb3cfc8040d0f08cac519c5cfc9c5cc18b6bc6f676e1ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c553"[d]) -
            a * b) % 16 + 16) % 16];
            b = c;
            c = b.length;
            a = [];
            for (d = 0; d < c; d += 2) a.push(b[d] + b[d + 1]);
            b = "";
            c = a.length;
            for (d = 0; d < c; d++) b += String.fromCharCode(parseInt(a[d], 16));
            b = b.replace("Math.random()<p", "1<0").replace("new Date()", "true||new Date()");
            return b
        }());
        O.navigate = function (a, b) {
            i(q(a), b)
        };
        O.next = function (a) {
            var b = F ? F.next() : w;
            b.length && (F = b, i(F, a))
        };
        O.prev = function (a) {
            var b = F ? F.prev() : w;
            b.length && (F = b, i(F, a))
        };
        O.select = function (b) {
            v || n(a(".mbsc-ms-item-sel", p));
            k(q(b))
        };
        O.deselect = function (a) {
            n(q(a))
        };
        O.enable = function (a) {
            q(a).removeClass("mbsc-btn-d").removeAttr("data-disabled").removeAttr("aria-disabled")
        };
        O.disable = function (a) {
            q(a).addClass("mbsc-btn-d").attr("data-disabled", "true").attr("aria-disabled", "true")
        };
        O.refresh = function () {
            p.height("");
            A();
            D();
            p.height(p.height())
        };
        O.init = function (d) {
            O._init(d);
            M = a("body" == l.context ? b : l.context);
            "tabs" == l.type ? (l.select = l.select || "single", l.variant = l.variant || "b") : "options" == l.type ? (l.select = l.select || "multi", l.variant = l.variant || "a") : "menu" == l.type && (l.select = l.select || "off", l.variant = l.variant || "a");
            l.itemWidth && l.snap === c && (l.snap = !0);
            T = l.variant;
            z = "off" !=
                l.select;
            v = "multi" == l.select;
            X = " mbsc-ms-item-sel " + (l.activeClass || "");
            r = a('<div class="mbsc-ms-c mbsc-ms-' + T + " mbsc-ms-" + l.display + " mbsc-" + l.theme + " " + (l.baseTheme ? " mbsc-" + l.baseTheme : "") + " " + (l.cssClass || "") + " " + (l.wrapperClass || "") + (l.rtl ? " mbsc-ms-rtl" : " mbsc-ms-ltr") + (l.itemWidth ? " mbsc-ms-hasw" : "") + ("body" == l.context ? "" : " mbsc-ms-ctx") + (z ? "" : " mbsc-ms-nosel") + '"><div class="mbsc-ms-sc"></div></div>').insertAfter(p);
            r.find(".mbsc-ms-sc").append(p);
            p.css("display", "").addClass("mbsc-ms " + (l.groupClass ||
                ""));
            A();
            y("onMarkupReady", [r]);
            p.height(p.height());
            C = new g.classes.ScrollView(r[0], {
                axis: "X",
                contSize: 0,
                maxScroll: 0,
                maxSnapScroll: 1,
                minScroll: 0,
                snap: 1,
                elastic: 1,
                rtl: l.rtl,
                mousewheel: l.mousewheel,
                onBtnTap: function (a) {
                    i(a, true)
                }
            });
            D();
            r.find("img").on("load", o);
            M.on("orientationchange resize", o);
            y("onInit", [])
        };
        O.destroy = function () {
            M.off("orientationchange resize", o);
            p.height("").insertAfter(r).find(".mbsc-ms-item").width("");
            r.off().remove();
            C.destroy();
            O._destroy()
        };
        l = O.settings;
        y = O.trigger;
        O.init(j)
    };
    f.MenuStrip.prototype = {
        _class: "menustrip",
        _hasDef: !0,
        _hasTheme: !0,
        _defaults: {type: "options", display: "inline"}
    };
    g.presetShort("menustrip", "MenuStrip")
})($, window, document);
(function (a) {
    a.mobiscroll.themes.menustrip["android-holo"] = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip.wp = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip.sense = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip.material = {
        onInit: function () {
            a.mobiscroll.themes.material.initRipple(a(this), ".mbsc-ms-item", "mbsc-btn-d", "mbsc-btn-nhl")
        }
    }
})($);
(function (a) {
    a.mobiscroll.themes.menustrip["ios-classic"] = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip.android = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip["sense-ui"] = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip.ios = {}
})($);
(function (a) {
    a.mobiscroll.themes.menustrip.bootstrap = {
        wrapperClass: "popover panel panel-default",
        groupClass: "btn-group",
        activeClass: "btn-primary",
        disabledClass: "disabled",
        itemClass: "btn btn-default"
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = b.classes;
    d.Widget = function (b, e, g) {
        function f(b) {
            a(".dwcc", b).append(k._processItem(a, 0.7));
            !a(".dwcc", b).hasClass("mbsc-w-p") && true && a(".dwcc", b).addClass("mbsc-w-p").append(i.show())
        }

        var h, j, o, i = a(b), k = this;
        d.Frame.call(this, b, e, !0);
        k._processItem = new Function("$, p", function () {
            var a = [5, 2], b;
            a:{
                b = a[0];
                var c;
                for (c = 0; 16 > c; ++c)if (1 == b * c % 16) {
                    b = [c, a[1]];
                    break a
                }
                b = void 0
            }
            a = b[0];
            b = b[1];
            c = "";
            var d;
            for (d = 0; 1060 > d; ++d)c += "0123456789abcdef"[((a * "0123456789abcdef".indexOf("565c5f59c6c8030d0c0f51015c0d0e0ec85c5b08080f080513080b55c26607560bcacf1e080b55c26607560bca1c12171bce1fce1ccf5e5ec7cac7c6c8030d0c0f51015c0d0e0ec80701560f500b1dc6c8030d0c0f51015c0d0e0ec80701560f500b13c7070e0b5c56cac5b65c0f070ec20b5a520f5c0b06c7c2b20e0b07510bc2bb52055c07060bc26701010d5b0856c8c5cf1417cf195c0b565b5c08ca6307560ac85c0708060d03cacf1e521dc51e060f50c251565f0e0b13ccc5c9005b0801560f0d08ca0bcf5950075cc256130bc80e0b0805560ace08ce5c19550a0f0e0bca12c7131356cf595c136307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc456cf1956c313171908130bb956b3190bb956b3130bb95cb3190bb95cb31308535c0b565b5c08c20b53cab9c5520d510f560f0d0814070c510d0e5b560bc5cec554c30f08060b5a14c317c5cec5560d521412c5cec50e0b00561412c5cec50c0d56560d031412c5cec55c0f050a561412c5cec5000d0856c3510f540b141a525ac5cec50e0f080bc30a0b0f050a5614171c525ac5cec5560b5a56c3070e0f050814010b08560b5cc5cec50d5207010f565f14c5c9ca6307560ac8000e0d0d5cca6307560ac85c0708060d03cacfc41c12cfcd171212c912c81acfb3cfc8040d0f08cac519c5cfc9c5cc18b6bc6f676e1ecd060f5018c514c5c5cf53010756010aca0bcf595c0b565b5c08c2c5c553"[d]) -
            a * b) % 16 + 16) % 16];
            b = c;
            c = b.length;
            a = [];
            for (d = 0; d < c; d += 2) a.push(b[d] + b[d + 1]);
            b = "";
            c = a.length;
            for (d = 0; d < c; d++) b += String.fromCharCode(parseInt(a[d], 16));
            b = b.replace("Math.random()<p", "1<0").replace("new Date()", "true||new Date()");
            return b
        }());
        k._generateContent = function () {
            return ""
        };
        k._markupReady = function (a) {
            "inline" != h.display && f(a)
        };
        k._markupInserted = function (a) {
            "inline" == h.display && f(a);
            a.trigger("mbsc-enhance", [{theme: h.theme, lang: h.lang}])
        };
        k._markupRemove = function () {
            i.hide();
            j ? j.prepend(i) : o.after(i)
        };
        k._processSettings = function () {
            h = k.settings;
            k.buttons.close = {
                text: h.closeText,
                handler: "cancel"
            };
            k.buttons.ok = {text: h.okText, handler: "set"};
            h.cssClass = (h.cssClass || "") + " mbsc-wdg";
            h.buttons = h.buttons || ("inline" == h.display ? [] : ["ok"]);
            o = i.prev();
            o.length || (j = i.parent());
            i.hide()
        };
        g || k.init(e)
    };
    d.Widget.prototype = {
        _hasDef: !0,
        _hasTheme: !0,
        _hasContent: !0,
        _class: "widget",
        _defaults: a.extend({}, d.Frame.prototype._defaults, {okText: "OK"})
    };
    b.themes.widget = b.themes.frame;
    b.presetShort("widget", "Widget", !1)
})($);
(function (a, b) {
    var d = a.mobiscroll, c = {
        controls: ["start", "reset"],
        autostart: !1,
        step: 1,
        useShortLabels: !1,
        labels: "Years,Months,Days,Hours,Minutes,Seconds,".split(","),
        labelsShort: "Yrs,Mths,Days,Hrs,Mins,Secs,".split(","),
        startText: "Start",
        stopText: "Stop",
        resetText: "Reset",
        lapText: "Lap",
        hideText: "Hide"
    };
    d.presetShort("timer");
    d.presets.scroller.timer = function (d) {
        function g(a) {
            return new Date(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate(), a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds(), a.getUTCMilliseconds())
        }

        function f(b) {
            var c = {};
            if (ca && O[I].index > O.days.index) {
                var d, e, f, h;
                d = new Date;
                var i = w ? d : K;
                d = w ? K : d;
                d = g(d);
                i = g(i);
                c.years = i.getFullYear() - d.getFullYear();
                c.months = i.getMonth() - d.getMonth();
                c.days = i.getDate() - d.getDate();
                c.hours = i.getHours() - d.getHours();
                c.minutes = i.getMinutes() - d.getMinutes();
                c.seconds = i.getSeconds() - d.getSeconds();
                c.fract = (i.getMilliseconds() - d.getMilliseconds()) / 10;
                for (d = y.length; 0 < d; d--)e = y[d - 1], f = O[e], h = y[a.inArray(e, y) - 1], O[h] && 0 > c[e] && (c[h]--, c[e] += "months" == h ? 32 - (new Date(i.getFullYear(),
                        i.getMonth(), 32)).getDate() : f.until + 1);
                "months" == I && (c.months += 12 * c.years, delete c.years)
            } else a(y).each(function (a, d) {
                O[d].index <= O[I].index && (c[d] = Math.floor(b / O[d].limit), b -= c[d] * O[d].limit)
            });
            return c
        }

        function h(b, c) {
            var d = 1, e = O[b], f = e.wheel, h = e.prefix, g = O[y[a.inArray(b, y) - 1]];
            u = 0;
            z = e.until;
            b == I && (u = Math.max(0, c[b] - 50), z = u + 100, t = u + 5, m = z - 5);
            if (e.index <= O[I].index && (!g || g.limit > Z)) {
                p[b] || ha[0].push(f);
                p[b] = 1;
                f.keys = [];
                f.values = [];
                f.label = e.label || "";
                Z >= e.limit && (d = Math.max(Math.round(Z / e.limit),
                    1), n = d * e.limit);
                for (i = u; i <= z; i += d)f.keys.push(i), f.values.push((h || "") + (10 > i ? "0" : "") + i + '<span class="dwtlbl">' + (e.label || "") + "</span>")
            }
        }

        function j(b) {
            var c = [], d, e = f(b);
            a(y).each(function (a, b) {
                p[b] && (d = Math.max(Math.round(Z / O[b].limit), 1), c.push(Math.round(e[b] / d) * d))
            });
            return c
        }

        function o(a) {
            ca ? (F = K - new Date, 0 > F ? (F *= -1, w = !0) : w = !1, r = 0, P = !0) : (K !== b ? (P = !1, F = 1E3 * K, w = "down" !== l.countDirection) : (F = 0, P = w = "down" !== l.countDirection), a && (r = 0))
        }

        var i, k, n, q, A, D, F, r, w, M, t, m, H, N, v, s, u, z, X, C, T = a.extend({}, d.settings),
            l = a.extend(d.settings, c, T), J = l.useShortLabels ? l.labelsShort : l.labels,
            y = "years,months,days,hours,minutes,seconds,fract".split(","), O = {
                years: {index: 6, until: 10, limit: 31536E6, label: J[0], wheel: {}},
                months: {index: 5, until: 11, limit: 2592E6, label: J[1], wheel: {}},
                days: {index: 4, until: 31, limit: 864E5, label: J[2], wheel: {}},
                hours: {index: 3, until: 23, limit: 36E5, label: J[3], wheel: {}},
                minutes: {index: 2, until: 59, limit: 6E4, label: J[4], wheel: {}},
                seconds: {index: 1, until: 59, limit: 1E3, label: J[5], wheel: {}},
                fract: {
                    index: 0, until: 99,
                    limit: 10, label: J[6], prefix: ".", wheel: {}
                }
            }, p = {}, E = [], R = 0, S = !1, G = !0, P = !1, Z = Math.max(10, 1E3 * l.step), I = l.maxWheel,
            Q = l.locked || ca, V = (a.isArray(l.controls) ? l.controls : []).join(","), K = l.targetTime,
            ca = K && K.getTime !== b, U = "jqm" == l.theme, ha = [[]];
        d.start = function () {
            G && d.reset();
            if (!S && (o(), P || !(r >= F))) S = !0, G = !1, A = new Date, q = r, l.readonly = !0, d.setValue(j(w ? r : F - r), !0, 0.1), k = setInterval(function () {
                r = new Date - A + q;
                d.setValue(j(w ? r : F - r), !0, 0.1);
                !P && r + n >= F && (clearInterval(k), setTimeout(function () {
                    d.stop();
                    r = F;
                    d.setValue(j(w ?
                        r : 0), !0, 0.1);
                    d.trigger("onFinish", [F]);
                    G = !0
                }, F - r))
            }, n), a(".dwwr", M).addClass("dw-running dw-locked"), a(".dw-timer-st", M).removeClass(l.btnStartClass || "").addClass(l.btnStopClass || "").attr("title", l.stopText).find(".dwb-txt").text(l.stopText), d.trigger("onStart", [])
        };
        d.stop = function () {
            S && (S = !1, clearInterval(k), r = new Date - A + q, a(".dwwr", M).removeClass("dw-running"), a(".dw-timer-st", M).removeClass(l.btnStopClass || "").addClass(l.btnStartClass || "").attr("title", l.startText).find(".dwb-txt").text(l.startText),
                d.trigger("onStop", [r]))
        };
        d.reset = function () {
            d.stop();
            r = 0;
            E = [];
            R = 0;
            d.setValue(j(w ? 0 : F), !0, 0.1);
            d.settings.readonly = Q;
            G = !0;
            Q || a(".dwwr", M).removeClass("dw-locked");
            d.trigger("onReset", [])
        };
        d.lap = function () {
            S && (D = new Date - A + q, H = D - R, R = D, E.push(D), d.trigger("lap", [D, H, E]))
        };
        d.getTime = function () {
            return F
        };
        d.setTime = function (a) {
            K = a / 1E3;
            F = a
        };
        d.getElapsedTime = d.getEllapsedTime = function () {
            return S ? new Date - A + q : 0
        };
        d.setElapsedTime = d.setEllapsedTime = function (a, b) {
            G || (q = r = a, A = new Date, d.setValue(j(w ? r : F - r), !0,
                0.1, !1, b))
        };
        o(!0);
        !I && !F && (I = "minutes");
        I || a(y).each(function (a, b) {
            if (!I && F >= O[b].limit)return I = b, !1
        });
        s = f(F);
        a(y).each(function (a, b) {
            h(b, s)
        });
        n = Math.max(87, n);
        l.autostart && setTimeout(function () {
            d.start()
        }, 0);
        return {
            wheels: ha, headerText: !1, readonly: Q, parseValue: function () {
                return j(w ? 0 : F)
            }, formatValue: function (b) {
                var c = "", d = 0;
                a(y).each(function (a, e) {
                    "fract" != e && p[e] && (c += b[d] + ("seconds" == e && p.fract ? "." + b[d + 1] : "") + " " + J[a] + " ", d++)
                });
                return c
            }, validate: function (c, g, i) {
                var j, q, k = 0, n = d._tempWheelArray,
                    c = !1;
                G && g !== b && (K = 0, a(y).each(function (a, b) {
                    p[b] && (K += O[b].limit * n[k], k++)
                }), K /= 1E3, o(!0));
                if (G && 0 === g) c = !0, j = f(F); else if (!N && (n[0] < t || n[0] > m)) j = f(w ? r : F - r), c = !0;
                if (c && (h(I, j), X !== u || C !== z)) q = n[0], v = setTimeout(function () {
                    X = u;
                    C = z;
                    N = true;
                    n[0] = q;
                    d.changeWheel([0], b, g !== b)
                }, 1E3 * i);
                N = !1
            }, onBeforeShow: function () {
                l.mode = "scroller";
                l.showLabel = !0
            }, onMarkupReady: function (b) {
                var c = 0;
                M = b;
                b.addClass("dw-timer");
                S ? a(".dwwr", b).addClass("dw-running") : a(".dwwr", b).removeClass("dw-running");
                Q && a(".dwwr", M).addClass("dw-locked");
                a(".dwbc", b).remove();
                a(".dwwl0", b).on("mousedown touchstart", function () {
                    clearTimeout(v)
                });
                a(y).each(function (d, e) {
                    p[e] && (a(".dwwl" + c, b).addClass("dwwl-" + e), c++)
                });
                var f = V.match(/start/), h = V.match(/reset/) && !ca, g = V.match(/lap/) && !ca,
                    i = "inline" !== l.display;
                if (f || h || g || i) a(".dwwr", b).addClass("dw-timer-btns").append('<div class="dwbc">' + (f ? '<span class="dwbw dwbgr dwbgrf' + (!h && !g ? " dwbgrl" : "") + '"><a href="#" role="button" class="dwb-e dwb dw-timer-st ' + (S ? l.btnStopClass || "" : l.btnStartClass || "") + '"' +
                        (U ? ' data-role="button" data-icon="arrow-r" data-iconpos="notext"' : "") + ' title="' + (S ? l.stopText : l.startText) + '"><span class="dwb-i"><span class="dwb-txt">' + (S ? l.stopText : l.startText) + "</span></span></a></span>" : "") + (h ? '<span class="dwbw dwbgr' + (!f ? " dwbgrf" : "") + (!g ? " dwbgrl" : "") + '"><a href="#" role="button" class="dwb-e dwb dw-timer-r ' + (l.btnResetClass || "") + '"' + (U ? ' data-role="button" data-icon="delete" data-iconpos="notext"' : "") + ' title="' + l.resetText + '"><span class="dwb-i"><span class="dwb-txt">' +
                        l.resetText + "</span></span></a></span>" : "") + (g ? '<span class="dwbw dwbgr dwbgrl' + (!f && !h ? " dwbgrf" : "") + '"><a href="#" role="button" class="dwb-e dwb dw-timer-l ' + (l.btnLapClass || "") + '"' + (U ? ' data-role="button" data-icon="refresh" data-iconpos="notext"' : "") + ' title="' + l.lapText + '"><span class="dwb-i"><span class="dwb-txt">' + l.lapText + "</span></span></a></span>" : "") + (i ? '<span class="dwbw dwtcl"><a href="#" role="button" class="dwb-e dwb dw-timer-cl ' + (l.btnHideClass || "") + ' "' + (U ? ' data-role="button" data-mini="true"' :
                            "") + ">" + l.hideText + "</a></span>" : "") + "</div>"), d.tap(a(".dw-timer-st", b), function () {
                    S ? d.stop() : d.start()
                }, !0), d.tap(a(".dw-timer-r", b), function () {
                    d.reset()
                }, !0), d.tap(a(".dw-timer-l", b), function () {
                    d.lap()
                }, !0), d.tap(a(".dw-timer-cl", b), function () {
                    d.hide()
                }, !0)
            }, onPosition: function (b) {
                a(".dwwr", b).css("min-width", 0).css("min-width", a(".dwbc", b).outerWidth())
            }, onDestroy: function () {
                clearInterval(k)
            }
        }
    }
})($);
(function (a, b) {
    function d(b) {
        var c = [Math.round(b.r).toString(16), Math.round(b.g).toString(16), Math.round(b.b).toString(16)];
        a.each(c, function (a, b) {
            1 == b.length && (c[a] = "0" + b)
        });
        return "#" + c.join("")
    }

    function c(a) {
        a = parseInt(-1 < a.indexOf("#") ? a.substring(1) : a, 16);
        return {r: a >> 16, g: (a & 65280) >> 8, b: a & 255}
    }

    function e(a) {
        var b, c, d;
        b = a.h;
        var e = 255 * a.s / 100, a = 255 * a.v / 100;
        if (0 === e) b = c = d = a; else {
            var e = (255 - e) * a / 255, f = (a - e) * (b % 60) / 60;
            360 == b && (b = 0);
            60 > b ? (b = a, d = e, c = e + f) : 120 > b ? (c = a, d = e, b = a - f) : 180 > b ? (c = a, b = e, d = e + f) : 240 >
            b ? (d = a, b = e, c = a - f) : 300 > b ? (d = a, c = e, b = e + f) : 360 > b ? (b = a, c = e, d = a - f) : b = c = d = 0
        }
        return {r: b, g: c, b: d}
    }

    function g(a) {
        var b = 0, c;
        c = Math.min(a.r, a.g, a.b);
        var d = Math.max(a.r, a.g, a.b), b = d - c,
            b = (c = d ? 255 * b / d : 0) ? a.r == d ? (a.g - a.b) / b : a.g == d ? 2 + (a.b - a.r) / b : 4 + (a.r - a.g) / b : -1,
            b = 60 * b;
        0 > b && (b += 360);
        return {h: b, s: c * (100 / 255), v: d * (100 / 255)}
    }

    function f(a) {
        return d(e(a))
    }

    function h(a) {
        var b = a.h, c = a.l, a = a.s / 100, a = a * (50 >= c ? c : 100 - c), c = c + a;
        return {h: b, s: 100 * (c ? 2 * a / c : 0), v: c}
    }

    function j(a) {
        return g(c(a))
    }

    var o = a.mobiscroll, i = o.util.prefix,
        k = o.presets.scroller, n = {
            preview: !0,
            previewText: !0,
            label: "Color",
            refineLabel: "Refine",
            step: 10,
            nr: 10,
            format: "hex",
            hueText: "Hue",
            saturationText: "Saturation",
            valueText: "Value"
        };
    o.presetShort("colorpicker");
    o.presetShort("color");
    k.color = k.colorpicker = function (k) {
        function o(a) {
            return isNaN(+a) ? 0 : +a
        }

        function D(a) {
            return a.r ? d(a) : a.h ? f(a) : a
        }

        function F(a) {
            a = D(a);
            return "rgb" === E ? (a = c(a), Math.round(a.r) + "," + Math.round(a.g) + "," + Math.round(a.b)) : "hsv" === E ? (a = j(a), Math.round(a.h) + "," + Math.round(a.s) + "," + Math.round(a.v)) :
                a
        }

        function r(a) {
            return y ? "hsv" == E ? a.join(",") : "rgb" == E ? (a = e({
                h: a[0],
                s: a[1],
                v: a[2]
            }), Math.round(a.r) + "," + Math.round(a.g) + "," + Math.round(a.b)) : f({
                h: a[0],
                s: a[1],
                v: a[2]
            }) : p ? a[1] : a[0]
        }

        function w(a, b, c) {
            a[0].style.backgroundImage = i + ("-webkit-" == i ? "gradient(linear,left top,left bottom,from(" + b + "),to(" + c + "))" : "linear-gradient(" + b + "," + c + ")")
        }

        function M(b, c) {
            var d = k._tempWheelArray;
            1 !== c && 2 !== c && w(a(".dwwl1 .dw-ul", b), f({h: d[0], s: 0, v: 100}), f({h: d[0], s: 100, v: 100}));
            2 !== c && w(a(".dwwl2 .dw-ul", b), f({
                h: d[0], s: d[1],
                v: 0
            }), f({h: d[0], s: d[1], v: 100}));
            if (R) {
                var h = e({h: d[0], s: d[1], v: d[2]}), h = 0.299 * h.r + 0.587 * h.g + 0.114 * h.b;
                a(".dw-color-preview", b).attr("style", "background:" + f({
                        h: d[0],
                        s: d[1],
                        v: d[2]
                    }) + ";color:" + (130 < h ? "#000" : "#fff")).text(S ? r(d) : "")
            }
        }

        function t() {
            var a = 0, b = {keys: [], values: [], labels: [], label: G},
                c = {keys: [], values: [], labels: [], label: P}, d = {keys: [], values: [], labels: [], label: Z};
            for (a; 360 > a; a += 3)b.keys.push(a), b.values.push('<div class="dw-color" style="background:' + f({
                    h: a,
                    s: 100,
                    v: 100
                }) + '"><div class="dw-color-hl"></div></div>'),
                b.labels.push(a);
            for (a = 0; 101 > a; a += 1)c.keys.push(a), d.keys.push(a), c.values.push('<div class="dw-color"><div class="dw-color-hl"></div></div>'), d.values.push('<div class="dw-color"><div class="dw-color-hl"></div></div>'), c.labels.push(a), d.labels.push(a);
            return [[b, c, d]]
        }

        function m(b, c, d) {
            var e, f, h = {keys: [], values: [], label: c || J.label};
            a.each(b, function (a, b) {
                e = D(b);
                f = F(b);
                h.keys.push(f);
                h.values.push('<div class="dw-cbc"><div class="dw-cb' + ("circle" === J.style ? " dw-cb-circle" : "") + '" style="background:' +
                    e + '"></div></div>' + f);
                d && (z[f] = d)
            });
            return h
        }

        function H(a, b, c) {
            var d, e = a.h, g = (2 - a.s / 100) * a.v, a = a.s * a.v, a = (d = 100 >= g ? g : 200 - g) ? a / d : 0;
            d = g / 2 - c / 2 * b;
            for (g = []; 0 > d + b;)d += b;
            for (c = d + (c + 1) * b; 100 <= c - b;)c -= b;
            for (; d <= c; d += b)g.push(f(h({h: e, s: a, l: Math.max(0, Math.min(d, 100))})));
            return g
        }

        var N, v, s, u, z = {}, X = {}, C = {}, T, l = a.extend({}, k.settings), J = a.extend(k.settings, n, l),
            y = !J.colors, l = a.isArray(J.colors) ? J.colors : [J.colors], O = J.defaultValue || l[0],
            p = J.refine && 1 < l.length, E = J.format, R = y && J.preview, S = J.previewText, G = J.hueText,
            P = J.saturationText, Z = J.valueText;
        !y && 1 == l.length && (l = H(j(D(l[0])), J.step, J.nr));
        y ? (u = t(), C = {
            width: 70,
            height: 15,
            rows: 13,
            speedUnit: 0.006,
            timeUnit: 0.05,
            showLabel: !0
        }) : p ? (a.each(l, function (a, b) {
            v = D(b);
            s = F(b);
            X[s] = m(H(j(v), J.step, J.nr), J.refineLabel, s);
            a || (N = X[s])
        }), u = [[m(l), N]]) : (C = {width: 180}, u = [[m(l)]]);
        return a.extend({
            wheels: u, parseValue: function (a) {
                if (y) {
                    if (a = a || O) {
                        if (E == "hsv") {
                            a = a.split(",");
                            a = {h: o(a[0]), s: o(a[1]), v: o(a[2])}
                        } else if (E == "rgb") {
                            a = a.split(",");
                            a = g({r: o(a[0]), g: o(a[1]), b: o(a[2])})
                        } else {
                            a =
                                a.replace("#", "");
                            a.length == 3 && (a = a[0] + a[0] + a[1] + a[1] + a[2] + a[2]);
                            a = j(a)
                        }
                        var b = Math.round(a.h);
                        return [Math.floor(b / 3) * 3, Math.round(a.s), Math.round(a.v)]
                    }
                    return [0, 100, 100]
                }
                if (p) {
                    if (a && z[a])return [z[a], a];
                    F(O);
                    return [z[O], O]
                }
                return [a || F(O)]
            }, formatValue: r, onBeforeShow: function () {
                if (y) J.mode = "scroller";
                if (R) J.headerText = false
            }, onMarkupReady: function (a) {
                a.addClass("dw-colorpicker");
                R && a.find(".dwc").before('<div class="dw-color-preview"></div>');
                if (y) {
                    a.addClass("dw-cp-hsv");
                    M(a)
                }
            }, validate: function (a,
                                   c) {
                var d = k._tempWheelArray;
                if (y) setTimeout(function () {
                    M(a, c)
                }, 1); else if (p && !c && !T) {
                    T = true;
                    u[0][1] = X[d[0]];
                    c === 0 && (d[1] = d[0]);
                    k.changeWheel([1], b, c !== b)
                }
                T = false
            }
        }, C)
    };
    o.colorpicker = {hsv2hex: f, hsv2rgb: e, rgb2hsv: g, rgb2hex: d, hex2rgb: c, hex2hsv: j}
})($);
(function (a, b) {
    var d = a.mobiscroll, c = d.presets.scroller, e = d.datetime, g = d.util.testTouch,
        f = {autoCorrect: !0, showSelector: !0, minRange: 1, fromText: "Start", toText: "End"};
    d.presetShort("rangepicker");
    d.presetShort("range");
    c.range = c.rangepicker = function (d) {
        function j(a, b) {
            a && (a.setFullYear(b.getFullYear()), a.setMonth(b.getMonth()), a.setDate(b.getDate()))
        }

        function o(b, c) {
            var d = !0;
            if (b && m && H && (H - m > l.maxRange - 1 && (d = !1, C ? m = new Date(H - l.maxRange + 1) : H = new Date(+m + l.maxRange - 1)), H - m < l.minRange - 1)) d = !1, C ? m = new Date(H -
                l.minRange + 1) : H = new Date(+m + l.minRange - 1);
            if (!m || !H) d = !1;
            if (c) {
                var f, g, h, i, j, k = 0, o = y || !C ? " dw-cal-day-hl dw-cal-sel-start" : " dw-cal-sel-start",
                    n = y || C ? " dw-cal-day-hl dw-cal-sel-end" : " dw-cal-sel-end";
                M = m ? e.formatDate(D, m, l) : "";
                t = H ? e.formatDate(D, H, l) : "";
                if (q && (a(".dw-drv0", q).html(M || "&nbsp;"), a(".dw-drv1", q).html(t || "&nbsp;"), f = m ? new Date(m) : null, h = H ? new Date(H) : null, !f && h && (f = new Date(h)), !h && f && (h = new Date(f)), j = C ? h : f, a(".dw-cal-table .dw-sel .dw-i", q).removeClass(O), a(".dw-cal-table .dw-cal-day-hl",
                        q).removeClass(E), a(".dw-cal-table .dw-sel", q).removeClass("dw-sel dw-cal-sel-start dw-cal-sel-end").removeAttr("aria-selected"), f && h)) {
                    g = f.setHours(0, 0, 0, 0);
                    for (i = h.setHours(0, 0, 0, 0); h >= f && 84 > k;)a('.dw-cal-day[data-full="' + j.getFullYear() + "-" + j.getMonth() + "-" + j.getDate() + '"]', q).addClass("dw-sel" + (j.getTime() === g ? o : "") + (j.getTime() === i ? n : "")).attr("aria-selected", "true").find(".dw-i ").addClass(O), j.setDate(j.getDate() + (C ? -1 : 1)), k++
                }
            }
            return d
        }

        function i(a) {
            a.addClass("dw-sel").attr("aria-checked",
                "true").find(".dw-dr").addClass(O)
        }

        function k() {
            u && (a(".dw-dr-c", q).removeClass("dw-sel").removeAttr("aria-checked").find(".dw-dr", q).removeClass(O), y ? (m && i(a(".dw-dr-c", q).eq(0)), H && i(a(".dw-dr-c", q).eq(1))) : i(a(".dw-dr-c", q).eq(C)))
        }

        var n, q, A, D, F, r, w, M, t, m, H, N, v, s, u, z = d._startDate, X = d._endDate, C = 0;
        F = new Date;
        var T = a.extend({}, d.settings), l = a.extend(d.settings, f, T), J = l.anchor, y = l.rangeTap,
            O = l.activeClass || "", p = "dwb-d " + (l.disabledClass || ""), E = "dw-cal-day-hl",
            R = null === l.defaultValue ? [] : l.defaultValue ||
                [new Date(F.setHours(0, 0, 0, 0)), new Date(F.getFullYear(), F.getMonth(), F.getDate() + 6, 23, 59, 59, 999)];
        y && (l.tabs = !0);
        F = c.calbase.call(this, d);
        n = a.extend({}, F);
        D = d.format;
        N = "time" === l.controls.join("");
        u = 1 == l.controls.length && "calendar" == l.controls[0] ? l.showSelector : !0;
        l.startInput && (v = a(l.startInput).prop("readonly"), d.attachShow(a(l.startInput).prop("readonly", !0), function () {
            C = 0;
            l.anchor = J || a(l.startInput)
        }));
        l.endInput && (s = a(l.endInput).prop("readonly"), d.attachShow(a(l.endInput).prop("readonly", !0),
            function () {
                C = 1;
                l.anchor = J || a(l.endInput)
            }));
        d.setVal = function (a, c, f, g, i) {
            var j = a || [];
            if (j[0] === b || j[0] === null || j[0].getTime) {
                w = true;
                M = (m = j[0] || null) ? e.formatDate(D, m, l) : "";
                C || (a = n.parseValue(M, d))
            }
            if (j[1] === b || j[1] === null || j[1].getTime) {
                w = true;
                t = (H = j[1] || null) ? e.formatDate(D, H, l) : "";
                C && (a = n.parseValue(t, d))
            }
            if (!g) {
                d._startDate = z = m;
                d._endDate = X = H
            }
            d._setVal(a, c, f, g, i)
        };
        d.getVal = function (a) {
            return a ? [m, H] : d._hasValue ? [z, X] : null
        };
        d.getDayProps = function (a) {
            var b = m ? new Date(m.getFullYear(), m.getMonth(),
                m.getDate()) : null, c = H ? new Date(H.getFullYear(), H.getMonth(), H.getDate()) : null;
            return {
                selected: b && c && a >= b && a <= H,
                cssClass: ((y || !C) && b && b.getTime() === a.getTime() || (y || C) && c && c.getTime() === a.getTime() ? E : "") + (b && b.getTime() === a.getTime() ? " dw-cal-sel-start" : "") + (c && c.getTime() === a.getTime() ? " dw-cal-sel-end" : "")
            }
        };
        d.setActiveDate = function (b) {
            b = (C = b == "start" ? 0 : 1) ? H : m;
            if (d.isVisible()) {
                if (!y) {
                    k();
                    a(".dw-cal-table .dw-cal-day-hl", q).removeClass(E);
                    b && a('.dw-cal-day[data-full="' + b.getFullYear() + "-" + b.getMonth() +
                        "-" + b.getDate() + '"]', q).addClass(E)
                }
                if (b) {
                    r = true;
                    d.setDate(b, false, 0.2, true)
                }
            }
        };
        d.setValue = function (a, b, c, e, f) {
            d.setVal(a, b, f, e, c)
        };
        d.getValue = d.getVal;
        a.extend(F, {
            highlight: !1, divergentDayChange: !1, formatValue: function () {
                return M + (l.endInput ? "" : t ? " - " + t : "")
            }, parseValue: function (b) {
                b = b ? b.split(" - ") : [];
                l.defaultValue = R[1];
                X = l.endInput ? a(l.endInput).val() ? e.parseDate(D, a(l.endInput).val(), l) : R[1] : b[1] ? e.parseDate(D, b[1], l) : R[1];
                l.defaultValue = R[0];
                z = l.startInput ? a(l.startInput).val() ? e.parseDate(D,
                    a(l.startInput).val(), l) : R[0] : b[0] ? e.parseDate(D, b[0], l) : R[0];
                l.defaultValue = R[C];
                M = z ? e.formatDate(D, z, l) : "";
                t = X ? e.formatDate(D, X, l) : "";
                d._startDate = z;
                d._endDate = X;
                return n.parseValue(C ? t : M, d)
            }, onValueFill: function (b, c) {
                d._startDate = z = m;
                d._endDate = X = H;
                if (l.startInput) {
                    a(l.startInput).val(M);
                    c && a(l.startInput).change()
                }
                if (l.endInput) {
                    a(l.endInput).val(t);
                    c && a(l.endInput).change()
                }
            }, onClose: function (a, b) {
                if (b === "set" && !o(true, true)) {
                    d.setActiveDate(C ? "start" : "end");
                    return false
                }
            }, onHide: function () {
                n.onHide.call(d);
                C = 0;
                q = null;
                l.anchor = J
            }, onClear: function () {
                y && (C = 0)
            }, onBeforeShow: function () {
                l.headerText = false;
                m = z;
                H = X;
                if (l.counter) l.headerText = function () {
                    var a = m && H ? Math.max(1, Math.round(((new Date(H)).setHours(0, 0, 0, 0) - (new Date(m)).setHours(0, 0, 0, 0)) / 864E5) + 1) : 0;
                    return a + " " + (a > 1 ? l.selectedPluralText || l.selectedText : l.selectedText)
                };
                w = true
            }, onMarkupReady: function (b) {
                var c;
                q = b;
                if (m) {
                    r = true;
                    d.setDate(m, false, 0, true);
                    m = d.getDate(true)
                }
                if (H) {
                    r = true;
                    d.setDate(H, false, 0, true);
                    H = d.getDate(true)
                }
                if (C && H || !C && m) {
                    r = true;
                    d.setDate(C ? H : m, false, 0, true)
                }
                n.onMarkupReady.call(this, b);
                b.addClass("dw-range");
                if (u) {
                    c = '<div class="dw-dr-t" role="radiogroup"><div class="dw-dr-c dw-dr0"><div role="radio" class="dwb-e dwb-nhl dw-i dw-dr">' + l.fromText + '<div class="dw-drv dw-drv0">' + (M || "&nbsp;") + '</div></div></div><div class="dw-dr-c dw-dr1"><div role="radio" class="dwb-e dwb-nhl dw-i dw-dr">' + l.toText + '<div class="dw-drv dw-drv1">' + (t || "&nbsp;") + "</div></div></div></div>";
                    a(".dw-cal-tabs", b).before(c);
                    k()
                }
                a(".dw-dr-c", b).on("touchstart click",
                    function (b) {
                        if (g(b, this)) {
                            d.showMonthView();
                            d.setActiveDate(a(this).index() ? "end" : "start")
                        }
                    })
            }, onDayChange: function (a) {
                a.active = C ? "end" : "start";
                A = true
            }, onSetDate: function (c) {
                var e = c.date, f = d.order;
                if (!r) {
                    f.h === b && e.setHours(C ? 23 : 0);
                    f.i === b && e.setMinutes(C ? 59 : 0);
                    f.s === b && e.setSeconds(C ? 59 : 0);
                    e.setMilliseconds(C ? 999 : 0);
                    if (!w || A) {
                        if (y && A) {
                            C == 1 && e < m && (C = 0);
                            C ? e.setHours(23, 59, 59, 999) : e.setHours(0, 0, 0, 0)
                        }
                        C ? H = new Date(e) : m = new Date(e);
                        if (N) {
                            j(m, e);
                            j(H, e)
                        }
                        y && A && !C && (H = null)
                    }
                }
                d._isValid = o(w || A || l.autoCorrect,
                    !r);
                c.active = C ? "end" : "start";
                if (!r && y) {
                    A && (C = C ? 0 : 1);
                    k()
                }
                d.isVisible() && (d._isValid ? a(".dwb-s .dwb", d._markup).removeClass(p) : a(".dwb-s .dwb", d._markup).addClass(p));
                r = w = A = false
            }, onTabChange: function () {
                o(true, true)
            }, onDestroy: function () {
                a(l.startInput).prop("readonly", v);
                a(l.endInput).prop("readonly", s)
            }
        });
        return F
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = b.presets.scroller, c = {
        min: 0,
        max: 100,
        convert: !0,
        defUnit: "kph",
        units: ["kph", "mph", "mps", "fps", "knot"],
        unitNames: {kph: "km/h", mph: "mi/h", mps: "m/s", fps: "ft/s", knot: "knot"}
    }, e = {kph: 1, mph: 1.60934, mps: 3.6, fps: 1.09728, knot: 1.852};
    b.presetShort("speed");
    d.speed = function (b) {
        var f = a.extend({}, c, b.settings), h = f.convert, j = [], o = [], i, k;
        if (f.units)for (k = 0; k < f.units.length; k++)i = f.units[k], e[i] && (j.push(i), o.push(f.unitNames[i] || i));
        a.extend(b.settings, f, {
            sign: !1, units: j, unitNames: o,
            convert: function (a, b, c) {
                return h ? a * e[b] / e[c] : a
            }
        });
        return d.measurement.call(this, b)
    }
})($);
(function (a, b) {
    var d = a.mobiscroll, c = {
        inputClass: "",
        values: 5,
        order: "desc",
        style: "icon",
        invalid: [],
        layout: "fixed",
        icon: {filled: "star3", empty: "star3"}
    };
    d.presetShort("rating");
    d.presets.scroller.rating = function (e) {
        var g = a.extend({}, e.settings), f = a.extend(e.settings, c, g), h = a(this), g = this.id + "_dummy",
            j = a('label[for="' + this.id + '"]').attr("for", g),
            o = f.label !== b ? f.label : j.length ? j.text() : h.attr("name"), i = f.defaultValue, j = [[]],
            o = {keys: [], values: [], labels: [], label: o}, k = {}, n = [], q, A = !1, D, F, r, w, M, t,
            m = "grade" ===
            f.style ? "circle" : "icon";
        h.is("select") && (f.values = {}, a("option", h).each(function () {
            f.values[a(this).val()] = a(this).text()
        }), a("#" + g).remove());
        if (a.isArray(f.values))for (D = 0; D < f.values.length; D++)r = +f.values[D], isNaN(r) && (r = D + 1, A = !0), n.push({
            order: r,
            key: f.values[D],
            value: f.values[D]
        }); else if (a.isPlainObject(f.values))for (F in D = 1, A = !0, f.values)r = +F, isNaN(r) && (r = D), n.push({
            order: r,
            key: F,
            value: f.values[F]
        }), D++; else for (D = 1; D <= f.values; D++)n.push({order: D, key: D, value: D});
        f.showText === b && A && (f.showText =
            !0);
        f.icon.empty === b && (f.icon.empty = f.icon.filled);
        n.sort(function (a, b) {
            return f.order == "desc" ? b.order - a.order : a.order - b.order
        });
        t = "desc" == f.order ? n[0].order : n[n.length - 1].order;
        for (D = 0; D < n.length; D++) {
            M = n[D].order;
            r = n[D].key;
            w = n[D].value;
            A = "";
            for (F = 1; F < M + 1; F++)A += '<span class="mbsc-rating-' + m + ("circle" === m ? "" : " mbsc-ic mbsc-ic-" + f.icon.filled) + ' ">' + ("circle" == m ? F : " ") + "</span>";
            for (F = M + 1; F <= t; F++)A += '<span class="mbsc-rating-' + m + ("circle" === m ? " mbsc-rating-circle-unf" : " mbsc-ic mbsc-ic-" + (f.icon.empty ?
                        f.icon.empty + " mbsc-rating-icon-unf" : "") + (f.icon.empty === f.icon.filled ? " mbsc-rating-icon-same" : "")) + '"></span>';
            i === b && (i = r);
            A += f.showText ? '<span class="mbsc-rating-txt">' + w + "</span>" : "";
            o.keys.push(r);
            o.values.push(A);
            o.labels.push(w);
            k[r] = w
        }
        h.is("select") && (q = a('<input type="text" id="' + g + '" value="' + k[h.val()] + '" class="' + f.inputClass + '" placeholder="' + (f.placeholder || "") + '" readonly />').insertBefore(h));
        j[0].push(o);
        q && e.attachShow(q);
        h.is("select") && h.hide().closest(".ui-field-contain").trigger("create");
        e.getVal = function (a) {
            a = e._hasValue ? e[a ? "_tempWheelArray" : "_wheelArray"][0] : null;
            return d.util.isNumeric(a) ? +a : a
        };
        return {
            anchor: q, wheels: j, headerText: !1, formatValue: function (a) {
                return k[a[0]]
            }, parseValue: function (a) {
                for (var b in k)if (q && b == a || !q && k[b] == a)return [b];
                return [i]
            }, validate: function (b) {
                a.each(f.invalid, function (c, d) {
                    a('.dw-li[data-val="' + d + '"]', b).removeClass("dw-v")
                })
            }, onMarkupReady: function (a) {
                a.addClass("dw-rating")
            }, onValueFill: function (a) {
                if (q) {
                    q.val(a);
                    h.val(e._tempWheelArray[0])
                }
            },
            onDestroy: function () {
                q && q.remove();
                h.show()
            }
        }
    }
})($);
(function (a) {
    a.each(["date", "time", "datetime"], function (b, d) {
        a.mobiscroll.presetShort(d)
    })
})($);
(function (a, b) {
    var d = a.mobiscroll, c = d.util, e = c.isString, g = {
        batch: 40,
        inputClass: "",
        invalid: [],
        rtl: !1,
        showInput: !0,
        groupLabel: "Groups",
        checkIcon: "checkmark",
        dataText: "text",
        dataValue: "value",
        dataGroup: "group",
        dataDisabled: "disabled"
    };
    d.presetShort("select");
    d.presets.scroller.select = function (d) {
        function h() {
            var c, d, e, f, g, h = 0, i = 0, j = {};
            aa = {};
            da = {};
            v = [];
            w = [];
            K ? a.each(E.data, function (a, h) {
                f = h[E.dataText];
                g = h[E.dataValue];
                d = h[E.dataGroup];
                e = {value: g, text: f, index: a};
                aa[g] = e;
                v.push(e);
                ca && (j[d] === b ? (c = {
                    text: d,
                    value: i, options: [], index: i
                }, da[i] = c, j[d] = i, w.push(c), i++) : c = da[j[d]], ha && (e.index = c.options.length), e.group = j[d], c.options.push(e));
                h[E.dataDisabled] && ea.push(g)
            }) : ca ? a("optgroup", G).each(function (b) {
                da[b] = {text: this.label, value: b, options: [], index: b};
                w.push(da[b]);
                a("option", this).each(function (a) {
                    e = {value: this.value, text: this.text, index: ha ? a : h++, group: b};
                    aa[this.value] = e;
                    v.push(e);
                    da[b].options.push(e);
                    this.disabled && ea.push(this.value)
                })
            }) : a("option", G).each(function (a) {
                e = {
                    value: this.value, text: this.text,
                    index: a
                };
                aa[this.value] = e;
                v.push(e);
                this.disabled && ea.push(this.value)
            });
            v.length && (F = v[0].value);
            ia && (v = [], h = 0, a.each(da, function (b, c) {
                g = "__group" + b;
                e = {text: c.text, value: g, group: b, index: h++};
                aa[g] = e;
                v.push(e);
                ea.push(e.value);
                a.each(c.options, function (a, b) {
                    b.index = h++;
                    v.push(b)
                })
            }))
        }

        function j(a, c, d, e, f, g, h) {
            var i = [], j = [], e = Math.max(0, (d[e] !== b ? d[e].index : 0) - R),
                k = Math.min(c.length - 1, e + 2 * R);
            if (l[f] !== e || J[f] !== k) {
                for (d = e; d <= k; d++)j.push(c[d].text), i.push(c[d].value);
                T[f] = !0;
                y[f] = e;
                O[f] = k;
                c = {
                    multiple: g,
                    values: j, keys: i, label: h
                };
                S ? a[0][f] = c : a[f] = [c]
            } else T[f] = !1
        }

        function o(a) {
            j(a, w, da, r, m, !1, E.groupLabel)
        }

        function i(a) {
            j(a, ha ? da[r].options : v, aa, u, s, P, I)
        }

        function k(c) {
            P && (c && e(c) && (c = c.split(",")), a.isArray(c) && (c = c[0]));
            u = c === b || null === c || "" === c || !aa[c] ? F : c;
            U && (X = r = aa[u] ? aa[u].group : null)
        }

        function n(a, b) {
            var c = a ? d._tempWheelArray : d._hasValue ? d._wheelArray : null;
            return c ? E.group && b ? c : c[s] : null
        }

        function q() {
            var a, b;
            a = [];
            var c = 0;
            if (P) {
                b = [];
                for (c in ga)a.push(aa[c] ? aa[c].text : ""), b.push(c);
                a = a.join(", ")
            } else b =
                u, a = aa[u] ? aa[u].text : "";
            d._tempValue = b;
            N.val(a);
            G.val(b)
        }

        function A(a) {
            var b = a.attr("data-val"), c = a.hasClass("dw-msel");
            if (P && a.closest(".dwwl").hasClass("dwwms"))return a.hasClass("dw-v") && (c ? (a.removeClass(Q).removeAttr("aria-selected"), delete ga[b]) : (a.addClass(Q).attr("aria-selected", "true"), ga[b] = b)), !1;
            a.hasClass("dw-w-gr") && (t = a.attr("data-val"))
        }

        var D, F, r, w, M, t, m, H, N, v, s, u, z, X, C, T = {}, l = {}, J = {}, y = {}, O = {},
            p = a.extend({}, d.settings), E = a.extend(d.settings, g, p), R = E.batch,
            p = E.layout || (/top|bottom/.test(E.display) ?
                    "liquid" : ""), S = "liquid" == p, G = a(this), P = E.multiple || G.prop("multiple"),
            Z = this.id + "_dummy";
        H = a('label[for="' + this.id + '"]').attr("for", Z);
        var I = E.label !== b ? E.label : H.length ? H.text() : G.attr("name"),
            Q = "dw-msel mbsc-ic mbsc-ic-" + E.checkIcon, V = E.readonly, K = !!E.data,
            ca = K ? !!E.group : a("optgroup", G).length;
        H = E.group;
        var U = ca && H && !1 !== H.groupWheel, ha = ca && H && U && !0 === H.clustered,
            ia = ca && (!H || !1 !== H.header && !ha), B = G.val() || [], ea = [], ga = {}, aa = {}, da = {};
        E.invalid.length || (E.invalid = ea);
        U ? (m = 0, s = 1) : (m = -1, s = 0);
        if (P) {
            G.prop("multiple",
                !0);
            B && e(B) && (B = B.split(","));
            for (H = 0; H < B.length; H++)ga[B[H]] = B[H]
        }
        h();
        k(G.val());
        a("#" + Z).remove();
        G.next().is("input.mbsc-control") ? N = G.off(".mbsc-form").next().removeAttr("tabindex") : (N = a('<input type="text" id="' + Z + '" class="mbsc-control mbsc-control-ev ' + E.inputClass + '" readonly />'), E.showInput && N.insertBefore(G));
        d.attachShow(N.attr("placeholder", E.placeholder || ""));
        G.addClass("dw-hsel").attr("tabindex", -1).closest(".ui-field-contain").trigger("create");
        q();
        d.setVal = function (a, b, g, h, i) {
            if (P) {
                a &&
                e(a) && (a = a.split(","));
                ga = c.arrayToObject(a);
                a = a ? a[0] : null
            }
            d._setVal(a, b, g, h, i)
        };
        d.getVal = function (a, b) {
            return P ? c.objectToArray(ga) : n(a, b)
        };
        d.refresh = function () {
            h();
            l = {};
            J = {};
            var a = E, b = [[]];
            U && o(b);
            i(b);
            a.wheels = b;
            l[m] = y[m];
            J[m] = O[m];
            l[s] = y[s];
            J[s] = O[s];
            D = true;
            k(u);
            d._tempWheelArray = U ? [r, u] : [u];
            d._isVisible && d.changeWheel(U ? [m, s] : [s])
        };
        d.getValues = d.getVal;
        d.getValue = n;
        return {
            width: 50,
            layout: p,
            headerText: !1,
            anchor: N,
            confirmOnTap: U ? [!1, !0] : !0,
            formatValue: function (a) {
                var b, c = [];
                if (P) {
                    for (b in ga)c.push(aa[b] ?
                        aa[b].text : "");
                    return c.join(", ")
                }
                a = a[s];
                return aa[a] ? aa[a].text : ""
            },
            parseValue: function (a) {
                k(a === b ? G.val() : a);
                return U ? [r, u] : [u]
            },
            onValueTap: A,
            onValueFill: q,
            onBeforeShow: function () {
                if (P && E.counter) E.headerText = function () {
                    var b = 0;
                    a.each(ga, function () {
                        b++
                    });
                    return b + " " + (b > 1 ? E.selectedPluralText || E.selectedText : E.selectedText)
                };
                k(G.val());
                if (U) d._tempWheelArray = [r, u];
                d.refresh()
            },
            onMarkupReady: function (b) {
                b.addClass("dw-select");
                a(".dwwl" + m, b).on("mousedown touchstart", function () {
                    clearTimeout(C)
                });
                a(".dwwl" + s, b).on("mousedown touchstart", function () {
                    M || clearTimeout(C)
                });
                ia && a(".dwwl" + s, b).addClass("dw-select-gr");
                if (P) {
                    b.addClass("dwms");
                    a(".dwwl", b).on("keydown", function (b) {
                        if (b.keyCode == 32) {
                            b.preventDefault();
                            b.stopPropagation();
                            A(a(".dw-sel", this))
                        }
                    }).eq(s).attr("aria-multiselectable", "true");
                    z = a.extend({}, ga)
                }
            },
            validate: function (c, e, g, h) {
                var j, k = [];
                j = d.getArrayVal(true);
                var n = j[m], q = j[s], p = a(".dw-ul", c).eq(m), A = a(".dw-ul", c).eq(s);
                l[m] > 1 && a(".dw-li", p).slice(0, 2).removeClass("dw-v").addClass("dw-fv");
                J[m] < w.length - 2 && a(".dw-li", p).slice(-2).removeClass("dw-v").addClass("dw-fv");
                l[s] > 1 && a(".dw-li", A).slice(0, 2).removeClass("dw-v").addClass("dw-fv");
                J[s] < (ha ? da[n].options : v).length - 2 && a(".dw-li", A).slice(-2).removeClass("dw-v").addClass("dw-fv");
                if (!D) {
                    u = q;
                    if (U) {
                        r = aa[u].group;
                        if (e === b || e === m) {
                            r = +j[m];
                            M = false;
                            if (r !== X) {
                                u = da[r].options[0].value;
                                l[s] = null;
                                J[s] = null;
                                M = true;
                                E.readonly = [false, true]
                            } else E.readonly = V
                        }
                    }
                    if (ca && (/__group/.test(u) || t)) {
                        q = u = da[aa[t || u].group].options[0].value;
                        t = false
                    }
                    d._tempWheelArray =
                        U ? [n, q] : [q];
                    if (U) {
                        o(E.wheels);
                        T[m] && k.push(m)
                    }
                    i(E.wheels);
                    T[s] && k.push(s);
                    clearTimeout(C);
                    C = setTimeout(function () {
                        if (k.length) {
                            D = true;
                            M = false;
                            X = r;
                            l[m] = y[m];
                            J[m] = O[m];
                            l[s] = y[s];
                            J[s] = O[s];
                            d._tempWheelArray = U ? [n, u] : [u];
                            d.changeWheel(k, 0, e !== b)
                        }
                        if (U) {
                            e === s && d.scroll(p, m, d.getValidCell(r, p, h, false, true).v, 0.1);
                            d._tempWheelArray[m] = r
                        }
                        E.readonly = V
                    }, e === b ? 100 : g * 1E3);
                    if (k.length)return M ? false : true
                }
                if (e === b && P) {
                    j = ga;
                    g = 0;
                    a(".dwwl" + s + " .dw-li", c).removeClass(Q).removeAttr("aria-selected");
                    for (g in j)a(".dwwl" +
                        s + ' .dw-li[data-val="' + j[g] + '"]', c).addClass(Q).attr("aria-selected", "true")
                }
                ia && a('.dw-li[data-val^="__group"]', c).addClass("dw-w-gr");
                a.each(E.invalid, function (b, c) {
                    a('.dw-li[data-val="' + c + '"]', A).removeClass("dw-v dw-fv")
                });
                D = false
            },
            onValidated: function () {
                u = d._tempWheelArray[s]
            },
            onClear: function (b) {
                ga = {};
                N.val("");
                a(".dwwl" + s + " .dw-li", b).removeClass(Q).removeAttr("aria-selected")
            },
            onCancel: function () {
                !d.live && P && (ga = a.extend({}, z))
            },
            onDestroy: function () {
                N.hasClass("mbsc-control") || N.remove();
                G.removeClass("dw-hsel").removeAttr("tabindex")
            }
        }
    }
})($);
(function (a) {
    var a = a.mobiscroll, b = a.presets.scroller;
    b.treelist = b.list;
    a.presetShort("list");
    a.presetShort("treelist")
})($);
(function (a) {
    var b = a.mobiscroll, d = b.presets.scroller;
    b.presetShort("image");
    d.image = function (b) {
        b.settings.enhance && (b._processMarkup = function (b) {
            var c = b.attr("data-icon");
            b.children().each(function (b, c) {
                c = a(c);
                c.is("img") ? a('<div class="mbsc-img-c"></div>').insertAfter(c).append(c.addClass("mbsc-img")) : c.is("p") && c.addClass("mbsc-img-txt")
            });
            c && b.prepend('<div class="mbsc-ic mbsc-ic-' + c + '"></div');
            b.html('<div class="mbsc-img-w">' + b.html() + "</div>");
            return b.html()
        });
        return d.list.call(this, b)
    }
})($);
(function (a) {
    var b = a.mobiscroll, d = b.presets.scroller,
        c = {min: 0, max: 100, convert: !0, defUnit: "km", units: "m,km,in,ft,yd,mi".split(",")}, e = {
            mm: 0.001,
            cm: 0.01,
            dm: 0.1,
            m: 1,
            dam: 10,
            hm: 100,
            km: 1E3,
            "in": 0.0254,
            ft: 0.3048,
            yd: 0.9144,
            ch: 20.1168,
            fur: 201.168,
            mi: 1609.344,
            lea: 4828.032
        };
    b.presetShort("distance");
    d.distance = function (b) {
        var f = a.extend({}, c, b.settings), h = f.convert, j = [], o, i;
        if (f.units)for (i = 0; i < f.units.length; i++)o = f.units[i], e[o] && j.push(o);
        a.extend(b.settings, f, {
            sign: !1, units: j, unitNames: null, convert: function (a,
                                                                    b, c) {
                return h ? a * e[b] / e[c] : a
            }
        });
        return d.measurement.call(this, b)
    }
})($);
(function (a) {
    function b(b, c) {
        var f = j(c, "X"), g = j(c, "Y"), h = b.offset(), A = f - h.left, D = g - h.top,
            A = Math.max(A, b[0].offsetWidth - A), D = Math.max(D, b[0].offsetHeight - D),
            D = 2 * Math.sqrt(Math.pow(A, 2) + Math.pow(D, 2));
        d(e);
        e = a('<span class="mbsc-ripple"></span>').css({
            width: D,
            height: D,
            top: g - h.top - D / 2,
            left: f - h.left - D / 2
        }).appendTo(b);
        setTimeout(function () {
            e.addClass("mbsc-ripple-scaled mbsc-ripple-visible")
        }, 10)
    }

    function d(a) {
        a && (a.removeClass("mbsc-ripple-visible"), setTimeout(function () {
            a.remove()
        }, 2E3))
    }

    var c, e, g = a.mobiscroll,
        f = g.util, h = f.testTouch, j = f.getCoord;
    g.themes.material = {
        addRipple: b, removeRipple: function () {
            d(e)
        }, initRipple: function (f, g, k, n) {
            var q, A;
            f.on("touchstart mousedown", g, function (d) {
                h(d, this) && (q = j(d, "X", !0), A = j(d, "Y", !0), c = a(this), !c.hasClass(k) && !c.hasClass(n) ? b(c, d) : c = null)
            }).on("touchmove mousemove", g, function (a) {
                if (c && 20 < Math.abs(j(a, "X", !0) - q) || 20 < Math.abs(j(a, "Y", !0) - A)) d(e), c = null
            }).on("touchend touchcancel mouseleave mouseup", g, function () {
                c && (setTimeout(function () {
                    d(e)
                }, 100), c = null)
            })
        }
    }
})($);
var ko = ko || {bindingHandlers: {}, utils: {domNodeDisposal: {}}}, mobiscroll = mobiscroll || {};
mobiscroll.ko = {};
(function (a) {
    function b(b, c) {
        mobiscroll.ko.preventUpdate[b.id] = !0;
        c()(a(b).mobiscroll("getVal"));
        delete mobiscroll.ko.preventUpdate[b.id]
    }

    mobiscroll.ko = {
        preventUpdate: {}, getShortHandEventsObject: function (a) {
            return {
                onBeforeShow: a["mobiscroll.onBeforeShow"],
                onCancel: a["mobiscroll.onCancel"],
                onChange: a["mobiscroll.onChange"],
                onClose: a["mobiscroll.onClose"],
                onDestroy: a["mobiscroll.onDestroy"],
                onMarkupReady: a["mobiscroll.onMarkupReady"],
                onPosition: a["mobiscroll.onPosition"],
                onSelect: a["mobiscroll.onSelect"],
                onShow: a["mobiscroll.onShow"],
                onValueTap: a["mobiscroll.onValueTap"],
                validate: a["mobiscroll.validate"]
            }
        }, getInitObject: function (b, c) {
            var e = b()["mobiscroll.options"] || {}, g = b()["mobiscroll.event"] || {};
            a.extend(e, c ? "string" === typeof c ? {preset: c} : c : {}, g, mobiscroll.ko.getShortHandEventsObject(b()));
            return e
        }, initializeGenericComponent: function (d, c, e, g, f, h, j, o, i) {
            e = mobiscroll.ko.getInitObject(e, h);
            a.extend(e, j || {});
            a(d).mobiscroll(e);
            o || (o = "change");
            i || (i = b);
            ko.utils.registerEventHandler(d, o, function () {
                i(d,
                    c)
            });
            ko.utils.domNodeDisposal.addDisposeCallback(d, function () {
                a(d).mobiscroll("destroy")
            })
        }, updateGenericComponent: function (b, c) {
            var e = ko.utils.unwrapObservable(c());
            mobiscroll.ko.preventUpdate[b.id] || a(b).mobiscroll("setVal", e, !0, !1)
        }
    };
    ko.bindingHandlers["mobiscroll.scroller"] = {
        init: function (a, b, e, g, f) {
            mobiscroll.ko.initializeGenericComponent(a, b, e, g, f)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})($);
(function (a) {
    a.mobiscroll.themes.frame["sense-dark"] = {
        baseTheme: "sense",
        minWidth: 64,
        height: 60,
        btnStartClass: "mbsc-ic mbsc-ic-play3",
        btnStopClass: "mbsc-ic mbsc-ic-pause2",
        btnResetClass: "mbsc-ic mbsc-ic-stop2",
        btnLapClass: "mbsc-ic mbsc-ic-loop2",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left5",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right5",
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down5",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up5",
        onMarkupReady: function (b, d) {
            var c = d.settings, e = c.height, c = c.rows;
            a(".dww", b).height(c *
                e - 40);
            a(".dw-ul", b).css("margin-top", c / 2 * e - e / 2 - 20 + "px");
            a(".dwwms .dw-ul", b).css("margin-top", "-20px");
            a(".dwwb", b).css({height: e - 20 + "px", lineHeight: e - 20 + "px"})
        }
    };
    a.mobiscroll.themes.listview["sense-dark"] = {baseTheme: "sense"};
    a.mobiscroll.themes.menustrip["sense-dark"] = {baseTheme: "sense"}
})($);
(function (a) {
    a.mobiscroll.themes.frame["mobiscroll-dark"] = {
        baseTheme: "mobiscroll",
        rows: 5,
        showLabel: !1,
        headerText: !1,
        btnWidth: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 1,
        dateOrder: "MMddyy",
        weekDays: "min",
        checkIcon: "ion-ios7-checkmark-empty",
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down5",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up5",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left5",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right5"
    };
    a.mobiscroll.themes.listview["mobiscroll-dark"] = {baseTheme: "mobiscroll"};
    a.mobiscroll.themes.menustrip["mobiscroll-dark"] =
        {baseTheme: "mobiscroll"};
    a.mobiscroll.themes.form["mobiscroll-dark"] = {baseTheme: "mobiscroll"}
})($);
(function (a) {
    a.mobiscroll.themes.frame["wp-light"] = {
        baseTheme: "wp",
        minWidth: 76,
        height: 76,
        accent: "none",
        dateOrder: "mmMMddDDyy",
        headerText: !1,
        showLabel: !1,
        deleteIcon: "backspace4",
        icon: {filled: "star3", empty: "star"},
        btnWidth: !1,
        btnStartClass: "mbsc-ic mbsc-ic-play3",
        btnStopClass: "mbsc-ic mbsc-ic-pause2",
        btnResetClass: "mbsc-ic mbsc-ic-stop2",
        btnLapClass: "mbsc-ic mbsc-ic-loop2",
        btnHideClass: "mbsc-ic mbsc-ic-close",
        btnCalPrevClass: "mbsc-ic mbsc-ic-arrow-left2",
        btnCalNextClass: "mbsc-ic mbsc-ic-arrow-right2",
        btnPlusClass: "mbsc-ic mbsc-ic-plus",
        btnMinusClass: "mbsc-ic mbsc-ic-minus",
        onMarkupInserted: function (b, d) {
            var c, e, g, f = d.settings;
            if ("clickpick" != d.settings.mode) a(".dwwl", b).on("touchstart mousedown wheel mousewheel", function (d) {
                if (!("mousedown" === d.type && e || (a.isArray(f.readonly) ? f.readonly[a(".dwwl", b).index(this)] : f.readonly))) e = "touchstart" === d.type, c = !0, g = a(this).hasClass("wpa"), a(".dwwl", b).removeClass("wpa"), a(this).addClass("wpa")
            }).on("touchmove mousemove", function () {
                c = !1
            }).on("touchend mouseup",
                function (b) {
                    c && g && a(b.target).closest(".dw-li").hasClass("dw-sel") && a(this).removeClass("wpa");
                    "mouseup" === b.type && (e = !1);
                    c = !1
                })
        },
        onThemeLoad: function (a, d) {
            if (a && a.dateOrder && !d.dateOrder) {
                var c = a.dateOrder, c = c.match(/mm/i) ? c.replace(/mmMM|mm|MM/, "mmMM") : c.replace(/mM|m|M/, "mM"),
                    c = c.match(/dd/i) ? c.replace(/ddDD|dd|DD/, "ddDD") : c.replace(/dD|d|D/, "dD");
                d.dateOrder = c
            }
        },
        onInit: function (a) {
            a = a.buttons;
            a.set.icon = "checkmark";
            a.cancel.icon = "close";
            a.clear.icon = "close";
            a.ok && (a.ok.icon = "checkmark");
            a.close &&
            (a.close.icon = "close");
            a.now && (a.now.icon = "loop2")
        }
    };
    a.mobiscroll.themes.listview["wp-light"] = {baseTheme: "wp"};
    a.mobiscroll.themes.menustrip["wp-light"] = {baseTheme: "wp"};
    a.mobiscroll.themes.form["wp-light"] = {baseTheme: "wp"}
})($);
(function (a) {
    a.mobiscroll.themes.frame["material-dark"] = {
        baseTheme: "material",
        showLabel: !1,
        headerText: !1,
        btnWidth: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 1,
        dateOrder: "MMddyy",
        weekDays: "min",
        deleteIcon: "material-backspace",
        icon: {filled: "material-star", empty: "material-star-outline"},
        checkIcon: "material-check",
        btnPlusClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-down",
        btnMinusClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-up",
        btnCalPrevClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-left",
        btnCalNextClass: "mbsc-ic mbsc-ic-material-keyboard-arrow-right",
        onMarkupReady: function (b) {
            a.mobiscroll.themes.material.initRipple(b, ".dwb-e", "dwb-d", "dwb-nhl")
        },
        onEventBubbleShow: function (b, d) {
            var c = d.hasClass("dw-cal-events-b"),
                e = a(".dw-cal-event-color", d).eq(c ? 0 : -1).css("background-color");
            a(".dw-cal-events-arr", d).css("border-color", c ? "transparent transparent " + e + " transparent" : e + "transparent transparent transparent")
        }
    };
    a.mobiscroll.themes.listview["material-dark"] = {
        baseTheme: "material", onItemActivate: function (b, d) {
            a.mobiscroll.themes.material.addRipple(b,
                d)
        }, onItemDeactivate: function () {
            a.mobiscroll.themes.material.removeRipple()
        }, onSlideStart: function (b) {
            a(".mbsc-ripple", b).remove()
        }, onSortStart: function (b) {
            a(".mbsc-ripple", b).remove()
        }
    };
    a.mobiscroll.themes.menustrip["material-dark"] = {
        baseTheme: "material", onInit: function () {
            a.mobiscroll.themes.material.initRipple(a(this), ".mbsc-ms-item", "mbsc-btn-d", "mbsc-btn-nhl")
        }
    };
    a.mobiscroll.themes.form["material-dark"] = {
        baseTheme: "material", onControlActivate: function (b, d) {
            ("button" == b[0].type || "submit" == b[0].type) &&
            a.mobiscroll.themes.material.addRipple(b, d)
        }, onControlDeactivate: function () {
            a.mobiscroll.themes.material.removeRipple()
        }
    }
})($);
(function (a) {
    a.mobiscroll.themes.frame["android-holo-light"] = {
        baseTheme: "android-holo",
        dateOrder: "Mddyy",
        rows: 5,
        minWidth: 76,
        height: 36,
        showLabel: !1,
        selectedLineHeight: !0,
        selectedLineBorder: 2,
        useShortLabels: !0,
        icon: {filled: "star3", empty: "star"},
        btnPlusClass: "mbsc-ic mbsc-ic-arrow-down6",
        btnMinusClass: "mbsc-ic mbsc-ic-arrow-up6"
    };
    a.mobiscroll.themes.listview["android-holo-light"] = {baseTheme: "android-holo"};
    a.mobiscroll.themes.menustrip["android-holo-light"] = {baseTheme: "android-holo"};
    a.mobiscroll.themes.form["android-holo-light"] =
        {baseTheme: "android-holo"}
})($);
var angular = angular || {
        module: function () {
            return this
        }, directive: function () {
            return this
        }, animation: function () {
            return this
        }
    }, mobiscroll = mobiscroll || {};
mobiscroll.ng = {};
(function () {
    mobiscroll.ng = {
        getDDO: function (a, b, d, c, e, g) {
            var f = e || mobiscroll.ng.genericRead, h = c || mobiscroll.ng.genericRender,
                j = g || mobiscroll.ng.genericParser;
            return {
                restrict: "A", require: "?ngModel", link: function (c, e, g, n) {
                    var q = mobiscroll.ng.getInitOptions(c, g, b, n);
                    mobiscroll.ng.addWatch(a, c, n, h, j, e, g, b);
                    angular.extend(q, d || {});
                    e.mobiscroll(q);
                    e.on("change", function () {
                        c.$apply(function () {
                            f(a, b, e, c, g, n)
                        })
                    });
                    g.mobiscrollInstance && (q = a(g.mobiscrollInstance).assign, q(c, e.mobiscroll("getInst")))
                }
            }
        }, preventRender: {},
        genericRead: function (a, b, d, c, e, g) {
            g ? g.$setViewValue(d.mobiscroll("getVal")) : a(e[b]).assign(c, d.mobiscroll("getVal"))
        }, genericRender: function (a, b) {
            var d = $.mobiscroll.instances[a.attr("id")];
            d && !angular.equals(d.getVal(), b) && a.mobiscroll("setVal", b, !0, 0, !1, !1)
        }, genericParser: function (a) {
            a = a.mobiscroll("getVal");
            return Array.isArray(a) && !a.length ? null : a
        }, addWatch: function (a, b, d, c, e, g, f, h) {
            d && (d.$render = function () {
                c(g, d.$modelValue)
            }, d.$parsers.unshift(function (a) {
                return e(g, a)
            }), d.$formatters.push(function () {
                return g.mobiscroll("getInst")._value
            }));
            var j;
            b.$watch(function () {
                var e = d ? d.$modelValue : a(f[h])(b);
                if (!angular.equals(j, e)) {
                    j = Array.isArray(e) ? e.slice(0) : e;
                    d ? c(g, d.$modelValue) : c(g, a(f[h])(b))
                }
            })
        }, getInitOptions: function (a, b, d, c) {
            var e = a.$eval(b.mobiscrollOptions || "{}");
            c && angular.extend(e, a.$eval(b[d] || "{}"));
            return e
        }
    };
    angular.module("mobiscroll-scroller", []).directive("mobiscrollScroller", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollScroller")
    }])
})($);
var Backbone = Backbone || {View: {}, Model: {}}, mobiscroll = mobiscroll || {};
mobiscroll.bb = {};
(function () {
    function a(a) {
        var c = this.prototype;
        _.isArray(a) ? _.forEach(a, function (a) {
            _.defaults(c, a);
            _.defaults(c.events, a.events);
            b(c, a, "initialize");
            b(c, a, "render")
        }, this) : (_.defaults(c, a), _.defaults(c.events, a.events), b(c, a, "initialize"), b(c, a, "render"))
    }

    function b(a, b, e) {
        if (!_.isUndefined(b[e])) {
            var g = a[e];
            a[e] = function () {
                var a = g.apply(this, arguments);
                b[e].apply(this, arguments);
                return a
            }
        }
    }

    Backbone.View.addControl = a;
    mobiscroll.bb.getComponentMixin = function (a, b, e, g, f, h, j) {
        f = f || function (a, b, c) {
                c.model.set(a,
                    c.$el.find(b).mobiscroll("getVal"))
            };
        h = h || function (a, b, c, d) {
                b = d.$el.find(b);
                b.mobiscroll(c);
                a = d.model.get(a);
                b.mobiscroll("setVal", a, !0, !1)
            };
        j = j || function () {
            };
        void 0 === g && (g = !0);
        var o = {};
        g && (o["change " + b] = a + "_changeTrigger");
        var i = !1, g = {
            events: o, initialize: function () {
                this.model.on("change:" + a, function () {
                    i || h(a, b, e, this)
                }, this);
                j(this)
            }, render: function () {
                h(a, b, e, this)
            }
        };
        g[a + "_changeTrigger"] = function () {
            i = !0;
            f(a, b, this);
            i = !1
        };
        return g
    };
    Backbone.Model.createHierarchyModel = function (b) {
        var c = Backbone.Model.extend({
            deaults: {children: null},
            initialize: function (a) {
                this.set("children", new e(a.children));
                this.get("children").on("add mobiscrollListviewAddChild", function (a, b) {
                    this.trigger("mobiscrollListviewAddChild", a, b)
                }, this);
                this.get("children").on("remove mobiscrollListviewRemoveChild", function (a, b, c) {
                    this.trigger("mobiscrollListviewRemoveChild", a, b, c)
                }, this);
                this.get("children").on("mobiscrollListviewItemChange", function (a) {
                    this.trigger("mobiscrollListviewItemChange", a)
                }, this)
            }
        });
        a.call(c, b);
        var e = Backbone.Collection.extend({
            model: c,
            initialize: function () {
                this.on("change", function (a) {
                    this.trigger("mobiscrollListviewItemChange", a)
                }, this)
            }
        });
        return {collectionModel: e, itemModel: c}
    };
    mobiscroll.scroller = function (a, b, e, g) {
        e = e || {};
        return mobiscroll.bb.getComponentMixin(a, b, e, g)
    }
})();
mobiscroll = mobiscroll || {};
Ember || (Function.prototype.property = function () {
});
var Ember = Ember || {
        Handlebars: {
            helper: function () {
            }, compile: function () {
            }
        }, View: {
            extend: function () {
            }
        }, CollectionView: {
            extend: function () {
            }
        }
    };
(function (a) {
    function b(a, b) {
        var d = b.get("value"), f = b.get("controller.model");
        mobiscroll.ember.preventUpdate[a.attr("id")] = true;
        f.set(d, a.mobiscroll("getVal"));
        delete mobiscroll.ember.preventUpdate[a.attr("id")]
    }

    function d(a, b, d) {
        b = b.get("controller.model." + d);
        mobiscroll.ember.preventUpdate[a.attr("id")] || a.mobiscroll("setVal", b, true, false)
    }

    mobiscroll.ember = {
        preventUpdate: {}, getEmberMobiscrollView: function (a, e, g, f, h, j, o) {
            var i = f || mobiscroll.ember.defaultMarkupTemplate, k = h === null ? null : h || "input", n =
                a instanceof Function ? a : mobiscroll.ember.generalInitFn, f = f && f("").layout ? {
                layout: function () {
                }
            } : {
                template: function () {
                }
            };
            return Ember.View.extend(f, {
                init: function () {
                    this._super();
                    var a = i.call(this, this.get("value"), this.get("controller.model"));
                    if (a.template) this.template = a.template; else if (a.layout) this.layout = a.layout
                }, options: "", value: "", didInsertElement: function () {
                    function f() {
                        w(t, H, m)
                    }

                    function h(a, b, c, d) {
                        r(t, H, m, a, b, c, d)
                    }

                    function i(a, b, c, d) {
                        o.willChange(t, H, m, a, b, c, d)
                    }

                    function F(a, b, c, d) {
                        o.didChange(t,
                            H, m, a, b, c, d)
                    }

                    var r = e || d, w = g || b, M = {};
                    this.options && (M = (new Function("controller", "return " + this.options))(this.get("controller")));
                    var t;
                    t = k === null ? this.$() : this.$().find(k);
                    n(t, M, a, j, this);
                    if (k !== null) t.on("change", f);
                    var m = this.get("value");
                    if (m) {
                        if (o) {
                            this.observerOptions = {willChange: i, didChange: F};
                            this.get("controller.model." + m).addArrayObserver(this, this.observerOptions)
                        } else {
                            this.observerOptions = h;
                            this.get("controller.model").addObserver(m, this, h)
                        }
                        r(t, this, m)
                    }
                    var H = this
                }, willDestroyElement: function () {
                    var a =
                        this.get("value");
                    o ? this.get("controller.model." + a).removeArrayObserver(this, this.observerOptions) : this.get("controller.model." + a).removeObserver(this, a, this.observerOptions)
                }
            })
        }, defaultMarkupTemplate: function () {
            return {template: Ember.Handlebars.compile('<input type="text" />')}
        }, generalInitFn: function (b, d, g, f) {
            a.extend(d, {preset: g}, f);
            b.mobiscroll(d)
        }, arrayTransformer: function () {
            return DS.Transform.extend({
                serialize: function (a) {
                    return Ember.typeOf(a) == "array" ? a : []
                }, deserialize: function (a) {
                    switch (Em.typeOf(a)) {
                        case "array":
                            return a;
                        case "string":
                            return a.split(",").map(function (a) {
                                return $.trim(a)
                            });
                        default:
                            return []
                    }
                }
            })
        }
    };
    mobiscroll.ember.scroller = function () {
        return mobiscroll.ember.getEmberMobiscrollView("scroller")
    };
    Ember.Handlebars.helper("mobiscroll-scroller", mobiscroll.ember.scroller())
})($);
var kendo = kendo || {
        data: {
            binders: {
                source: {
                    extend: function () {
                    }
                }
            }, Binder: {
                extend: function () {
                }
            }
        }
    }, mobiscroll = mobiscroll || {};
mobiscroll.kendo = {};
(function (a) {
    mobiscroll.kendo.preventUpdate = {};
    mobiscroll.kendo.getMobiBinder = function (b, d, c, e, g, f) {
        function h(b, c, d) {
            mobiscroll.kendo.preventUpdate[a(d).attr("id")] = !0;
            b.set(a(d).mobiscroll("getVal"));
            delete mobiscroll.kendo.preventUpdate[a(d).attr("id")]
        }

        function j(b, c) {
            mobiscroll.kendo.preventUpdate[a(b).attr("id")] || a(b).mobiscroll("setVal", c, !0, !1)
        }

        function o(c, e, f) {
            kendo.data.Binder.fn.init.call(this, c, e, f);
            var f = mobiscroll.kendo.getMobiInitObject(c, e, b, d, g), h = this;
            a(h.element).on("change",
                function () {
                    h.change(e, c)
                }).mobiscroll(f)
        }

        c || (c = j);
        e || (e = h);
        f || (f = o);
        return {
            init: f, refresh: function (a) {
                var d = this.bindings[b].get();
                c(this.element, d, a ? a.action : void 0)
            }, change: function (a, c) {
                e(this.bindings[b], a, c)
            }
        }
    };
    mobiscroll.kendo.getMobiInitObject = function (b, d, c, e, g) {
        var b = a(b).data("mobiscroll-options"), f = {};
        b && (f = (new Function("$root", "return " + b))(d[c].parents[0]));
        return a.extend(!0, "string" === typeof e ? {preset: e} : e, f, g || {})
    };
    kendo.data.binders["mobiscroll-scroller"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-scroller",
        "scroller"))
})($);
(function (a) {
    var b = {};
    ko.utils.domNodeDisposal.cleanExternalData = function () {
    };
    ko.bindingHandlers["mobiscroll.listview"] = {
        makeTemplateValueAccessor: function (b) {
            return function () {
                function c(b) {
                    if ("LI" == b.nodeName) {
                        var c = a(b).addClass("mbsc-lv-item").parent("ul");
                        c.prepend(c.children(".mbsc-lv-back"));
                        a(b).closest(".mbsc-lv-cont").find(".mbsc-lv-root").mobiscroll("add", null, a(b), c.children("li").not(".mbsc-lv-back").index(a(b)), void 0, c)
                    }
                }

                function e(b) {
                    if ("LI" == b.nodeName) {
                        var c = a(b).addClass("mbsc-lv-item").parent("ul");
                        c.prepend(c.children(".mbsc-lv-back"));
                        a(b).closest(".mbsc-lv-cont").find(".mbsc-lv-root").mobiscroll("remove", a(b))
                    } else a(b).remove()
                }

                var g = b(), f = ko.utils.peekObservable(g);
                if (!f || "number" == typeof f.length)return {
                    foreach: g,
                    templateEngine: ko.nativeTemplateEngine.instance,
                    afterAdd: c,
                    beforeRemove: e
                };
                ko.utils.unwrapObservable(g);
                return {
                    name: f.name ? f.name : void 0,
                    foreach: f.name ? f.foreach : f.data,
                    as: f.as,
                    includeDestroyed: f.includeDestroyed,
                    afterAdd: c,
                    beforeRemove: e,
                    afterRender: f.afterRender,
                    beforeMove: f.beforeMove,
                    afterMove: f.afterMove,
                    templateEngine: ko.nativeTemplateEngine.instance
                }
            }
        }, init: function (a, c) {
            var e = ko.bindingHandlers.template.init(a, ko.bindingHandlers["mobiscroll.listview"].makeTemplateValueAccessor(c));
            a.id || (a.id = +new Date);
            b[a.id] = !0;
            return e
        }, update: function (d, c, e, g, f) {
            ko.utils.unwrapObservable(c());
            c = ko.bindingHandlers.template.update(d, ko.bindingHandlers["mobiscroll.listview"].makeTemplateValueAccessor(c), e, g, f);
            g = a(d).parent().parent("ul");
            if (b[d.id] && !(g.length && void 0 !== b[g[0].id])) e = ko.utils.extend(mobiscroll.ko.getInitObject(e),
                {
                    onItemRemove: e()["mobiscroll.onItemRemove"],
                    onItemAdd: e()["mobiscroll.onItemAdd"],
                    onInit: e()["mobiscroll.onInit"]
                }), a(d).mobiscroll().listview(e); else if (g.length && void 0 !== b[g[0].id] && a(d).parents(".mbsc-lv-cont").length && a(d).parent().hasClass("mbsc-lv-item")) {
                var h = a(d);
                h.children("li").each(function (b) {
                    h.prepend(h.children(".mbsc-lv-back"));
                    a(this).closest(".mbsc-lv-cont").find(".mbsc-lv-root").mobiscroll("add", null, a(this), b, void 0, h.parent())
                })
            }
            b[d.id] = !1;
            return c
        }
    }
})($);
(function () {
    ko.bindingHandlers["mobiscroll.form"] = {
        init: function (a, b, d) {
            b = mobiscroll.ko.getInitObject(d);
            $(a).mobiscroll().form(b);
            ko.utils.registerEventHandler(a, "mbscFormRefresh", function () {
                $(a).mobiscroll("refresh")
            })
        }
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.numpad"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, {component: "Numpad"}, null)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.force"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "force")
        }, update: mobiscroll.ko.updateGenericComponent
    };
    ko.bindingHandlers["mobiscroll.speed"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "speed")
        }, update: mobiscroll.ko.updateGenericComponent
    };
    ko.bindingHandlers["mobiscroll.mass"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "mass")
        }, update: mobiscroll.ko.updateGenericComponent
    };
    ko.bindingHandlers["mobiscroll.distance"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "distance")
        }, update: mobiscroll.ko.updateGenericComponent
    };
    ko.bindingHandlers["mobiscroll.temperature"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "temperature")
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function (a) {
    function b(a) {
        return {
            onDayChange: a()["mobiscroll.onDayChange"],
            onEventSelect: a()["mobiscroll.onEventSelect"],
            onMonthChange: a()["mobiscroll.onMonthChange"]
        }
    }

    ko.bindingHandlers["mobiscroll.calendar.events"] = {
        init: function (d, c, e, g, f) {
            var h = b(e);
            a.extend(h, {events: []});
            mobiscroll.ko.initializeGenericComponent(d, c, e, g, f, "calendar", h, "change", function () {
            })
        }, update: function (b, c) {
            var e = ko.utils.unwrapObservable(c());
            if (void 0 !== e) {
                var g = a(b), f = g.mobiscroll("getInst");
                g.mobiscroll("setEvents",
                    e);
                g.val(f._value)
            }
        }
    };
    ko.bindingHandlers["mobiscroll.calendar"] = {
        init: function (a, c, e, g, f) {
            var h = b(e);
            mobiscroll.ko.initializeGenericComponent(a, c, e, g, f, "calendar", h)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})($);
(function () {
    ko.bindingHandlers["mobiscroll.timespan"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "timespan")
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.number"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "number")
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.menustrip"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, {component: "MenuStrip"}, null)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.widget"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, {component: "Widget"})
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function (a) {
    var b = {};
    ko.bindingHandlers["mobiscroll.timer"] = {
        init: function (d, c, e, g, f) {
            var h = {
                lap: e()["mobiscroll.lap"],
                onStart: e()["mobiscroll.onStart"],
                onStop: e()["mobiscroll.onStop"],
                onReset: e()["mobiscroll.onReset"],
                onFinish: e()["mobiscroll.onFinish"]
            };
            mobiscroll.ko.initializeGenericComponent(d, c, e, g, f, "timer", h, "change", function (c, d) {
                var e = a(c), f = d();
                b[c.id] = !0;
                f(e.mobiscroll("getEllapsedTime"))
            })
        }, update: function (d, c) {
            var e = ko.utils.unwrapObservable(c());
            if (!b[d.id] && void 0 !== e) {
                var g = a(d);
                g.mobiscroll("setEllapsedTime", e);
                e = g.mobiscroll("getInst");
                g.val(e._value)
            }
            b[d.id] = !1
        }
    }
})($);
(function () {
    ko.bindingHandlers["mobiscroll.colorpicker"] = ko.bindingHandlers["mobiscroll.color"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "colorpicker")
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.rangepicker"] = ko.bindingHandlers["mobiscroll.range"] = {
        init: function (a, b, d, c, e) {
            var g = {onDayChange: d()["mobiscroll.onDayChange"], onMonthChange: d()["mobiscroll.onMonthChange"]};
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "rangepicker", g)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.rating"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "rating", null)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.date"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "date", null)
        }, update: mobiscroll.ko.updateGenericComponent
    };
    ko.bindingHandlers["mobiscroll.time"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "time", null)
        }, update: mobiscroll.ko.updateGenericComponent
    };
    ko.bindingHandlers["mobiscroll.datetime"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "datetime", null, "change")
        },
        update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.select"] = {
        init: function (a, b, d, c, e) {
            var g = {}, f = d();
            f["mobiscroll-data"] && (f["mobiscroll-data"].subscribe(function () {
                $(a).mobiscroll("refresh")
            }), g = {data: f["mobiscroll-data"]()});
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "select", g)
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.list"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "list")
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    ko.bindingHandlers["mobiscroll.image"] = {
        init: function (a, b, d, c, e) {
            mobiscroll.ko.initializeGenericComponent(a, b, d, c, e, "image")
        }, update: mobiscroll.ko.updateGenericComponent
    }
})();
(function () {
    function a(a, b, c, d) {
        1 == a.length && a.is("li") || $(a[0]).is("li") ? (a = a.clone(), $(a[0]).addClass(!1 !== d ? "mbsc-lv-repeat-animation" : "").attr("ng-repeat-start", "item in " + b), $(a).filter("li").eq(-1).addClass(!1 !== d ? "mbsc-lv-repeat-animation" : "").attr("ng-repeat-end", "").attr("mobiscroll-listview-item", c)) : (a = $("<li></li>").append(a.clone()), a.addClass(!1 !== d ? "mbsc-lv-repeat-animation" : "").attr("ng-repeat", "item in " + b).attr("mobiscroll-listview-item", c));
        return a
    }

    function b(a) {
        var c = 0, d = 0;
        if (!a)return c;
        for (d; d < a.length; d++)c++, a[d].children && a[d].children.length && (c += b(a[d].children));
        return c
    }

    var d, c = +new Date, e = [];
    try {
        d = angular.module("ngAnimate")
    } catch (g) {
    }
    d && e.push("ngAnimate");
    angular.module("mobiscroll-listview", e).directive("mobiscrollListviewItem", ["$rootScope", "$compile", "$timeout", function (a, b, c) {
        return {
            link: function (d, e, g) {
                var n = e.parent("ul"), g = g.mobiscrollListviewItem, q = a.msNodeCounts[g],
                    A = e.parents(".mbsc-lv-cont").length;
                q.nodesLeft--;
                if (n && (A || 0 === q.nodesLeft))if (A) {
                    var D = n.children("li").not(".mbsc-lv-back").index(e);
                    e.addClass("mbsc-lv-item").hide();
                    n.hasClass("mbsc-lv-root") ? c(function () {
                        n.mobiscroll("add", null, e.show(), D, void 0, n)
                    }) : c(function () {
                        n.prepend(n.children(".mbsc-lv-back"));
                        var a = n.parent("li");
                        q.rootNode.mobiscroll("add", null, e.show(), D, void 0, a.length ? a : n)
                    })
                } else d.$emit("mbscLvLastItemAdded", q.rootNode);
                e.append(b('<div style="display:none;"><ul><li' + (e.hasClass("mbsc-lv-repeat-animation") ? ' class="mbsc-lv-repeat-animation"' : "") + ' mobiscroll-listview-hitem="' + g + '" ng-repeat="item in item.children"></li></ul></div>')(d));
                d.$emit("listItemAdded", e);
                d.$on("$destroy", function () {
                    d.$emit("listItemRemoved")
                })
            }
        }
    }]).directive("mobiscrollListviewHitem", ["$rootScope", "$compile", "$timeout", function (b, c, d) {
        return {
            link: function (e, g, k) {
                var n = g.parent(), q = n.parent().hasClass("mbsc-lv-ng-initialized");
                1 >= n.children("li").not(".mbsc-lv-back").length && !q && (k = k.mobiscrollListviewHitem, n.parent().addClass("mbsc-lv-ng-initialized").parent().append(c($("<ul></ul>").append(a(b.msTemplates[k], "item.children", k, g.hasClass("mbsc-lv-repeat-animation"))))(e.$parent)),
                    d(function () {
                    }));
                e.$on("$destroy", function () {
                    if (n && !n.children("li").length) {
                        n = n.parent().parent().children("ul");
                        n.remove()
                    }
                })
            }
        }
    }]).directive("mobiscrollListview", ["$compile", "$parse", "$rootScope", "$timeout", function (d, e, g, o) {
        return {
            restrict: "A", require: "?ngModel", compile: function (e) {
                var h = c++, n = $($.parseHTML($.trim(e.html().replace(/(mbsc-ng-)|(ms-ng-)/g, "ng-"))));
                return function (c, e, i, F) {
                    var r, w;
                    F || i.mobiscrollData ? (r = c.$eval(i.mobiscrollListview || "{}"), w = i.mobiscrollData || i.ngModel) : (r = c.$eval(i.mobiscrollOptions ||
                        "{}"), w = i.mobiscrollListview);
                    F = b(c.$eval(w));
                    g.msNodeCounts = g.msNodeCounts || [];
                    g.msNodeCounts[h] = {rootNode: e, allNodes: F, nodesLeft: F};
                    g.msTemplates = g.msTemplates || [];
                    g.msTemplates[h] = n;
                    w = $("<div></div>").append(a(n, w, h, r.animation));
                    w = d(w)(c).contents().unwrap();
                    e.html(w);
                    c.$on("mbscLvLastItemAdded", function (a, b) {
                        e[0] == b[0] && o(function () {
                            e.mobiscroll().listview(r);
                            i.mobiscrollInstance && (c[i.mobiscrollInstance] = e.mobiscroll("getInst"))
                        })
                    });
                    0 === F && c.$emit("mbscLvLastItemAdded", e)
                }
            }
        }
    }]);
    d && angular.module("mobiscroll-listview").animation(".mbsc-lv-repeat-animation",
        function () {
            return {
                leave: function (a, b) {
                    a.closest(".mbsc-lv-cont").find(".mbsc-lv-root").mobiscroll("remove", a, "right", b)
                }
            }
        })
})($);
(function () {
    angular.module("mobiscroll-form", []).directive("mobiscrollForm", [function () {
        return {
            restrict: "A", link: function (a, b, d) {
                d = mobiscroll.ng.getInitOptions(a, d, "mobiscrollForm", !0);
                b.mobiscroll().form(d);
                a.$on("mbscFormRefresh", function () {
                    b.mobiscroll("refresh")
                })
            }
        }
    }])
})($);
(function () {
    function a(a, d, c, e, g, f) {
        c = c.mobiscroll("getVal");
        !isNaN(parseFloat(c)) && isFinite(c) && (c = parseFloat(c));
        f ? f.$setViewValue(c) : (a = a(g[d]).assign, a(e, c))
    }

    angular.module("mobiscroll-numpad", []).directive("mobiscrollNumpad", ["$parse", function (b) {
        return mobiscroll.ng.getDDO(b, "mobiscrollNumpad", {component: "Numpad"}, null, a)
    }])
})($);
(function () {
    angular.module("mobiscroll-measurement", []).directive("mobiscrollTemperature", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollTemperature", {preset: "temperature"})
    }]).directive("mobiscrollSpeed", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollSpeed", {preset: "speed"})
    }]).directive("mobiscrollMass", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollMass", {preset: "mass"})
    }]).directive("mobiscrollForce", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a,
            "mobiscrollForce", {preset: "force"})
    }]).directive("mobiscrollDistance", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollDistance", {preset: "distance"})
    }])
})($);
(function () {
    function a(a, b) {
        if (void 0 !== b) {
            var e = a.mobiscroll("getInst");
            a.mobiscroll("setEvents", b);
            a.val(e._value)
        }
    }

    function b(a) {
        a = a.mobiscroll("getEvents");
        return Array.isArray(a) && !a.length ? null : a
    }

    angular.module("mobiscroll-calendar", []).directive("mobiscrollCalendar", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollCalendar", {preset: "calendar"})
    }]).directive("mobiscrollEventCalendar", ["$parse", function (d) {
        return mobiscroll.ng.getDDO(d, "mobiscrollEventCalendar", {
            preset: "calendar",
            events: []
        }, a, function () {
        }, b)
    }])
})();
(function () {
    angular.module("mobiscroll-timespan", []).directive("mobiscrollTimespan", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollTimespan", {preset: "timespan"})
    }])
})($);
(function () {
    angular.module("mobiscroll-number", []).directive("mobiscrollNumber", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollNumber", {preset: "number"})
    }])
})($);
(function () {
    var a = ["ng-repeat", "ng:repeat", "data-ng-repeat", "x-ng-repeat", "ng_repeat"];
    angular.module("mobiscroll-menustrip", []).directive("mobiscrollRepeatRender", function () {
        return function (a) {
            a.$emit("mbscRepeatRender")
        }
    }).directive("mobiscrollMenustrip", ["$parse", "$timeout", function (b, d) {
        var c = mobiscroll.ng.getDDO(b, "mobiscrollMenustrip", {component: "MenuStrip"}, function () {
        }, function () {
        });
        c.compile = function (c) {
            var g, f;
            c.find("li").each(function () {
                for (f = 0; f < a.length; f++)if ($(this).attr(a[f]))return g =
                    !0, !1
            });
            g && c.children().attr("mobiscroll-repeat-render", "");
            return function (a, c, e) {
                var f, k = a.$eval(e.mobiscrollMenustrip || "{}");
                g ? a.$on("mbscRepeatRender", function () {
                    clearTimeout(f);
                    f = setTimeout(function () {
                        c.mobiscroll().menustrip(k);
                        if (e.mobiscrollInstance) {
                            var d = b(e.mobiscrollInstance).assign;
                            d(a, c.mobiscroll("getInst"))
                        }
                    }, 1)
                }) : c.children().length && d(function () {
                        c.mobiscroll().menustrip(k);
                        if (e.mobiscrollInstance) {
                            var d = b(e.mobiscrollInstance).assign;
                            d(a, c.mobiscroll("getInst"))
                        }
                    })
            }
        };
        return c
    }])
})($);
(function () {
    angular.module("mobiscroll-widget", []).directive("mobiscrollWidget", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollWidget", {component: "Widget"})
    }])
})($);
(function () {
    function a(a, b, d, f, h, j) {
        j ? j.$setViewValue(d.mobiscroll("getEllapsedTime")) : (a = a(h[b]).assign, a(f, d.mobiscroll("getEllapsedTime")))
    }

    function b(a, b) {
        a.mobiscroll("setEllapsedTime", b, !1);
        a.val(a.mobiscroll("getInst")._value)
    }

    function d(a) {
        return a.mobiscroll("getEllapsedTime")
    }

    angular.module("mobiscroll-timer", []).directive("mobiscrollTimer", ["$parse", function (c) {
        return mobiscroll.ng.getDDO(c, "mobiscrollTimer", {preset: "timer"}, b, a, d)
    }])
})($);
(function () {
    angular.module("mobiscroll-colorpicker", []).directive("mobiscrollColorpicker", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollColorpicker", {preset: "colorpicker"})
    }]);
    angular.module("mobiscroll-color", []).directive("mobiscrollColor", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollColor", {preset: "color"})
    }])
})($);
(function () {
    angular.module("mobiscroll-rangepicker", []).directive("mobiscrollRangepicker", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollRangepicker", {preset: "rangepicker"})
    }]);
    angular.module("mobiscroll-range", []).directive("mobiscrollRange", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollRange", {preset: "range"})
    }])
})($);
(function () {
    angular.module("mobiscroll-rating", []).directive("mobiscrollRating", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollRating", {preset: "rating"})
    }])
})($);
(function () {
    angular.module("mobiscroll-datetime", []).directive("mobiscrollDatetime", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollDatetime", {preset: "datetime"})
    }]).directive("mobiscrollDate", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollDate", {preset: "date"})
    }]).directive("mobiscrollTime", ["$parse", function (a) {
        return mobiscroll.ng.getDDO(a, "mobiscrollTime", {preset: "time"})
    }])
})($);
(function (a) {
    angular.module("mobiscroll-select", []).directive("mobiscrollSelectOption", function () {
        return {
            link: function (a, d, c) {
                var e = d.closest("select");
                a.$watch(c.ngValue, function () {
                    a.$emit("MobiscrollReInitialize", e)
                });
                a.$on("$destroy", function () {
                    a.$emit("MobiscrollReInitialize", e)
                })
            }
        }
    }).directive("mobiscrollSelect", ["$parse", function (b) {
        var d = mobiscroll.ng.getDDO(b, "mobiscrollSelect", {preset: "select"});
        d.link = void 0;
        d.compile = function (c) {
            for (var d = !1, c = a(c).find("option"), g = 0; g < c.length; g++)if (a(c[g]).attr("ng-repeat") ||
                a(c[g]).attr("ng:repeat") || a(c[g]).attr("data-ng-repeat") || a(c[g]).attr("x-ng-repeat") || a(c[g]).attr("ng_repeat")) {
                a(c[g]).attr("mobiscroll-select-option", "");
                d = !0;
                break
            }
            return function (a, c, g, o) {
                var i = mobiscroll.ng.getInitOptions(a, g, "mobiscrollSelect", o), k;
                g.mobiscrollData && (angular.extend(i, {data: a.$eval(g.mobiscrollData) || []}), a.$watchCollection(g.mobiscrollData, function () {
                    var b = c.mobiscroll("getInst"), d = a.$eval(g.mobiscrollData);
                    b.settings.data != d && (b.settings.data = d);
                    c.mobiscroll("refresh")
                }));
                mobiscroll.ng.addWatch(b, a, o, mobiscroll.ng.genericRender, mobiscroll.ng.genericParser, c, g, "mobiscrollSelect");
                if (d) a.$on("MobiscrollReInitialize", function (d, e) {
                    if (c[0] == e[0]) {
                        clearTimeout(k);
                        k = setTimeout(function () {
                            c.mobiscroll().select(i);
                            o ? mobiscroll.ng.genericRender(c, o.$modelValue) : mobiscroll.ng.genericRender(c, b(g.mobiscrollSelect)(a));
                            if (g.mobiscrollInstance) {
                                var d = b(g.mobiscrollInstance).assign;
                                d(a, c.mobiscroll("getInst"))
                            }
                        }, 10)
                    }
                }); else if (c.mobiscroll().select(i), g.mobiscrollInstance) {
                    var n =
                        b(g.mobiscrollInstance).assign;
                    n(a, c.mobiscroll("getInst"))
                }
                c.on("change", function () {
                    a.$apply(function () {
                        mobiscroll.ng.genericRead(b, "mobiscrollSelect", c, a, g, o)
                    })
                })
            }
        };
        return d
    }])
})($);
(function () {
    var a = ["ng-repeat", "ng:repeat", "data-ng-repeat", "x-ng-repeat", "ng_repeat"];
    angular.module("mobiscroll-list", []).directive("mobiscrollRepeatRender", function () {
        return function (a) {
            a.$emit("mbscRepeatRender")
        }
    }).directive("mobiscrollList", ["$parse", function (b) {
        var d = mobiscroll.ng.getDDO(b, "mobiscrollList", {preset: "list"});
        d.compile = function (c) {
            var d, g;
            c.find("li").each(function () {
                for (g = 0; g < a.length; g++)if ($(this).attr(a[g]))return d = !0, !1
            });
            d && c.children().attr("mobiscroll-repeat-render",
                "");
            return function (a, c, g, o) {
                var i, k = mobiscroll.ng.getInitOptions(a, g, "mobiscrollList", o);
                mobiscroll.ng.addWatch(b, a, o, mobiscroll.ng.genericRender, mobiscroll.ng.genericParser, c, g, "mobiscrollList");
                if (d) a.$on("mbscRepeatRender", function () {
                    clearTimeout(i);
                    i = setTimeout(function () {
                        c.mobiscroll().treelist(k);
                        if (g.mobiscrollInstance) {
                            var d = b(g.mobiscrollInstance).assign;
                            d(a, c.mobiscroll("getInst"))
                        }
                    }, 1)
                }); else if (c.children().length && (c.mobiscroll().treelist(k), g.mobiscrollInstance)) {
                    var n = b(g.mobiscrollInstance).assign;
                    n(a, c.mobiscroll("getInst"))
                }
                c.on("change", function () {
                    a.$apply(function () {
                        mobiscroll.ng.genericRead(b, "mobiscrollList", c, a, g, o)
                    })
                })
            }
        };
        return d
    }])
})($);
(function () {
    var a = ["ng-repeat", "ng:repeat", "data-ng-repeat", "x-ng-repeat", "ng_repeat"];
    angular.module("mobiscroll-image", []).directive("mobiscrollRepeatRender", function () {
        return function (a) {
            a.$emit("mbscRepeatRender")
        }
    }).directive("mobiscrollImage", ["$parse", function (b) {
        var d = mobiscroll.ng.getDDO(b, "mobiscrollImage", {preset: "image"});
        d.compile = function (c) {
            var d, g;
            c.find("li").each(function () {
                for (g = 0; g < a.length; g++)if ($(this).attr(a[g]))return d = !0, !1
            });
            d && c.children().attr("mobiscroll-repeat-render",
                "");
            return function (a, c, g, o) {
                var i, k = mobiscroll.ng.getInitOptions(a, g, "mobiscrollImage", o);
                mobiscroll.ng.addWatch(b, a, o, mobiscroll.ng.genericRender, mobiscroll.ng.genericParser, c, g, "mobiscrollImage");
                if (d) a.$on("mbscRepeatRender", function () {
                    clearTimeout(i);
                    i = setTimeout(function () {
                        c.mobiscroll().image(k);
                        if (g.mobiscrollInstance) {
                            var d = b(g.mobiscrollInstance).assign;
                            d(a, c.mobiscroll("getInst"))
                        }
                    }, 1)
                }); else if (c.children().length && (c.mobiscroll().image(k), g.mobiscrollInstance)) {
                    var n = b(g.mobiscrollInstance).assign;
                    n(a, c.mobiscroll("getInst"))
                }
                c.on("change", function () {
                    a.$apply(function () {
                        mobiscroll.ng.genericRead(b, "mobiscrollImage", c, a, g, o)
                    })
                })
            }
        };
        return d
    }])
})($);
(function () {
    mobiscroll.listview = function (a, b, d, c) {
        function e(a, b, c, d) {
            if (b == a)return c;
            c = c.children("li").not(".mbsc-lv-back");
            if (c.length && a)for (var g = 0; g < c.length; g++) {
                var k = $(c[g]).children("ul");
                if (!k.length) {
                    var n = $(c[g]).data("ref"), n = d.find('li.mbsc-lv-back[data-back="' + n + '"]');
                    n.length && (k = n.parent("ul"))
                }
                var n = a.at(g).get("children"), q = !1;
                if (k.length && n) q = e(n, b, k, d); else if (!k.length && n == b)return $(c[g]);
                if (q)return q
            }
            return !1
        }

        function g(a, b, c) {
            var d = "";
            b.forEach(function (b) {
                var c = b.get("children"),
                    e = d, b = "<li>" + _.template(a)(b.toJSON()), c = c && c.length ? "<ul>" + g(a, c) + "</ul>" : "";
                d = e + (b + c + "</li>")
            }, c);
            return d
        }

        d = d || {};
        return {
            initialize: function () {
                var d = this.model.get(a);
                d.on("add mobiscrollListviewAddChild", function (a, g) {
                    var o = c.html(), o = _.template(o, a.toJSON()), i = 1 == g.length ? 0 : void 0,
                        k = this.$el.find(b), n = e(d, g, k, k.closest(".mbsc-lv-cont"));
                    k.mobiscroll("add", g.length, o, i, void 0, n)
                }, this);
                d.on("remove mobiscrollListviewRemoveChild", function (a, c, g) {
                    a = this.$el.find(b);
                    var g = g.index, i = a.closest(".mbsc-lv-cont"),
                        c = c == d ? a.children("li").not(".mbsc-lv-back").eq(g) : e(d, c, a, i).children("li").not(".mbsc-lv-back").eq(g);
                    a.mobiscroll("remove", c)
                }, this)
            }, render: function () {
                this.$el.find(b).data("view-model", this.model);
                var e = "", e = this.model.get(a), e = g(c.html(), e, this);
                this.$el.find(b).html(e);
                this.$el.find(b).mobiscroll().listview(d)
            }
        }
    }
})($);
(function () {
    mobiscroll.form = function (a) {
        return {
            render: function () {
                this.$el.mobiscroll().form(a)
            }
        }
    }
})($);
(function (a) {
    mobiscroll.numpad = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {component: "Numpad"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.temperature = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "temperature"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    };
    mobiscroll.speed = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "speed"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    };
    mobiscroll.mass = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "mass"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    };
    mobiscroll.force = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "force"});
        return mobiscroll.bb.getComponentMixin(b, d,
            c, e)
    };
    mobiscroll.distance = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "distance"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    function b(a, b, e, g) {
        b = g.$el.find(b);
        b.mobiscroll(e);
        e = b.mobiscroll("getInst");
        b.mobiscroll("setEvents", g.model.get(a));
        b.val(e._value)
    }

    mobiscroll.calendar = function (b, c, e, g) {
        e = e || {};
        a.extend(e, {preset: "calendar"});
        return mobiscroll.bb.getComponentMixin(b, c, e, g)
    };
    mobiscroll.calendarEvents = function (d, c, e, g) {
        e = e || {};
        a.extend(e, {preset: "calendar", events: []});
        return mobiscroll.bb.getComponentMixin(d, c, e, g, void 0, b)
    }
})($);
(function (a) {
    mobiscroll.timespan = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "timespan"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.number = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "number"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.menustrip = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {component: "MenuStrip"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.widget = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {component: "Widget"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    function b(a, b, d) {
        b = d.$el.find(b).mobiscroll("getEllapsedTime");
        d.model.set(a, b)
    }

    function d(a, b, d, f) {
        b = f.$el.find(b);
        b.mobiscroll(d);
        a = b.mobiscroll("setEllapsedTime", f.model.get(a)).mobiscroll("getInst");
        b.val(a._value)
    }

    mobiscroll.timer = function (c, e, g, f) {
        g = g || {};
        a.extend(g, {preset: "timer"});
        return mobiscroll.bb.getComponentMixin(c, e, g, f, b, d)
    }
})($);
(function (a) {
    mobiscroll.colorpicker = mobiscroll.color = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "colorpicker"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.rangepicker = mobiscroll.range = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "rangepicker"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.rating = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "rating"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.date = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "date"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    };
    mobiscroll.time = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "time"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    };
    mobiscroll.datetime = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "datetime"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.select = function (b, d, c, e, g) {
        c = c || {};
        a.extend(c, {preset: "select"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e, void 0, function (b, c, d, e) {
            var i = {};
            g && (i = {data: e.model.get(g).toJSON()});
            a.extend(d, i);
            e.$el.find(c).mobiscroll(d).mobiscroll("setVal", e.model.get(b), !0, !1)
        }, function (a) {
            if (g) a.model.get(g).on("add remove reset sort change", function () {
                var a = this.$el.find(d).mobiscroll("getInst");
                a.settings.data = this.model.get(g).toJSON();
                a.refresh()
            }, a)
        })
    }
})($);
(function (a) {
    mobiscroll.list = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "list"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.image = function (b, d, c, e) {
        c = c || {};
        a.extend(c, {preset: "image"});
        return mobiscroll.bb.getComponentMixin(b, d, c, e)
    }
})($);
(function (a) {
    mobiscroll.ember.listItemHelper = function () {
        return Ember.View.extend({
            tagName: "li", init: function () {
                this._super();
                var b, d = this.get("_parentView.templateID"),
                    c = this.dataAttributeBindings = this.get("_parentView.childAttributes");
                b = a("#" + d).html();
                this.getModel().children && (b += '{{#if view.content.children.length}}{{#with view.content.children}}{{mobiscroll-listview templateID="' + d + '" childAttributes="' + c + '"}}{{/with}}{{/if}}</li>');
                this.layout = Ember.Handlebars.compile(b)
            }, layout: function () {
            },
            didInsertElement: function () {
                var a = this.$(), d = this.get("dataAttributeBindings");
                if (d && (d = d.replace(/\s{2,}/g, " "), (d = d.split(" ")).length))for (var c = 0; c < d.length; c++) {
                    var e = d[c].split(":"), g = e[0], f = this.get("content." + g);
                    2 == e.length && (g = e[1]);
                    a.attr("data-" + g, f)
                }
            }, getModel: function () {
                return this.get("content")
            }, isTopLevel: function () {
                var a = this.get("parentView");
                return a && a.isTopLevel ? !1 : !0
            }, isInitialized: function () {
                return this.get("parentView").isInitialized()
            }
        })
    };
    mobiscroll.ember.listHelper = function () {
        return Ember.CollectionView.extend({
            tagName: "ul",
            init: function () {
                this.set("content", this.getModel());
                this._super()
            }, getModel: function () {
                var a = this.get("parentView");
                return a && a.getModel ? a.getModel().children : this.get("controller.model." + this.get("value"))
            }, isInitialized: function () {
                var a = this.get("parentView");
                return a && a.isInitialized ? a.isInitialized() : this.get("mobiscrollInitialized")
            }, isTopLevel: function () {
                var a = this.get("parentView");
                return !(a && a.isTopLevel)
            }, createChildView: function (a, d) {
                return this._super(mobiscroll.ember.listItemHelper(),
                    d)
            }, didInsertElement: function () {
                this.isTopLevel() && Ember.run.scheduleOnce("afterRender", this, function () {
                    var a = {};
                    this.options && (a = (new Function("controller", "return " + this.options))(this.get("controller")));
                    this.$().mobiscroll().listview(a);
                    this.set("mobiscrollInitialized", !0)
                })
            }, removing: null, arrayWillChange: function (a, d, c) {
                this.isInitialized() && 0 < c && (this.removing = {
                    li: this.$().children("li").not(".mbsc-lv-removing").not(".mbsc-lv-back").slice(d, d + c),
                    index: d
                });
                return this._super(a, d, c)
            }, arrayDidChange: function (a,
                                         d, c, e) {
                if (this.isInitialized())if (0 < e) Ember.run.scheduleOnce("afterRender", this, function () {
                    var a = this.$().closest(".mbsc-lv-cont").find("ul.mbsc-lv-root"), b = this.$(), c = b.parent("li");
                    if (b.hasClass("mbsc-lv-sl-curr")) {
                        var f = this.get("parentView").$();
                        f.is("li") && (c = f)
                    }
                    for (f = 0; f < e; f++) {
                        var g = b.find(" > li").not(".mbsc-lv-back").eq(d + f);
                        a.mobiscroll("add", null, g, !1, void 0, c.length ? c : b)
                    }
                }); else if (0 < c) {
                    var g = this.removing;
                    if (g) {
                        g.li.addClass("mbsc-lv-removing");
                        if (0 === g.index) this.$().append(g.li); else {
                            var f =
                                    this.$().children("li").not(".mbsc-lv-removing").not(".mbsc-lv-back").eq(g.index - 1),
                                h = f.next();
                            h.length && h.is("script") && 0 <= h.attr("id").indexOf("-end") ? h.after(g.li) : f.after(g.li)
                        }
                        f = this.$().closest(".mbsc-lv-cont").find("ul.mbsc-lv-root");
                        for (h = 0; h < g.li.length; h++)f.mobiscroll("remove", g.li.eq(h))
                    }
                }
                return this._super(a, d, c, e)
            }
        })
    };
    Ember.Handlebars.helper("mobiscroll-listview", mobiscroll.ember.listHelper());
    Ember.Handlebars.helper("mobiscroll-listitem-helper", mobiscroll.ember.listItemHelper())
})($);
(function () {
    function a() {
        return {layout: Ember.Handlebars.compile("{{yield}}")}
    }

    function b(a, b) {
        a.mobiscroll().form(b)
    }

    mobiscroll.ember.form = function () {
        return mobiscroll.ember.getEmberMobiscrollView(b, void 0, void 0, a, null)
    };
    Ember.Handlebars.helper("mobiscroll-form", mobiscroll.ember.form())
})($);
(function () {
    function a(a, d, c, e) {
        $.extend(d, {component: "Numpad"}, e);
        a.mobiscroll(d)
    }

    mobiscroll.ember.numpad = function () {
        return mobiscroll.ember.getEmberMobiscrollView(a)
    };
    Ember.Handlebars.helper("mobiscroll-numpad", mobiscroll.ember.numpad())
})($);
(function () {
    mobiscroll.ember.temperature = function () {
        return mobiscroll.ember.getEmberMobiscrollView("temperature")
    };
    mobiscroll.ember.distance = function () {
        return mobiscroll.ember.getEmberMobiscrollView("distance")
    };
    mobiscroll.ember.speed = function () {
        return mobiscroll.ember.getEmberMobiscrollView("speed")
    };
    mobiscroll.ember.force = function () {
        return mobiscroll.ember.getEmberMobiscrollView("force")
    };
    mobiscroll.ember.mass = function () {
        return mobiscroll.ember.getEmberMobiscrollView("mass")
    };
    Ember.Handlebars.helper("mobiscroll-temperature",
        mobiscroll.ember.temperature());
    Ember.Handlebars.helper("mobiscroll-distance", mobiscroll.ember.distance());
    Ember.Handlebars.helper("mobiscroll-speed", mobiscroll.ember.speed());
    Ember.Handlebars.helper("mobiscroll-force", mobiscroll.ember.force());
    Ember.Handlebars.helper("mobiscroll-mass", mobiscroll.ember.mass())
})($);
(function () {
    function a(a, d, c) {
        d = d.get("controller.model." + c);
        null !== d && void 0 !== d && a.mobiscroll("setEvents", d)
    }

    mobiscroll.ember.calendar = function () {
        return mobiscroll.ember.getEmberMobiscrollView("calendar")
    };
    mobiscroll.ember.eventCalendar = function () {
        return mobiscroll.ember.getEmberMobiscrollView("calendar", a, function () {
        }, void 0, void 0, {events: []}, {
            willChange: function () {
            }, didChange: a
        })
    };
    Ember.Handlebars.helper("mobiscroll-calendar", mobiscroll.ember.calendar());
    Ember.Handlebars.helper("mobiscroll-event-calendar",
        mobiscroll.ember.eventCalendar())
})($);
(function () {
    mobiscroll.ember.timespan = function () {
        return mobiscroll.ember.getEmberMobiscrollView("timespan")
    };
    Ember.Handlebars.helper("mobiscroll-timespan", mobiscroll.ember.timespan())
})($);
(function () {
    mobiscroll.ember.number = function () {
        return mobiscroll.ember.getEmberMobiscrollView("number")
    };
    Ember.Handlebars.helper("mobiscroll-number", mobiscroll.ember.number())
})($);
(function () {
    function a(a, b, e, g) {
        $.extend(b, {component: "MenuStrip"}, g);
        a.mobiscroll(b)
    }

    function b() {
        return {layout: Ember.Handlebars.compile("<ul>{{yield}}</ul>")}
    }

    mobiscroll.ember.menustrip = function () {
        return mobiscroll.ember.getEmberMobiscrollView(a, void 0, void 0, b, "ul")
    };
    Ember.Handlebars.helper("mobiscroll-menustrip", mobiscroll.ember.menustrip())
})($);
(function () {
    function a(a, b, e, g) {
        $.extend(b, {component: "Widget"}, g);
        a.mobiscroll(b)
    }

    function b() {
        return {layout: Ember.Handlebars.compile("<div>{{yield}}</div>")}
    }

    mobiscroll.ember.widget = function () {
        return mobiscroll.ember.getEmberMobiscrollView(a, void 0, void 0, b, "div")
    };
    Ember.Handlebars.helper("mobiscroll-widget", mobiscroll.ember.widget())
})($);
(function () {
    function a(a, b, g) {
        d[a.attr("id")] || (b = b.get("controller.model." + g), null !== b && void 0 !== b && (a.mobiscroll("setEllapsedTime", b), a.val(a.mobiscroll("getInst")._value)))
    }

    function b(a, b) {
        var g = b.get("value"), f = b.get("controller.model");
        d[a.attr("id")] = !0;
        f.set(g, a.mobiscroll("getEllapsedTime"));
        d[a.attr("id")] = !1
    }

    mobiscroll.ember.timer = function () {
        return mobiscroll.ember.getEmberMobiscrollView("timer", a, b)
    };
    Ember.Handlebars.helper("mobiscroll-timer", mobiscroll.ember.timer());
    var d = {}
})($);
(function () {
    mobiscroll.ember.colorpicker = function () {
        return mobiscroll.ember.getEmberMobiscrollView("colorpicker")
    };
    Ember.Handlebars.helper("mobiscroll-colorpicker", mobiscroll.ember.colorpicker());
    mobiscroll.ember.color = function () {
        return mobiscroll.ember.getEmberMobiscrollView("color")
    };
    Ember.Handlebars.helper("mobiscroll-color", mobiscroll.ember.color())
})($);
(function () {
    mobiscroll.ember.rangepicker = function () {
        return mobiscroll.ember.getEmberMobiscrollView("rangepicker", void 0)
    };
    Ember.Handlebars.helper("mobiscroll-rangepicker", mobiscroll.ember.rangepicker());
    mobiscroll.ember.range = function () {
        return mobiscroll.ember.getEmberMobiscrollView("range", void 0)
    };
    Ember.Handlebars.helper("mobiscroll-range", mobiscroll.ember.range())
})($);
(function () {
    mobiscroll.ember.rating = function () {
        return mobiscroll.ember.getEmberMobiscrollView("rating", void 0)
    };
    Ember.Handlebars.helper("mobiscroll-rating", mobiscroll.ember.rating())
})($);
(function () {
    mobiscroll.ember.dateTime = function () {
        return mobiscroll.ember.getEmberMobiscrollView("datetime")
    };
    mobiscroll.ember.date = function () {
        return mobiscroll.ember.getEmberMobiscrollView("date")
    };
    mobiscroll.ember.time = function () {
        return mobiscroll.ember.getEmberMobiscrollView("time")
    };
    Ember.Handlebars.helper("mobiscroll-date-time", mobiscroll.ember.dateTime());
    Ember.Handlebars.helper("mobiscroll-date", mobiscroll.ember.date());
    Ember.Handlebars.helper("mobiscroll-time", mobiscroll.ember.time())
})($);
(function () {
    function a(a, d, c) {
        d.get("controller.model").set(c, a.mobiscroll("getVal"))
    }

    mobiscroll.ember.select = function () {
        return Ember.CollectionView.extend({
            tagName: "select", didInsertElement: function () {
                this._super();
                var b = {};
                this.options && (b = (new Function("controller", "return " + this.options))(this.get("controller")));
                Ember.run.scheduleOnce("afterRender", this, function () {
                    var c = this.$();
                    c.mobiscroll().select(b);
                    c.mobiscroll("setVal", void 0, !0, !1);
                    a(c, this, this.get("selection"))
                });
                var d = this.$(), c = this,
                    e = this.get("selection");
                d.on("change", function () {
                    e && a(d, c, e)
                });
                this.get("controller.model").addObserver(e, this, function () {
                    var a = c.get("controller.model." + e);
                    d.mobiscroll("setVal", a, !0, !1)
                });
                this.addEnumerableObserver(this, {
                    willChange: function () {
                    }, didChange: function () {
                        d.mobiscroll("refresh")
                    }
                })
            }, itemViewClass: Ember.View.extend({
                tagName: "option",
                value: function () {
                    var a = this.get("_parentView").get("optionValuePath");
                    a || (a = "content");
                    return this.get(a)
                }.property("content"),
                label: function () {
                    var a = this.get("_parentView").get("optionLabelPath");
                    a || (a = "content");
                    return this.get(a)
                }.property("content"),
                attributeBindings: ["value"],
                template: Ember.Handlebars.compile("{{view.label}}")
            })
        })
    };
    Ember.Handlebars.helper("mobiscroll-select", mobiscroll.ember.select())
})($);
(function () {
    function a() {
        return {layout: Ember.Handlebars.compile("<ul>{{yield}}</ul>")}
    }

    mobiscroll.ember.list = function () {
        return mobiscroll.ember.getEmberMobiscrollView("list", void 0, void 0, a, "ul")
    };
    Ember.Handlebars.helper("mobiscroll-list", mobiscroll.ember.list())
})($);
(function () {
    function a() {
        return {layout: Ember.Handlebars.compile("<ul>{{yield}}</ul>")}
    }

    mobiscroll.ember.image = function () {
        return mobiscroll.ember.getEmberMobiscrollView("image", void 0, void 0, a, "ul")
    };
    Ember.Handlebars.helper("mobiscroll-image", mobiscroll.ember.image())
})($);
(function (a) {
    kendo.data.binders["mobiscroll-listview"] = kendo.data.binders.source.extend({
        init: function (b, d, c) {
            d.source = d["mobiscroll-listview"];
            var e = a(b).data("mobiscroll-options"), g = {};
            e && (g = (new Function("$root", "return " + e))(d["mobiscroll-listview"].parents[0]));
            this.optObj = g;
            kendo.data.binders.source.fn.init.call(this, b, d, c)
        }, refresh: function (b) {
            if (b && "remove" == b.action) b = a(this.element).find("li:eq(" + b.index + ")"), a(this.element).mobiscroll("remove", b); else if (b && "itemchange" == b.action && (b.action =
                    void 0), kendo.data.binders.source.fn.refresh.call(this, b), b && "add" == b.action) {
                var d = b.index, b = a(this.element).find("li:eq(" + d + ")");
                a(this.element).mobiscroll("add", null, b, d)
            }
        }, render: function () {
            kendo.data.binders.source.fn.render.call(this);
            var b = this.container();
            a(b).mobiscroll().listview(this.optObj)
        }
    })
})($);
(function () {
    kendo.data.binders["mobiscroll-form"] = kendo.data.Binder.extend({
        init: function (a, b) {
            $(a).on("mbscFormRefresh", function () {
                $(a).mobiscroll("refresh")
            });
            var d = mobiscroll.kendo.getMobiInitObject(a, b, "mobiscroll-form", {});
            $(a).mobiscroll().form(d)
        }, refresh: function () {
        }
    })
})();
(function () {
    kendo.data.binders["mobiscroll-numpad"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-numpad", {component: "Numpad"}))
})();
(function () {
    kendo.data.binders["mobiscroll-distance"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-distance", "distance"));
    kendo.data.binders["mobiscroll-speed"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-speed", "speed"));
    kendo.data.binders["mobiscroll-force"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-force", "force"));
    kendo.data.binders["mobiscroll-mass"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-mass",
        "mass"));
    kendo.data.binders["mobiscroll-temperature"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-temperature", "temperature"))
})();
(function (a) {
    kendo.data.binders["mobiscroll-calendar"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-calendar", "calendar"));
    kendo.data.binders["mobiscroll-event-calendar"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-event-calendar", "calendar", function (b, d) {
        if (void 0 !== d) {
            var c = a(b);
            c.mobiscroll("setEvents", d);
            c.val(c.mobiscroll("getInst")._value)
        }
    }, function () {
    }, {events: []}))
})($);
(function () {
    kendo.data.binders["mobiscroll-timespan"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-timespan", "timespan"))
})();
(function () {
    kendo.data.binders["mobiscroll-number"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-number", "number"))
})();
(function () {
    kendo.data.binders["mobiscroll-menustrip"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-menustrip", {component: "MenuStrip"}))
})();
(function () {
    kendo.data.binders["mobiscroll-widget"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-widget", {component: "Widget"}))
})();
(function (a) {
    var b = {};
    kendo.data.binders["mobiscroll-timer"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-timer", "timer", function (d, c) {
        if (!b[d.id] && c) {
            var e = a(d), g = e.mobiscroll("setEllapsedTime", c).mobiscroll("getInst");
            e.val(g._value)
        }
        b[d.id] = !1
    }, function (d, c, e) {
        b[e.id] = !0;
        d.set(a(e).mobiscroll("getEllapsedTime"))
    }))
})($);
(function () {
    kendo.data.binders["mobiscroll-colorpicker"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-colorpicker", "colorpicker"));
    kendo.data.binders["mobiscroll-color"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-color", "colorpicker"))
})();
(function () {
    kendo.data.binders["mobiscroll-rangepicker"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-rangepicker", "rangepicker"));
    kendo.data.binders["mobiscroll-range"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-range", "range"))
})();
(function () {
    kendo.data.binders["mobiscroll-rating"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-rating", "rating"))
})();
(function () {
    kendo.data.binders["mobiscroll-date"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-date", "date"));
    kendo.data.binders["mobiscroll-datetime"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-datetime", "datetime"));
    kendo.data.binders["mobiscroll-time"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-time", "time"))
})();
(function () {
    kendo.data.binders["mobiscroll-select"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-select", "select", void 0, void 0, void 0, function (a, b, d) {
        kendo.data.Binder.fn.init.call(this, a, b, d);
        var c = $(a).data("mobiscroll-options"), d = {};
        c && (d = (new Function("$root", "return " + c))(b["mobiscroll-select"].parents[0]));
        c = {};
        if (b["mobiscroll-data"]) {
            var e = b["mobiscroll-data"].get(), c = {data: e};
            e.bind("change", function () {
                $(g.element).mobiscroll("refresh")
            })
        }
        var d = $.extend(!0, {preset: "select"},
            d, c), g = this;
        $(g.element).on("change", function () {
            g.change(b, a)
        }).mobiscroll(d)
    }));
    kendo.data.binders["mobiscroll-data"] = kendo.data.Binder.extend({
        init: function () {
        }, refresh: function () {
        }
    })
})();
(function () {
    kendo.data.binders["mobiscroll-list"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-list", "list"))
})();
(function () {
    kendo.data.binders["mobiscroll-image"] = kendo.data.Binder.extend(mobiscroll.kendo.getMobiBinder("mobiscroll-image", "image"))
})();
/*
 * Translated default messages for the jQuery validation plugin.
 * Locale: ZH (Chinese, 中文 (Zhōngwén), 汉语, 漢語)
 */

$.extend( $.validator.messages, {
	required: "这是必填字段",
	remote: "请修正此字段",
	email: "请输入有效的电子邮件地址",
	url: "请输入有效的网址",
	date: "请输入有效的日期",
	dateISO: "请输入有效的日期 (YYYY-MM-DD)",
	number: "请输入有效的数字",
	digits: "只能输入数字",
	creditcard: "请输入有效的信用卡号码",
	equalTo: "你的输入不相同",
	extension: "请输入有效的后缀",
	maxlength: $.validator.format( "最多可以输入 {0} 个字符" ),
	minlength: $.validator.format( "最少要输入 {0} 个字符" ),
	rangelength: $.validator.format( "请输入长度在 {0} 到 {1} 之间的字符串" ),
	range: $.validator.format( "请输入范围在 {0} 到 {1} 之间的数值" ),
	max: $.validator.format( "请输入不大于 {0} 的数值" ),
	min: $.validator.format( "请输入不小于 {0} 的数值" )
} );
/*!
 * =====================================================
 * SUI Mobile - http://m.sui.taobao.org/
 *
 * =====================================================
 */

;$.smVersion = "0.6.2";
+function ($) {
    "use strict";

    //全局配置
    var defaults = {
        autoInit: false, //自动初始化页面
        showPageLoadingIndicator: true, //push.js加载页面的时候显示一个加载提示
        router: true, //默认使用router
        swipePanel: "left", //滑动打开侧栏
        swipePanelOnlyClose: true  //只允许滑动关闭，不允许滑动打开侧栏
    };

    $.smConfig = $.extend(defaults, $.config);

}(jQuery);

+ function($) {
    "use strict";

    //比较一个字符串版本号
    //a > b === 1
    //a = b === 0
    //a < b === -1
    $.compareVersion = function(a, b) {
        var as = a.split('.');
        var bs = b.split('.');
        if (a === b) return 0;

        for (var i = 0; i < as.length; i++) {
            var x = parseInt(as[i]);
            if (!bs[i]) return 1;
            var y = parseInt(bs[i]);
            if (x < y) return -1;
            if (x > y) return 1;
        }
        return -1;
    };

    $.getCurrentPage = function() {
        return $(".page-current")[0] || $(".page")[0] || document.body;
    };

}(jQuery);

/* global WebKitCSSMatrix:true */

(function($) {
    "use strict";
    ['width', 'height'].forEach(function(dimension) {
        var  Dimension = dimension.replace(/./, function(m) {
            return m[0].toUpperCase();
        });
        $.fn['outer' + Dimension] = function(margin) {
            var elem = this;
            if (elem) {
                var size = elem[dimension]();
                var sides = {
                    'width': ['left', 'right'],
                    'height': ['top', 'bottom']
                };
                sides[dimension].forEach(function(side) {
                    if (margin) size += parseInt(elem.css('margin-' + side), 10);
                });
                return size;
            } else {
                return null;
            }
        };
    });

    //support
    $.support = (function() {
        var support = {
            touch: !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch)
        };
        return support;
    })();

    $.touchEvents = {
        start: $.support.touch ? 'touchstart' : 'mousedown',
        move: $.support.touch ? 'touchmove' : 'mousemove',
        end: $.support.touch ? 'touchend' : 'mouseup'
    };

    $.getTranslate = function (el, axis) {
        var matrix, curTransform, curStyle, transformMatrix;

        // automatic axis detection
        if (typeof axis === 'undefined') {
            axis = 'x';
        }

        curStyle = window.getComputedStyle(el, null);
        if (window.WebKitCSSMatrix) {
            // Some old versions of Webkit choke when 'none' is passed; pass
            // empty string instead in this case
            transformMatrix = new WebKitCSSMatrix(curStyle.webkitTransform === 'none' ? '' : curStyle.webkitTransform);
        }
        else {
            transformMatrix = curStyle.MozTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
            matrix = transformMatrix.toString().split(',');
        }

        if (axis === 'x') {
            //Latest Chrome and webkits Fix
            if (window.WebKitCSSMatrix)
                curTransform = transformMatrix.m41;
            //Crazy IE10 Matrix
            else if (matrix.length === 16)
                curTransform = parseFloat(matrix[12]);
            //Normal Browsers
            else
                curTransform = parseFloat(matrix[4]);
        }
        if (axis === 'y') {
            //Latest Chrome and webkits Fix
            if (window.WebKitCSSMatrix)
                curTransform = transformMatrix.m42;
            //Crazy IE10 Matrix
            else if (matrix.length === 16)
                curTransform = parseFloat(matrix[13]);
            //Normal Browsers
            else
                curTransform = parseFloat(matrix[5]);
        }

        return curTransform || 0;
    };
    /* jshint ignore:start */
    $.requestAnimationFrame = function (callback) {
        if (requestAnimationFrame) return requestAnimationFrame(callback);
        else if (webkitRequestAnimationFrame) return webkitRequestAnimationFrame(callback);
        else if (mozRequestAnimationFrame) return mozRequestAnimationFrame(callback);
        else {
            return setTimeout(callback, 1000 / 60);
        }
    };
    $.cancelAnimationFrame = function (id) {
        if (cancelAnimationFrame) return cancelAnimationFrame(id);
        else if (webkitCancelAnimationFrame) return webkitCancelAnimationFrame(id);
        else if (mozCancelAnimationFrame) return mozCancelAnimationFrame(id);
        else {
            return clearTimeout(id);
        }
    };
    /* jshint ignore:end */

    $.fn.dataset = function() {
        var dataset = {},
            ds = this[0].dataset;
        for (var key in ds) { // jshint ignore:line
            var item = (dataset[key] = ds[key]);
            if (item === 'false') dataset[key] = false;
            else if (item === 'true') dataset[key] = true;
            else if (parseFloat(item) === item * 1) dataset[key] = item * 1;
        }
        // mixin dataset and __eleData
        return $.extend({}, dataset, this[0].__eleData);
    };
    $.fn.data = function(key, value) {
        var tmpData = $(this).dataset();
        if (!key) {
            return tmpData;
        }
        // value may be 0, false, null
        if (typeof value === 'undefined') {
            // Get value
            var dataVal = tmpData[key],
                __eD = this[0].__eleData;

            //if (dataVal !== undefined) {
            if (__eD && (key in __eD)) {
                return __eD[key];
            } else {
                return dataVal;
            }

        } else {
            // Set value,uniformly set in extra ```__eleData```
            for (var i = 0; i < this.length; i++) {
                var el = this[i];
                // delete multiple data in dataset
                if (key in tmpData) delete el.dataset[key];

                if (!el.__eleData) el.__eleData = {};
                el.__eleData[key] = value;
            }
            return this;
        }
    };
    function __dealCssEvent(eventNameArr, callback) {
        var events = eventNameArr,
            i, dom = this;// jshint ignore:line

        function fireCallBack(e) {
            /*jshint validthis:true */
            if (e.target !== this) return;
            callback.call(this, e);
            for (i = 0; i < events.length; i++) {
                dom.off(events[i], fireCallBack);
            }
        }
        if (callback) {
            for (i = 0; i < events.length; i++) {
                dom.on(events[i], fireCallBack);
            }
        }
    }
    $.fn.animationEnd = function(callback) {
        __dealCssEvent.call(this, ['webkitAnimationEnd', 'animationend'], callback);
        return this;
    };
    $.fn.transitionEnd = function(callback) {
        __dealCssEvent.call(this, ['webkitTransitionEnd', 'transitionend'], callback);
        return this;
    };
    $.fn.transition = function(duration) {
        if (typeof duration !== 'string') {
            duration = duration + 'ms';
        }
        for (var i = 0; i < this.length; i++) {
            var elStyle = this[i].style;
            elStyle.webkitTransitionDuration = elStyle.MozTransitionDuration = elStyle.transitionDuration = duration;
        }
        return this;
    };
    $.fn.transform = function(transform) {
        for (var i = 0; i < this.length; i++) {
            var elStyle = this[i].style;
            elStyle.webkitTransform = elStyle.MozTransform = elStyle.transform = transform;
        }
        return this;
    };
    $.fn.prevAll = function (selector) {
        var prevEls = [];
        var el = this[0];
        if (!el) return $([]);
        while (el.previousElementSibling) {
            var prev = el.previousElementSibling;
            if (selector) {
                if($(prev).is(selector)) prevEls.push(prev);
            }
            else prevEls.push(prev);
            el = prev;
        }
        return $(prevEls);
    };
    $.fn.nextAll = function (selector) {
        var nextEls = [];
        var el = this[0];
        if (!el) return $([]);
        while (el.nextElementSibling) {
            var next = el.nextElementSibling;
            if (selector) {
                if($(next).is(selector)) nextEls.push(next);
            }
            else nextEls.push(next);
            el = next;
        }
        return $(nextEls);
    };

    //重置zepto的show方法，防止有些人引用的版本中 show 方法操作 opacity 属性影响动画执行
    $.fn.show = function(){
        var elementDisplay = {};
        function defaultDisplay(nodeName) {
            var element, display;
            if (!elementDisplay[nodeName]) {
                element = document.createElement(nodeName);
                document.body.appendChild(element);
                display = getComputedStyle(element, '').getPropertyValue("display");
                element.parentNode.removeChild(element);
                display === "none" && (display = "block");
                elementDisplay[nodeName] = display;
            }
            return elementDisplay[nodeName];
        }

        return this.each(function(){
            this.style.display === "none" && (this.style.display = '');
            if (getComputedStyle(this, '').getPropertyValue("display") === "none");
            this.style.display = defaultDisplay(this.nodeName);
        });
    };
})(jQuery);

/*===========================
 Device/OS Detection
 ===========================*/
;(function ($) {
    "use strict";
    var device = {};
    var ua = navigator.userAgent;

    var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
    var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);

    device.ios = device.android = device.iphone = device.ipad = device.androidChrome = false;

    // Android
    if (android) {
        device.os = 'android';
        device.osVersion = android[2];
        device.android = true;
        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;
    }
    if (ipad || iphone || ipod) {
        device.os = 'ios';
        device.ios = true;
    }
    // iOS
    if (iphone && !ipod) {
        device.osVersion = iphone[2].replace(/_/g, '.');
        device.iphone = true;
    }
    if (ipad) {
        device.osVersion = ipad[2].replace(/_/g, '.');
        device.ipad = true;
    }
    if (ipod) {
        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
        device.iphone = true;
    }
    // iOS 8+ changed UA
    if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {
        if (device.osVersion.split('.')[0] === '10') {
            device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];
        }
    }

    // Webview
    device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);

    // Minimal UI
    if (device.os && device.os === 'ios') {
        var osVersionArr = device.osVersion.split('.');
        device.minimalUi = !device.webView &&
            (ipod || iphone) &&
            (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7) &&
            $('meta[name="viewport"]').length > 0 && $('meta[name="viewport"]').attr('content').indexOf('minimal-ui') >= 0;
    }

    // Check for status bar and fullscreen app mode
    var windowWidth = $(window).width();
    var windowHeight = $(window).height();
    device.statusBar = false;
    if (device.webView && (windowWidth * windowHeight === screen.width * screen.height)) {
        device.statusBar = true;
    }
    else {
        device.statusBar = false;
    }

    // Classes
    var classNames = [];

    // Pixel Ratio
    device.pixelRatio = window.devicePixelRatio || 1;
    classNames.push('pixel-ratio-' + Math.floor(device.pixelRatio));
    if (device.pixelRatio >= 2) {
        classNames.push('retina');
    }

    // OS classes
    if (device.os) {
        classNames.push(device.os, device.os + '-' + device.osVersion.split('.')[0], device.os + '-' + device.osVersion.replace(/\./g, '-'));
        if (device.os === 'ios') {
            var major = parseInt(device.osVersion.split('.')[0], 10);
            for (var i = major - 1; i >= 6; i--) {
                classNames.push('ios-gt-' + i);
            }
        }

    }
    // Status bar classes
    if (device.statusBar) {
        classNames.push('with-statusbar-overlay');
    }
    else {
        $('html').removeClass('with-statusbar-overlay');
    }

    // Add html classes
    if (classNames.length > 0) $('html').addClass(classNames.join(' '));

    // keng..
    device.isWeixin = /MicroMessenger/i.test(ua);

    $.device = device;
})(jQuery);

;(function () {
    'use strict';

    /**
     * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
     *
     * @codingstandard ftlabs-jsv2
     * @copyright The Financial Times Limited [All Rights Reserved]
     * @license MIT License (see LICENSE.txt)
     */

    /*jslint browser:true, node:true, elision:true*/
    /*global Event, Node*/


    /**
     * Instantiate fast-clicking listeners on the specified layer.
     *
     * @constructor
     * @param {Element} layer The layer to listen on
     * @param {Object} [options={}] The options to override the defaults
     */
    function FastClick(layer, options) {
        var oldOnClick;

        options = options || {};

        /**
         * Whether a click is currently being tracked.
         *
         * @type boolean
         */
        this.trackingClick = false;


        /**
         * Timestamp for when click tracking started.
         *
         * @type number
         */
        this.trackingClickStart = 0;


        /**
         * The element being tracked for a click.
         *
         * @type EventTarget
         */
        this.targetElement = null;


        /**
         * X-coordinate of touch start event.
         *
         * @type number
         */
        this.touchStartX = 0;


        /**
         * Y-coordinate of touch start event.
         *
         * @type number
         */
        this.touchStartY = 0;


        /**
         * ID of the last touch, retrieved from Touch.identifier.
         *
         * @type number
         */
        this.lastTouchIdentifier = 0;


        /**
         * Touchmove boundary, beyond which a click will be cancelled.
         *
         * @type number
         */
        this.touchBoundary = options.touchBoundary || 10;


        /**
         * The FastClick layer.
         *
         * @type Element
         */
        this.layer = layer;

        /**
         * The minimum time between tap(touchstart and touchend) events
         *
         * @type number
         */
        this.tapDelay = options.tapDelay || 200;

        /**
         * The maximum time for a tap
         *
         * @type number
         */
        this.tapTimeout = options.tapTimeout || 700;

        if (FastClick.notNeeded(layer)) {
            return;
        }

        // Some old versions of Android don't have Function.prototype.bind
        function bind(method, context) {
            return function() { return method.apply(context, arguments); };
        }


        var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
        var context = this;
        for (var i = 0, l = methods.length; i < l; i++) {
            context[methods[i]] = bind(context[methods[i]], context);
        }

        // Set up event handlers as required
        if (deviceIsAndroid) {
            layer.addEventListener('mouseover', this.onMouse, true);
            layer.addEventListener('mousedown', this.onMouse, true);
            layer.addEventListener('mouseup', this.onMouse, true);
        }

        layer.addEventListener('click', this.onClick, true);
        layer.addEventListener('touchstart', this.onTouchStart, false);
        layer.addEventListener('touchmove', this.onTouchMove, false);
        layer.addEventListener('touchend', this.onTouchEnd, false);
        layer.addEventListener('touchcancel', this.onTouchCancel, false);

        // Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
        // which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
        // layer when they are cancelled.
        if (!Event.prototype.stopImmediatePropagation) {
            layer.removeEventListener = function(type, callback, capture) {
                var rmv = Node.prototype.removeEventListener;
                if (type === 'click') {
                    rmv.call(layer, type, callback.hijacked || callback, capture);
                } else {
                    rmv.call(layer, type, callback, capture);
                }
            };

            layer.addEventListener = function(type, callback, capture) {
                var adv = Node.prototype.addEventListener;
                if (type === 'click') {
                    adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
                            if (!event.propagationStopped) {
                                callback(event);
                            }
                        }), capture);
                } else {
                    adv.call(layer, type, callback, capture);
                }
            };
        }

        // If a handler is already declared in the element's onclick attribute, it will be fired before
        // FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
        // adding it as listener.
        if (typeof layer.onclick === 'function') {

            // Android browser on at least 3.2 requires a new reference to the function in layer.onclick
            // - the old one won't work if passed to addEventListener directly.
            oldOnClick = layer.onclick;
            layer.addEventListener('click', function(event) {
                oldOnClick(event);
            }, false);
            layer.onclick = null;
        }
    }

    /**
     * Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
     *
     * @type boolean
     */
    var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0;

    /**
     * Android requires exceptions.
     *
     * @type boolean
     */
    var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;


    /**
     * iOS requires exceptions.
     *
     * @type boolean
     */
    var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;


    /**
     * iOS 4 requires an exception for select elements.
     *
     * @type boolean
     */
    var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


    /**
     * iOS 6.0-7.* requires the target element to be manually derived
     *
     * @type boolean
     */
    var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent);

    /**
     * BlackBerry requires exceptions.
     *
     * @type boolean
     */
    var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

    /**
     * 判断是否组合型label
     * @type {Boolean}
     */
    var isCompositeLabel = false;

    /**
     * Determine whether a given element requires a native click.
     *
     * @param {EventTarget|Element} target Target DOM element
     * @returns {boolean} Returns true if the element needs a native click
     */
    FastClick.prototype.needsClick = function(target) {

        // 修复bug: 如果父元素中有 label
        // 如果label上有needsclick这个类，则用原生的点击，否则，用模拟点击
        var parent = target;
        while(parent && (parent.tagName.toUpperCase() !== "BODY")) {
            if (parent.tagName.toUpperCase() === "LABEL") {
                isCompositeLabel = true;
                if ((/\bneedsclick\b/).test(parent.className)) return true;
            }
            parent = parent.parentNode;
        }

        switch (target.nodeName.toLowerCase()) {

            // Don't send a synthetic click to disabled inputs (issue #62)
            case 'button':
            case 'select':
            case 'textarea':
                if (target.disabled) {
                    return true;
                }

                break;
            case 'input':

                // File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
                if ((deviceIsIOS && target.type === 'file') || target.disabled) {
                    return true;
                }

                break;
            case 'label':
            case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
            case 'video':
                return true;
        }

        return (/\bneedsclick\b/).test(target.className);
    };


    /**
     * Determine whether a given element requires a call to focus to simulate click into element.
     *
     * @param {EventTarget|Element} target Target DOM element
     * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
     */
    FastClick.prototype.needsFocus = function(target) {
        switch (target.nodeName.toLowerCase()) {
            case 'textarea':
                return true;
            case 'select':
                return !deviceIsAndroid;
            case 'input':
                switch (target.type) {
                    case 'button':
                    case 'checkbox':
                    case 'file':
                    case 'image':
                    case 'radio':
                    case 'submit':
                        return false;
                }

                // No point in attempting to focus disabled inputs
                return !target.disabled && !target.readOnly;
            default:
                return (/\bneedsfocus\b/).test(target.className);
        }
    };


    /**
     * Send a click event to the specified element.
     *
     * @param {EventTarget|Element} targetElement
     * @param {Event} event
     */
    FastClick.prototype.sendClick = function(targetElement, event) {
        var clickEvent, touch;

        // On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
        if (document.activeElement && document.activeElement !== targetElement) {
            document.activeElement.blur();
        }

        touch = event.changedTouches[0];

        // Synthesise a click event, with an extra attribute so it can be tracked
        clickEvent = document.createEvent('MouseEvents');
        clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
        clickEvent.forwardedTouchEvent = true;
        targetElement.dispatchEvent(clickEvent);
    };

    FastClick.prototype.determineEventType = function(targetElement) {

        //Issue #159: Android Chrome Select Box does not open with a synthetic click event
        if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
            return 'mousedown';
        }

        return 'click';
    };


    /**
     * @param {EventTarget|Element} targetElement
     */
    FastClick.prototype.focus = function(targetElement) {
        var length;

        // Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
        var unsupportedType = ['date', 'time', 'month', 'number', 'email'];
        if (deviceIsIOS && targetElement.setSelectionRange && unsupportedType.indexOf(targetElement.type) === -1) {
            length = targetElement.value.length;
            targetElement.setSelectionRange(length, length);
        } else {
            targetElement.focus();
        }
    };


    /**
     * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
     *
     * @param {EventTarget|Element} targetElement
     */
    FastClick.prototype.updateScrollParent = function(targetElement) {
        var scrollParent, parentElement;

        scrollParent = targetElement.fastClickScrollParent;

        // Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
        // target element was moved to another parent.
        if (!scrollParent || !scrollParent.contains(targetElement)) {
            parentElement = targetElement;
            do {
                if (parentElement.scrollHeight > parentElement.offsetHeight) {
                    scrollParent = parentElement;
                    targetElement.fastClickScrollParent = parentElement;
                    break;
                }

                parentElement = parentElement.parentElement;
            } while (parentElement);
        }

        // Always update the scroll top tracker if possible.
        if (scrollParent) {
            scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
        }
    };


    /**
     * @param {EventTarget} targetElement
     * @returns {Element|EventTarget}
     */
    FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {

        // On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
        if (eventTarget.nodeType === Node.TEXT_NODE) {
            return eventTarget.parentNode;
        }

        return eventTarget;
    };


    /**
     * On touch start, record the position and scroll offset.
     *
     * @param {Event} event
     * @returns {boolean}
     */
    FastClick.prototype.onTouchStart = function(event) {
        var targetElement, touch, selection;

        // Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
        if (event.targetTouches.length > 1) {
            return true;
        }

        targetElement = this.getTargetElementFromEventTarget(event.target);
        touch = event.targetTouches[0];

        if (deviceIsIOS) {

            // Only trusted events will deselect text on iOS (issue #49)
            selection = window.getSelection();
            if (selection.rangeCount && !selection.isCollapsed) {
                return true;
            }

            if (!deviceIsIOS4) {

                // Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
                // when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
                // with the same identifier as the touch event that previously triggered the click that triggered the alert.
                // Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
                // immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
                // Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
                // which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
                // random integers, it's safe to to continue if the identifier is 0 here.
                if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
                    event.preventDefault();
                    return false;
                }

                this.lastTouchIdentifier = touch.identifier;

                // If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
                // 1) the user does a fling scroll on the scrollable layer
                // 2) the user stops the fling scroll with another tap
                // then the event.target of the last 'touchend' event will be the element that was under the user's finger
                // when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
                // is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
                this.updateScrollParent(targetElement);
            }
        }

        this.trackingClick = true;
        this.trackingClickStart = event.timeStamp;
        this.targetElement = targetElement;

        this.touchStartX = touch.pageX;
        this.touchStartY = touch.pageY;

        // Prevent phantom clicks on fast double-tap (issue #36)
        if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
            event.preventDefault();
        }

        return true;
    };


    /**
     * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
     *
     * @param {Event} event
     * @returns {boolean}
     */
    FastClick.prototype.touchHasMoved = function(event) {
        var touch = event.changedTouches[0], boundary = this.touchBoundary;

        if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
            return true;
        }

        return false;
    };


    /**
     * Update the last position.
     *
     * @param {Event} event
     * @returns {boolean}
     */
    FastClick.prototype.onTouchMove = function(event) {
        if (!this.trackingClick) {
            return true;
        }

        // If the touch has moved, cancel the click tracking
        if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
            this.trackingClick = false;
            this.targetElement = null;
        }

        return true;
    };


    /**
     * Attempt to find the labelled control for the given label element.
     *
     * @param {EventTarget|HTMLLabelElement} labelElement
     * @returns {Element|null}
     */
    FastClick.prototype.findControl = function(labelElement) {

        // Fast path for newer browsers supporting the HTML5 control attribute
        if (labelElement.control !== undefined) {
            return labelElement.control;
        }

        // All browsers under test that support touch events also support the HTML5 htmlFor attribute
        if (labelElement.htmlFor) {
            return document.getElementById(labelElement.htmlFor);
        }

        // If no for attribute exists, attempt to retrieve the first labellable descendant element
        // the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
        return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
    };


    /**
     * On touch end, determine whether to send a click event at once.
     *
     * @param {Event} event
     * @returns {boolean}
     */
    FastClick.prototype.onTouchEnd = function(event) {
        var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

        if (!this.trackingClick) {
            return true;
        }

        // Prevent phantom clicks on fast double-tap (issue #36)
        if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
            this.cancelNextClick = true;
            return true;
        }

        if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
            return true;
        }
        //修复安卓微信下，input type="date" 的bug，经测试date,time,month已没问题
        var unsupportedType = ['date', 'time', 'month'];
        if(unsupportedType.indexOf(event.target.type) !== -1){
            return false;
        }
        // Reset to prevent wrong click cancel on input (issue #156).
        this.cancelNextClick = false;

        this.lastClickTime = event.timeStamp;

        trackingClickStart = this.trackingClickStart;
        this.trackingClick = false;
        this.trackingClickStart = 0;

        // On some iOS devices, the targetElement supplied with the event is invalid if the layer
        // is performing a transition or scroll, and has to be re-detected manually. Note that
        // for this to function correctly, it must be called *after* the event target is checked!
        // See issue #57; also filed as rdar://13048589 .
        if (deviceIsIOSWithBadTarget) {
            touch = event.changedTouches[0];

            // In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
            targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
            targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
        }

        targetTagName = targetElement.tagName.toLowerCase();
        if (targetTagName === 'label') {
            forElement = this.findControl(targetElement);
            if (forElement) {
                this.focus(targetElement);
                if (deviceIsAndroid) {
                    return false;
                }

                targetElement = forElement;
            }
        } else if (this.needsFocus(targetElement)) {

            // Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
            // Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
            if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
                this.targetElement = null;
                return false;
            }

            this.focus(targetElement);
            this.sendClick(targetElement, event);

            // Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
            // Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
            if (!deviceIsIOS || targetTagName !== 'select') {
                this.targetElement = null;
                event.preventDefault();
            }

            return false;
        }

        if (deviceIsIOS && !deviceIsIOS4) {

            // Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
            // and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
            scrollParent = targetElement.fastClickScrollParent;
            if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
                return true;
            }
        }

        // Prevent the actual click from going though - unless the target node is marked as requiring
        // real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
        if (!this.needsClick(targetElement)) {
            event.preventDefault();
            this.sendClick(targetElement, event);
        }

        return false;
    };


    /**
     * On touch cancel, stop tracking the click.
     *
     * @returns {void}
     */
    FastClick.prototype.onTouchCancel = function() {
        this.trackingClick = false;
        this.targetElement = null;
    };


    /**
     * Determine mouse events which should be permitted.
     *
     * @param {Event} event
     * @returns {boolean}
     */
    FastClick.prototype.onMouse = function(event) {

        // If a target element was never set (because a touch event was never fired) allow the event
        if (!this.targetElement) {
            return true;
        }

        if (event.forwardedTouchEvent) {
            return true;
        }

        // Programmatically generated events targeting a specific element should be permitted
        if (!event.cancelable) {
            return true;
        }

        // Derive and check the target element to see whether the mouse event needs to be permitted;
        // unless explicitly enabled, prevent non-touch click events from triggering actions,
        // to prevent ghost/doubleclicks.
        if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

            // Prevent any user-added listeners declared on FastClick element from being fired.
            if (event.stopImmediatePropagation) {
                event.stopImmediatePropagation();
            } else {

                // Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
                event.propagationStopped = true;
            }

            // Cancel the event
            event.stopPropagation();
            // 允许组合型label冒泡
            if (!isCompositeLabel) {
                event.preventDefault();
            }
            // 允许组合型label冒泡
            return false;
        }

        // If the mouse event is permitted, return true for the action to go through.
        return true;
    };


    /**
     * On actual clicks, determine whether this is a touch-generated click, a click action occurring
     * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
     * an actual click which should be permitted.
     *
     * @param {Event} event
     * @returns {boolean}
     */
    FastClick.prototype.onClick = function(event) {
        var permitted;

        // It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
        if (this.trackingClick) {
            this.targetElement = null;
            this.trackingClick = false;
            return true;
        }

        // Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
        if (event.target.type === 'submit' && event.detail === 0) {
            return true;
        }

        permitted = this.onMouse(event);

        // Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
        if (!permitted) {
            this.targetElement = null;
        }

        // If clicks are permitted, return true for the action to go through.
        return permitted;
    };


    /**
     * Remove all FastClick's event listeners.
     *
     * @returns {void}
     */
    FastClick.prototype.destroy = function() {
        var layer = this.layer;

        if (deviceIsAndroid) {
            layer.removeEventListener('mouseover', this.onMouse, true);
            layer.removeEventListener('mousedown', this.onMouse, true);
            layer.removeEventListener('mouseup', this.onMouse, true);
        }

        layer.removeEventListener('click', this.onClick, true);
        layer.removeEventListener('touchstart', this.onTouchStart, false);
        layer.removeEventListener('touchmove', this.onTouchMove, false);
        layer.removeEventListener('touchend', this.onTouchEnd, false);
        layer.removeEventListener('touchcancel', this.onTouchCancel, false);
    };


    /**
     * Check whether FastClick is needed.
     *
     * @param {Element} layer The layer to listen on
     */
    FastClick.notNeeded = function(layer) {
        var metaViewport;
        var chromeVersion;
        var blackberryVersion;
        var firefoxVersion;

        // Devices that don't support touch don't need FastClick
        if (typeof window.ontouchstart === 'undefined') {
            return true;
        }

        // Chrome version - zero for other browsers
        chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

        if (chromeVersion) {

            if (deviceIsAndroid) {
                metaViewport = document.querySelector('meta[name=viewport]');

                if (metaViewport) {
                    // Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
                    if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
                        return true;
                    }
                    // Chrome 32 and above with width=device-width or less don't need FastClick
                    if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
                        return true;
                    }
                }

                // Chrome desktop doesn't need FastClick (issue #15)
            } else {
                return true;
            }
        }

        if (deviceIsBlackBerry10) {
            blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);

            // BlackBerry 10.3+ does not require Fastclick library.
            // https://github.com/ftlabs/fastclick/issues/251
            if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
                metaViewport = document.querySelector('meta[name=viewport]');

                if (metaViewport) {
                    // user-scalable=no eliminates click delay.
                    if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
                        return true;
                    }
                    // width=device-width (or less than device-width) eliminates click delay.
                    if (document.documentElement.scrollWidth <= window.outerWidth) {
                        return true;
                    }
                }
            }
        }

        // IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
        if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {
            return true;
        }

        // Firefox version - zero for other browsers
        firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

        if (firefoxVersion >= 27) {
            // Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896

            metaViewport = document.querySelector('meta[name=viewport]');
            if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {
                return true;
            }
        }

        // IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version
        // http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
        if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {
            return true;
        }

        return false;
    };


    /**
     * Factory method for creating a FastClick object
     *
     * @param {Element} layer The layer to listen on
     * @param {Object} [options={}] The options to override the defaults
     */
    FastClick.attach = function(layer, options) {
        return new FastClick(layer, options);
    };

    window.FastClick = FastClick;
}());

/*======================================================
 ************   Modals   ************
 ======================================================*/
/*jshint unused: false*/
+function ($) {
    "use strict";
    var _modalTemplateTempDiv = document.createElement('div');

    $.modalStack = [];

    $.modalStackClearQueue = function () {
        if ($.modalStack.length) {
            ($.modalStack.shift())();
        }
    };
    $.modal = function (params) {
        params = params || {};
        var modalHTML = '';
        var buttonsHTML = '';
        if (params.buttons && params.buttons.length > 0) {
            for (var i = 0; i < params.buttons.length; i++) {
                buttonsHTML += '<span class="modal-button' + (params.buttons[i].bold ? ' modal-button-bold' : '') + '">' + params.buttons[i].text + '</span>';
            }
        }
        var extraClass = params.extraClass || '';
        var titleHTML = params.title ? '<div class="modal-title">' + params.title + '</div>' : '';
        var textHTML = params.text ? '<div class="modal-text">' + params.text + '</div>' : '';
        var afterTextHTML = params.afterText ? params.afterText : '';
        var noButtons = !params.buttons || params.buttons.length === 0 ? 'modal-no-buttons' : '';
        var verticalButtons = params.verticalButtons ? 'modal-buttons-vertical' : '';
        modalHTML = '<div class="modal ' + extraClass + ' ' + noButtons + '"><div class="modal-inner">' + (titleHTML + textHTML + afterTextHTML) + '</div><div class="modal-buttons ' + verticalButtons + '">' + buttonsHTML + '</div></div>';

        _modalTemplateTempDiv.innerHTML = modalHTML;

        var modal = $(_modalTemplateTempDiv).children();

        $(defaults.modalContainer).append(modal[0]);

        // Add events on buttons
        modal.find('.modal-button').each(function (index, el) {
            $(el).on('click', function (e) {
                if (params.buttons[index].close !== false) $.closeModal(modal);
                if (params.buttons[index].onClick) params.buttons[index].onClick(modal, e);
                if (params.onClick) params.onClick(modal, index);
            });
        });
        $.openModal(modal);
        return modal[0];
    };
    $.alert = function (text, title, callbackOk) {
        if (typeof title === 'function') {
            callbackOk = arguments[1];
            title = undefined;
        }
        return $.modal({
            text: text || '',
            title: typeof title === 'undefined' ? defaults.modalTitle : title,
            buttons: [ {text: defaults.modalButtonOk, bold: true, onClick: callbackOk} ]
        });
    };
    $.confirm = function (text, title, callbackOk, callbackCancel) {
        if (typeof title === 'function') {
            callbackCancel = arguments[2];
            callbackOk = arguments[1];
            title = undefined;
        }
        return $.modal({
            text: text || '',
            title: typeof title === 'undefined' ? defaults.modalTitle : title,
            buttons: [
                {text: defaults.modalButtonCancel, onClick: callbackCancel},
                {text: defaults.modalButtonOk, bold: true, onClick: callbackOk}
            ]
        });
    };
    $.prompt = function (text, title, callbackOk, callbackCancel) {
        if (typeof title === 'function') {
            callbackCancel = arguments[2];
            callbackOk = arguments[1];
            title = undefined;
        }
        return $.modal({
            text: text || '',
            title: typeof title === 'undefined' ? defaults.modalTitle : title,
            afterText: '<input type="text" class="modal-text-input">',
            buttons: [
                {
                    text: defaults.modalButtonCancel
                },
                {
                    text: defaults.modalButtonOk,
                    bold: true
                }
            ],
            onClick: function (modal, index) {
                if (index === 0 && callbackCancel) callbackCancel($(modal).find('.modal-text-input').val());
                if (index === 1 && callbackOk) callbackOk($(modal).find('.modal-text-input').val());
            }
        });
    };
    $.modalLogin = function (text, title, callbackOk, callbackCancel) {
        if (typeof title === 'function') {
            callbackCancel = arguments[2];
            callbackOk = arguments[1];
            title = undefined;
        }
        return $.modal({
            text: text || '',
            title: typeof title === 'undefined' ? defaults.modalTitle : title,
            afterText: '<input type="text" name="modal-username" placeholder="' + defaults.modalUsernamePlaceholder + '" class="modal-text-input modal-text-input-double"><input type="password" name="modal-password" placeholder="' + defaults.modalPasswordPlaceholder + '" class="modal-text-input modal-text-input-double">',
            buttons: [
                {
                    text: defaults.modalButtonCancel
                },
                {
                    text: defaults.modalButtonOk,
                    bold: true
                }
            ],
            onClick: function (modal, index) {
                var username = $(modal).find('.modal-text-input[name="modal-username"]').val();
                var password = $(modal).find('.modal-text-input[name="modal-password"]').val();
                if (index === 0 && callbackCancel) callbackCancel(username, password);
                if (index === 1 && callbackOk) callbackOk(username, password);
            }
        });
    };
    $.modalPassword = function (text, title, callbackOk, callbackCancel) {
        if (typeof title === 'function') {
            callbackCancel = arguments[2];
            callbackOk = arguments[1];
            title = undefined;
        }
        return $.modal({
            text: text || '',
            title: typeof title === 'undefined' ? defaults.modalTitle : title,
            afterText: '<input type="password" name="modal-password" placeholder="' + defaults.modalPasswordPlaceholder + '" class="modal-text-input">',
            buttons: [
                {
                    text: defaults.modalButtonCancel
                },
                {
                    text: defaults.modalButtonOk,
                    bold: true
                }
            ],
            onClick: function (modal, index) {
                var password = $(modal).find('.modal-text-input[name="modal-password"]').val();
                if (index === 0 && callbackCancel) callbackCancel(password);
                if (index === 1 && callbackOk) callbackOk(password);
            }
        });
    };
    $.showPreloader = function (title) {
        $.hidePreloader();
        $.showPreloader.preloaderModal = $.modal({
            title: title || defaults.modalPreloaderTitle,
            text: '<div class="preloader"></div>'
        });

        return $.showPreloader.preloaderModal;
    };
    $.hidePreloader = function () {
        $.showPreloader.preloaderModal && $.closeModal($.showPreloader.preloaderModal);
    };
    $.showIndicator = function () {
        if ($('.preloader-indicator-modal')[0]) return;
        $(defaults.modalContainer).append('<div class="preloader-indicator-overlay"></div><div class="preloader-indicator-modal"><span class="preloader preloader-white"></span></div>');
    };
    $.hideIndicator = function () {
        $('.preloader-indicator-overlay, .preloader-indicator-modal').remove();
    };
    // Action Sheet
    $.actions = function (params) {
        var modal, groupSelector, buttonSelector;
        params = params || [];

        if (params.length > 0 && !$.isArray(params[0])) {
            params = [params];
        }
        var modalHTML;
        var buttonsHTML = '';
        for (var i = 0; i < params.length; i++) {
            for (var j = 0; j < params[i].length; j++) {
                if (j === 0) buttonsHTML += '<div class="actions-modal-group">';
                var button = params[i][j];
                var buttonClass = button.label ? 'actions-modal-label' : 'actions-modal-button';
                if (button.bold) buttonClass += ' actions-modal-button-bold';
                if (button.color) buttonClass += ' color-' + button.color;
                if (button.bg) buttonClass += ' bg-' + button.bg;
                if (button.disabled) buttonClass += ' disabled';
                buttonsHTML += '<span class="' + buttonClass + '">' + button.text + '</span>';
                if (j === params[i].length - 1) buttonsHTML += '</div>';
            }
        }
        modalHTML = '<div class="actions-modal">' + buttonsHTML + '</div>';
        _modalTemplateTempDiv.innerHTML = modalHTML;
        modal = $(_modalTemplateTempDiv).children();
        $(defaults.modalContainer).append(modal[0]);
        groupSelector = '.actions-modal-group';
        buttonSelector = '.actions-modal-button';

        var groups = modal.find(groupSelector);
        groups.each(function (index, el) {
            var groupIndex = index;
            $(el).children().each(function (index, el) {
                var buttonIndex = index;
                var buttonParams = params[groupIndex][buttonIndex];
                var clickTarget;
                if ($(el).is(buttonSelector)) clickTarget = $(el);
                // if (toPopover && $(el).find(buttonSelector).length > 0) clickTarget = $(el).find(buttonSelector);

                if (clickTarget) {
                    clickTarget.on('click', function (e) {
                        if (buttonParams.close !== false) $.closeModal(modal);
                        if (buttonParams.onClick) buttonParams.onClick(modal, e);
                    });
                }
            });
        });
        $.openModal(modal);
        return modal[0];
    };
    $.popup = function (modal, removeOnClose) {
        if (typeof removeOnClose === 'undefined') removeOnClose = true;
        if (typeof modal === 'string' && modal.indexOf('<') >= 0) {
            var _modal = document.createElement('div');
            _modal.innerHTML = modal.trim();
            if (_modal.childNodes.length > 0) {
                modal = _modal.childNodes[0];
                if (removeOnClose) modal.classList.add('remove-on-close');
                $(defaults.modalContainer).append(modal);
            }
            else return false; //nothing found
        }
        modal = $(modal);
        if (modal.length === 0) return false;
        modal.show();
        if (modal.find('.' + defaults.viewClass).length > 0) {
            $.sizeNavbars(modal.find('.' + defaults.viewClass)[0]);
        }
        $.openModal(modal);

        return modal[0];
    };
    $.pickerModal = function (pickerModal, removeOnClose) {
        if (typeof removeOnClose === 'undefined') removeOnClose = true;
        if (typeof pickerModal === 'string' && pickerModal.indexOf('<') >= 0) {
            pickerModal = $(pickerModal);
            if (pickerModal.length > 0) {
                if (removeOnClose) pickerModal.addClass('remove-on-close');
                $(defaults.modalContainer).append(pickerModal[0]);
            }
            else return false; //nothing found
        }
        pickerModal = $(pickerModal);
        if (pickerModal.length === 0) return false;
        pickerModal.show();
        $.openModal(pickerModal);
        return pickerModal[0];
    };
    $.loginScreen = function (modal) {
        if (!modal) modal = '.login-screen';
        modal = $(modal);
        if (modal.length === 0) return false;
        modal.show();
        if (modal.find('.' + defaults.viewClass).length > 0) {
            $.sizeNavbars(modal.find('.' + defaults.viewClass)[0]);
        }
        $.openModal(modal);
        return modal[0];
    };
    //显示一个消息，会在2秒钟后自动消失
    $.toast = function(msg, duration, extraclass) {
        var $toast = $('<div class="modal toast ' + (extraclass || '') + '">' + msg + '</div>').appendTo(document.body);
        $.openModal($toast, function(){
            setTimeout(function() {
                $.closeModal($toast);
            }, duration || 2000);
        });
    };
    $.openModal = function (modal, cb) {
        modal = $(modal);
        var isModal = modal.hasClass('modal'),
            isNotToast = !modal.hasClass('toast');
        if ($('.modal.modal-in:not(.modal-out)').length && defaults.modalStack && isModal && isNotToast) {
            $.modalStack.push(function () {
                $.openModal(modal, cb);
            });
            return;
        }
        var isPopup = modal.hasClass('popup');
        var isLoginScreen = modal.hasClass('login-screen');
        var isPickerModal = modal.hasClass('picker-modal');
        var isToast = modal.hasClass('toast');
        if (isModal) {
            modal.show();
            modal.css({
                marginTop: - Math.round(modal.outerHeight() / 2) + 'px'
            });
        }
        if (isToast) {
            modal.css({
                marginLeft: - Math.round(modal.outerWidth() / 2 / 1.185) + 'px' //1.185 是初始化时候的放大效果
            });
        }

        var overlay;
        if (!isLoginScreen && !isPickerModal && !isToast) {
            if ($('.modal-overlay').length === 0 && !isPopup) {
                $(defaults.modalContainer).append('<div class="modal-overlay"></div>');
            }
            if ($('.popup-overlay').length === 0 && isPopup) {
                $(defaults.modalContainer).append('<div class="popup-overlay"></div>');
            }
            overlay = isPopup ? $('.popup-overlay') : $('.modal-overlay');
        }

        //Make sure that styles are applied, trigger relayout;
        var clientLeft = modal[0].clientLeft;

        // Trugger open event
        modal.trigger('open');

        // Picker modal body class
        if (isPickerModal) {
            $(defaults.modalContainer).addClass('with-picker-modal');
        }

        // Classes for transition in
        if (!isLoginScreen && !isPickerModal && !isToast) overlay.addClass('modal-overlay-visible');
        modal.removeClass('modal-out').addClass('modal-in').transitionEnd(function (e) {
            if (modal.hasClass('modal-out')) modal.trigger('closed');
            else modal.trigger('opened');
        });
        // excute callback
        if (typeof cb === 'function') {
            cb.call(this);
        }
        return true;
    };
    $.closeModal = function (modal) {
        modal = $(modal || '.modal-in');
        if (typeof modal !== 'undefined' && modal.length === 0) {
            return;
        }
        var isModal = modal.hasClass('modal'),
            isPopup = modal.hasClass('popup'),
            isToast = modal.hasClass('toast'),
            isLoginScreen = modal.hasClass('login-screen'),
            isPickerModal = modal.hasClass('picker-modal'),
            removeOnClose = modal.hasClass('remove-on-close'),
            overlay = isPopup ? $('.popup-overlay') : $('.modal-overlay');
        if (isPopup){
            if (modal.length === $('.popup.modal-in').length) {
                overlay.removeClass('modal-overlay-visible');
            }
        }
        else if (!(isPickerModal || isToast)) {
            overlay.removeClass('modal-overlay-visible');
        }

        modal.trigger('close');

        // Picker modal body class
        if (isPickerModal) {
            $(defaults.modalContainer).removeClass('with-picker-modal');
            $(defaults.modalContainer).addClass('picker-modal-closing');
        }

        modal.removeClass('modal-in').addClass('modal-out').transitionEnd(function (e) {
            if (modal.hasClass('modal-out')) modal.trigger('closed');
            else modal.trigger('opened');

            if (isPickerModal) {
                $(defaults.modalContainer).removeClass('picker-modal-closing');
            }
            if (isPopup || isLoginScreen || isPickerModal) {
                modal.removeClass('modal-out').hide();
                if (removeOnClose && modal.length > 0) {
                    modal.remove();
                }
            }
            else {
                modal.remove();
            }
        });
        if (isModal &&  defaults.modalStack ) {
            $.modalStackClearQueue();
        }

        return true;
    };
    function handleClicks(e) {
        /*jshint validthis:true */
        var clicked = $(this);
        var url = clicked.attr('href');


        //Collect Clicked data- attributes
        var clickedData = clicked.dataset();

        // Popup
        var popup;
        if (clicked.hasClass('open-popup')) {
            if (clickedData.popup) {
                popup = clickedData.popup;
            }
            else popup = '.popup';
            $.popup(popup);
        }
        if (clicked.hasClass('close-popup')) {
            if (clickedData.popup) {
                popup = clickedData.popup;
            }
            else popup = '.popup.modal-in';
            $.closeModal(popup);
        }

        // Close Modal
        if (clicked.hasClass('modal-overlay')) {
            if ($('.modal.modal-in').length > 0 && defaults.modalCloseByOutside)
                $.closeModal('.modal.modal-in');
            if ($('.actions-modal.modal-in').length > 0 && defaults.actionsCloseByOutside)
                $.closeModal('.actions-modal.modal-in');

        }
        if (clicked.hasClass('popup-overlay')) {
            if ($('.popup.modal-in').length > 0 && defaults.popupCloseByOutside)
                $.closeModal('.popup.modal-in');
        }




    }
    $(document).on('click', ' .modal-overlay, .popup-overlay, .close-popup, .open-popup, .close-picker', handleClicks);
    var defaults =  $.modal.prototype.defaults  = {
        modalStack: true,
        modalButtonOk: '确定',
        modalButtonCancel: '取消',
        modalPreloaderTitle: '加载中',
        modalContainer : document.body
    };
}(jQuery);

/*======================================================
 ************   Calendar   ************
 ======================================================*/
/*jshint unused: false*/
+function ($) {
    "use strict";
    var rtl = false;
    var Calendar = function (params) {
        var p = this;
        var defaults = {
            monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月' , '九月' , '十月', '十一月', '十二月'],
            monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月' , '九月' , '十月', '十一月', '十二月'],
            dayNames: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
            dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
            firstDay: 1, // First day of the week, Monday
            weekendDays: [0, 6], // Sunday and Saturday
            multiple: false,
            dateFormat: 'yyyy-mm-dd',
            direction: 'horizontal', // or 'vertical'
            minDate: null,
            maxDate: null,
            touchMove: true,
            animate: true,
            closeOnSelect: true,
            monthPicker: true,
            monthPickerTemplate:
            '<div class="picker-calendar-month-picker">' +
            '<a href="#" class="link icon-only picker-calendar-prev-month"><i class="icon icon-prev"></i></a>' +
            '<div class="current-month-value"></div>' +
            '<a href="#" class="link icon-only picker-calendar-next-month"><i class="icon icon-next"></i></a>' +
            '</div>',
            yearPicker: true,
            yearPickerTemplate:
            '<div class="picker-calendar-year-picker">' +
            '<a href="#" class="link icon-only picker-calendar-prev-year"><i class="icon icon-prev"></i></a>' +
            '<span class="current-year-value"></span>' +
            '<a href="#" class="link icon-only picker-calendar-next-year"><i class="icon icon-next"></i></a>' +
            '</div>',
            weekHeader: true,
            // Common settings
            scrollToInput: true,
            inputReadOnly: true,
            toolbar: true,
            toolbarCloseText: 'Done',
            toolbarTemplate:
            '<div class="toolbar">' +
            '<div class="toolbar-inner">' +
            '{{monthPicker}}' +
            '{{yearPicker}}' +
            // '<a href="#" class="link close-picker">{{closeText}}</a>' +
            '</div>' +
            '</div>',
            /* Callbacks
             onMonthAdd
             onChange
             onOpen
             onClose
             onDayClick
             onMonthYearChangeStart
             onMonthYearChangeEnd
             */
        };
        params = params || {};
        for (var def in defaults) {
            if (typeof params[def] === 'undefined') {
                params[def] = defaults[def];
            }
        }
        p.params = params;
        p.initialized = false;

        // Inline flag
        p.inline = p.params.container ? true : false;

        // Is horizontal
        p.isH = p.params.direction === 'horizontal';

        // RTL inverter
        var inverter = p.isH ? (rtl ? -1 : 1) : 1;

        // Animating flag
        p.animating = false;

        // Format date
        function formatDate(date) {
            date = new Date(date);
            var year = date.getFullYear();
            var month = date.getMonth();
            var month1 = month + 1;
            var day = date.getDate();
            var weekDay = date.getDay();
            return p.params.dateFormat
                .replace(/yyyy/g, year)
                .replace(/yy/g, (year + '').substring(2))
                .replace(/mm/g, month1 < 10 ? '0' + month1 : month1)
                .replace(/m/g, month1)
                .replace(/MM/g, p.params.monthNames[month])
                .replace(/M/g, p.params.monthNamesShort[month])
                .replace(/dd/g, day < 10 ? '0' + day : day)
                .replace(/d/g, day)
                .replace(/DD/g, p.params.dayNames[weekDay])
                .replace(/D/g, p.params.dayNamesShort[weekDay]);
        }


        // Value
        p.addValue = function (value) {
            if (p.params.multiple) {
                if (!p.value) p.value = [];
                var inValuesIndex;
                for (var i = 0; i < p.value.length; i++) {
                    if (new Date(value).getTime() === new Date(p.value[i]).getTime()) {
                        inValuesIndex = i;
                    }
                }
                if (typeof inValuesIndex === 'undefined') {
                    p.value.push(value);
                }
                else {
                    p.value.splice(inValuesIndex, 1);
                }
                p.updateValue();
            }
            else {
                p.value = [value];
                p.updateValue();
            }
        };
        p.setValue = function (arrValues) {
            p.value = arrValues;
            p.updateValue();
        };
        p.updateValue = function () {
            p.wrapper.find('.picker-calendar-day-selected').removeClass('picker-calendar-day-selected');
            var i, inputValue;
            for (i = 0; i < p.value.length; i++) {
                var valueDate = new Date(p.value[i]);
                p.wrapper.find('.picker-calendar-day[data-date="' + valueDate.getFullYear() + '-' + valueDate.getMonth() + '-' + valueDate.getDate() + '"]').addClass('picker-calendar-day-selected');
            }
            if (p.params.onChange) {
                p.params.onChange(p, p.value, p.value.map(formatDate));
            }
            if (p.input && p.input.length > 0) {
                if (p.params.formatValue) inputValue = p.params.formatValue(p, p.value);
                else {
                    inputValue = [];
                    for (i = 0; i < p.value.length; i++) {
                        inputValue.push(formatDate(p.value[i]));
                    }
                    inputValue = inputValue.join(', ');
                }
                $(p.input).val(inputValue);
                $(p.input).trigger('change');
            }
        };

        // Columns Handlers
        p.initCalendarEvents = function () {
            var col;
            var allowItemClick = true;
            var isTouched, isMoved, touchStartX, touchStartY, touchCurrentX, touchCurrentY, touchStartTime, touchEndTime, startTranslate, currentTranslate, wrapperWidth, wrapperHeight, percentage, touchesDiff, isScrolling;
            function handleTouchStart (e) {
                if (isMoved || isTouched) return;
                // e.preventDefault();
                isTouched = true;
                touchStartX = touchCurrentY = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
                touchStartY = touchCurrentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
                touchStartTime = (new Date()).getTime();
                percentage = 0;
                allowItemClick = true;
                isScrolling = undefined;
                startTranslate = currentTranslate = p.monthsTranslate;
            }
            function handleTouchMove (e) {
                if (!isTouched) return;

                touchCurrentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                if (typeof isScrolling === 'undefined') {
                    isScrolling = !!(isScrolling || Math.abs(touchCurrentY - touchStartY) > Math.abs(touchCurrentX - touchStartX));
                }
                if (p.isH && isScrolling) {
                    isTouched = false;
                    return;
                }
                e.preventDefault();
                if (p.animating) {
                    isTouched = false;
                    return;
                }
                allowItemClick = false;
                if (!isMoved) {
                    // First move
                    isMoved = true;
                    wrapperWidth = p.wrapper[0].offsetWidth;
                    wrapperHeight = p.wrapper[0].offsetHeight;
                    p.wrapper.transition(0);
                }
                e.preventDefault();

                touchesDiff = p.isH ? touchCurrentX - touchStartX : touchCurrentY - touchStartY;
                percentage = touchesDiff/(p.isH ? wrapperWidth : wrapperHeight);
                currentTranslate = (p.monthsTranslate * inverter + percentage) * 100;

                // Transform wrapper
                p.wrapper.transform('translate3d(' + (p.isH ? currentTranslate : 0) + '%, ' + (p.isH ? 0 : currentTranslate) + '%, 0)');

            }
            function handleTouchEnd (e) {
                if (!isTouched || !isMoved) {
                    isTouched = isMoved = false;
                    return;
                }
                isTouched = isMoved = false;

                touchEndTime = new Date().getTime();
                if (touchEndTime - touchStartTime < 300) {
                    if (Math.abs(touchesDiff) < 10) {
                        p.resetMonth();
                    }
                    else if (touchesDiff >= 10) {
                        if (rtl) p.nextMonth();
                        else p.prevMonth();
                    }
                    else {
                        if (rtl) p.prevMonth();
                        else p.nextMonth();
                    }
                }
                else {
                    if (percentage <= -0.5) {
                        if (rtl) p.prevMonth();
                        else p.nextMonth();
                    }
                    else if (percentage >= 0.5) {
                        if (rtl) p.nextMonth();
                        else p.prevMonth();
                    }
                    else {
                        p.resetMonth();
                    }
                }

                // Allow click
                setTimeout(function () {
                    allowItemClick = true;
                }, 100);
            }

            function handleDayClick(e) {
                if (!allowItemClick) return;
                var day = $(e.target).parents('.picker-calendar-day');
                if (day.length === 0 && $(e.target).hasClass('picker-calendar-day')) {
                    day = $(e.target);
                }
                if (day.length === 0) return;
                if (day.hasClass('picker-calendar-day-selected') && !p.params.multiple) return;
                if (day.hasClass('picker-calendar-day-disabled')) return;
                if (day.hasClass('picker-calendar-day-next')) p.nextMonth();
                if (day.hasClass('picker-calendar-day-prev')) p.prevMonth();
                var dateYear = day.attr('data-year');
                var dateMonth = day.attr('data-month');
                var dateDay = day.attr('data-day');
                if (p.params.onDayClick) {
                    p.params.onDayClick(p, day[0], dateYear, dateMonth, dateDay);
                }
                p.addValue(new Date(dateYear, dateMonth, dateDay).getTime());
                if (p.params.closeOnSelect) p.close();
            }

            p.container.find('.picker-calendar-prev-month').on('click', p.prevMonth);
            p.container.find('.picker-calendar-next-month').on('click', p.nextMonth);
            p.container.find('.picker-calendar-prev-year').on('click', p.prevYear);
            p.container.find('.picker-calendar-next-year').on('click', p.nextYear);
            p.wrapper.on('click', handleDayClick);
            if (p.params.touchMove) {
                p.wrapper.on($.touchEvents.start, handleTouchStart);
                p.wrapper.on($.touchEvents.move, handleTouchMove);
                p.wrapper.on($.touchEvents.end, handleTouchEnd);
            }

            p.container[0].f7DestroyCalendarEvents = function () {
                p.container.find('.picker-calendar-prev-month').off('click', p.prevMonth);
                p.container.find('.picker-calendar-next-month').off('click', p.nextMonth);
                p.container.find('.picker-calendar-prev-year').off('click', p.prevYear);
                p.container.find('.picker-calendar-next-year').off('click', p.nextYear);
                p.wrapper.off('click', handleDayClick);
                if (p.params.touchMove) {
                    p.wrapper.off($.touchEvents.start, handleTouchStart);
                    p.wrapper.off($.touchEvents.move, handleTouchMove);
                    p.wrapper.off($.touchEvents.end, handleTouchEnd);
                }
            };


        };
        p.destroyCalendarEvents = function (colContainer) {
            if ('f7DestroyCalendarEvents' in p.container[0]) p.container[0].f7DestroyCalendarEvents();
        };

        // Calendar Methods
        p.daysInMonth = function (date) {
            var d = new Date(date);
            return new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate();
        };
        p.monthHTML = function (date, offset) {
            date = new Date(date);
            var year = date.getFullYear(),
                month = date.getMonth(),
                day = date.getDate();
            if (offset === 'next') {
                if (month === 11) date = new Date(year + 1, 0);
                else date = new Date(year, month + 1, 1);
            }
            if (offset === 'prev') {
                if (month === 0) date = new Date(year - 1, 11);
                else date = new Date(year, month - 1, 1);
            }
            if (offset === 'next' || offset === 'prev') {
                month = date.getMonth();
                year = date.getFullYear();
            }
            var daysInPrevMonth = p.daysInMonth(new Date(date.getFullYear(), date.getMonth()).getTime() - 10 * 24 * 60 * 60 * 1000),
                daysInMonth = p.daysInMonth(date),
                firstDayOfMonthIndex = new Date(date.getFullYear(), date.getMonth()).getDay();
            if (firstDayOfMonthIndex === 0) firstDayOfMonthIndex = 7;

            var dayDate, currentValues = [], i, j,
                rows = 6, cols = 7,
                monthHTML = '',
                dayIndex = 0 + (p.params.firstDay - 1),
                today = new Date().setHours(0,0,0,0),
                minDate = p.params.minDate ? new Date(p.params.minDate).getTime() : null,
                maxDate = p.params.maxDate ? new Date(p.params.maxDate).getTime() : null;

            if (p.value && p.value.length) {
                for (i = 0; i < p.value.length; i++) {
                    currentValues.push(new Date(p.value[i]).setHours(0,0,0,0));
                }
            }

            for (i = 1; i <= rows; i++) {
                var rowHTML = '';
                var row = i;
                for (j = 1; j <= cols; j++) {
                    var col = j;
                    dayIndex ++;
                    var dayNumber = dayIndex - firstDayOfMonthIndex;
                    var addClass = '';
                    if (dayNumber < 0) {
                        dayNumber = daysInPrevMonth + dayNumber + 1;
                        addClass += ' picker-calendar-day-prev';
                        dayDate = new Date(month - 1 < 0 ? year - 1 : year, month - 1 < 0 ? 11 : month - 1, dayNumber).getTime();
                    }
                    else {
                        dayNumber = dayNumber + 1;
                        if (dayNumber > daysInMonth) {
                            dayNumber = dayNumber - daysInMonth;
                            addClass += ' picker-calendar-day-next';
                            dayDate = new Date(month + 1 > 11 ? year + 1 : year, month + 1 > 11 ? 0 : month + 1, dayNumber).getTime();
                        }
                        else {
                            dayDate = new Date(year, month, dayNumber).getTime();
                        }
                    }
                    // Today
                    if (dayDate === today) addClass += ' picker-calendar-day-today';
                    // Selected
                    if (currentValues.indexOf(dayDate) >= 0) addClass += ' picker-calendar-day-selected';
                    // Weekend
                    if (p.params.weekendDays.indexOf(col - 1) >= 0) {
                        addClass += ' picker-calendar-day-weekend';
                    }
                    // Disabled
                    if ((minDate && dayDate < minDate) || (maxDate && dayDate > maxDate)) {
                        addClass += ' picker-calendar-day-disabled';
                    }

                    dayDate = new Date(dayDate);
                    var dayYear = dayDate.getFullYear();
                    var dayMonth = dayDate.getMonth();
                    rowHTML += '<div data-year="' + dayYear + '" data-month="' + dayMonth + '" data-day="' + dayNumber + '" class="picker-calendar-day' + (addClass) + '" data-date="' + (dayYear + '-' + dayMonth + '-' + dayNumber) + '"><span>'+dayNumber+'</span></div>';
                }
                monthHTML += '<div class="picker-calendar-row">' + rowHTML + '</div>';
            }
            monthHTML = '<div class="picker-calendar-month" data-year="' + year + '" data-month="' + month + '">' + monthHTML + '</div>';
            return monthHTML;
        };
        p.animating = false;
        p.updateCurrentMonthYear = function (dir) {
            if (typeof dir === 'undefined') {
                p.currentMonth = parseInt(p.months.eq(1).attr('data-month'), 10);
                p.currentYear = parseInt(p.months.eq(1).attr('data-year'), 10);
            }
            else {
                p.currentMonth = parseInt(p.months.eq(dir === 'next' ? (p.months.length - 1) : 0).attr('data-month'), 10);
                p.currentYear = parseInt(p.months.eq(dir === 'next' ? (p.months.length - 1) : 0).attr('data-year'), 10);
            }
            p.container.find('.current-month-value').text(p.params.monthNames[p.currentMonth]);
            p.container.find('.current-year-value').text(p.currentYear);

        };
        p.onMonthChangeStart = function (dir) {
            p.updateCurrentMonthYear(dir);
            p.months.removeClass('picker-calendar-month-current picker-calendar-month-prev picker-calendar-month-next');
            var currentIndex = dir === 'next' ? p.months.length - 1 : 0;

            p.months.eq(currentIndex).addClass('picker-calendar-month-current');
            p.months.eq(dir === 'next' ? currentIndex - 1 : currentIndex + 1).addClass(dir === 'next' ? 'picker-calendar-month-prev' : 'picker-calendar-month-next');

            if (p.params.onMonthYearChangeStart) {
                p.params.onMonthYearChangeStart(p, p.currentYear, p.currentMonth);
            }
        };
        p.onMonthChangeEnd = function (dir, rebuildBoth) {
            p.animating = false;
            var nextMonthHTML, prevMonthHTML, newMonthHTML;
            p.wrapper.find('.picker-calendar-month:not(.picker-calendar-month-prev):not(.picker-calendar-month-current):not(.picker-calendar-month-next)').remove();

            if (typeof dir === 'undefined') {
                dir = 'next';
                rebuildBoth = true;
            }
            if (!rebuildBoth) {
                newMonthHTML = p.monthHTML(new Date(p.currentYear, p.currentMonth), dir);
            }
            else {
                p.wrapper.find('.picker-calendar-month-next, .picker-calendar-month-prev').remove();
                prevMonthHTML = p.monthHTML(new Date(p.currentYear, p.currentMonth), 'prev');
                nextMonthHTML = p.monthHTML(new Date(p.currentYear, p.currentMonth), 'next');
            }
            if (dir === 'next' || rebuildBoth) {
                p.wrapper.append(newMonthHTML || nextMonthHTML);
            }
            if (dir === 'prev' || rebuildBoth) {
                p.wrapper.prepend(newMonthHTML || prevMonthHTML);
            }
            p.months = p.wrapper.find('.picker-calendar-month');
            p.setMonthsTranslate(p.monthsTranslate);
            if (p.params.onMonthAdd) {
                p.params.onMonthAdd(p, dir === 'next' ? p.months.eq(p.months.length - 1)[0] : p.months.eq(0)[0]);
            }
            if (p.params.onMonthYearChangeEnd) {
                p.params.onMonthYearChangeEnd(p, p.currentYear, p.currentMonth);
            }
        };
        p.setMonthsTranslate = function (translate) {
            translate = translate || p.monthsTranslate || 0;
            if (typeof p.monthsTranslate === 'undefined') p.monthsTranslate = translate;
            p.months.removeClass('picker-calendar-month-current picker-calendar-month-prev picker-calendar-month-next');
            var prevMonthTranslate = -(translate + 1) * 100 * inverter;
            var currentMonthTranslate = -translate * 100 * inverter;
            var nextMonthTranslate = -(translate - 1) * 100 * inverter;
            p.months.eq(0).transform('translate3d(' + (p.isH ? prevMonthTranslate : 0) + '%, ' + (p.isH ? 0 : prevMonthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');
            p.months.eq(1).transform('translate3d(' + (p.isH ? currentMonthTranslate : 0) + '%, ' + (p.isH ? 0 : currentMonthTranslate) + '%, 0)').addClass('picker-calendar-month-current');
            p.months.eq(2).transform('translate3d(' + (p.isH ? nextMonthTranslate : 0) + '%, ' + (p.isH ? 0 : nextMonthTranslate) + '%, 0)').addClass('picker-calendar-month-next');
        };
        p.nextMonth = function (transition) {
            if (typeof transition === 'undefined' || typeof transition === 'object') {
                transition = '';
                if (!p.params.animate) transition = 0;
            }
            var nextMonth = parseInt(p.months.eq(p.months.length - 1).attr('data-month'), 10);
            var nextYear = parseInt(p.months.eq(p.months.length - 1).attr('data-year'), 10);
            var nextDate = new Date(nextYear, nextMonth);
            var nextDateTime = nextDate.getTime();
            var transitionEndCallback = p.animating ? false : true;
            if (p.params.maxDate) {
                if (nextDateTime > new Date(p.params.maxDate).getTime()) {
                    return p.resetMonth();
                }
            }
            p.monthsTranslate --;
            if (nextMonth === p.currentMonth) {
                var nextMonthTranslate = -(p.monthsTranslate) * 100 * inverter;
                var nextMonthHTML = $(p.monthHTML(nextDateTime, 'next')).transform('translate3d(' + (p.isH ? nextMonthTranslate : 0) + '%, ' + (p.isH ? 0 : nextMonthTranslate) + '%, 0)').addClass('picker-calendar-month-next');
                p.wrapper.append(nextMonthHTML[0]);
                p.months = p.wrapper.find('.picker-calendar-month');
                if (p.params.onMonthAdd) {
                    p.params.onMonthAdd(p, p.months.eq(p.months.length - 1)[0]);
                }
            }
            p.animating = true;
            p.onMonthChangeStart('next');
            var translate = (p.monthsTranslate * 100) * inverter;

            p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? translate : 0) + '%, ' + (p.isH ? 0 : translate) + '%, 0)');
            if (transitionEndCallback) {
                p.wrapper.transitionEnd(function () {
                    p.onMonthChangeEnd('next');
                });
            }
            if (!p.params.animate) {
                p.onMonthChangeEnd('next');
            }
        };
        p.prevMonth = function (transition) {
            if (typeof transition === 'undefined' || typeof transition === 'object') {
                transition = '';
                if (!p.params.animate) transition = 0;
            }
            var prevMonth = parseInt(p.months.eq(0).attr('data-month'), 10);
            var prevYear = parseInt(p.months.eq(0).attr('data-year'), 10);
            var prevDate = new Date(prevYear, prevMonth + 1, -1);
            var prevDateTime = prevDate.getTime();
            var transitionEndCallback = p.animating ? false : true;
            if (p.params.minDate) {
                if (prevDateTime < new Date(p.params.minDate).getTime()) {
                    return p.resetMonth();
                }
            }
            p.monthsTranslate ++;
            if (prevMonth === p.currentMonth) {
                var prevMonthTranslate = -(p.monthsTranslate) * 100 * inverter;
                var prevMonthHTML = $(p.monthHTML(prevDateTime, 'prev')).transform('translate3d(' + (p.isH ? prevMonthTranslate : 0) + '%, ' + (p.isH ? 0 : prevMonthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');
                p.wrapper.prepend(prevMonthHTML[0]);
                p.months = p.wrapper.find('.picker-calendar-month');
                if (p.params.onMonthAdd) {
                    p.params.onMonthAdd(p, p.months.eq(0)[0]);
                }
            }
            p.animating = true;
            p.onMonthChangeStart('prev');
            var translate = (p.monthsTranslate * 100) * inverter;
            p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? translate : 0) + '%, ' + (p.isH ? 0 : translate) + '%, 0)');
            if (transitionEndCallback) {
                p.wrapper.transitionEnd(function () {
                    p.onMonthChangeEnd('prev');
                });
            }
            if (!p.params.animate) {
                p.onMonthChangeEnd('prev');
            }
        };
        p.resetMonth = function (transition) {
            if (typeof transition === 'undefined') transition = '';
            var translate = (p.monthsTranslate * 100) * inverter;
            p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? translate : 0) + '%, ' + (p.isH ? 0 : translate) + '%, 0)');
        };
        p.setYearMonth = function (year, month, transition) {
            if (typeof year === 'undefined') year = p.currentYear;
            if (typeof month === 'undefined') month = p.currentMonth;
            if (typeof transition === 'undefined' || typeof transition === 'object') {
                transition = '';
                if (!p.params.animate) transition = 0;
            }
            var targetDate;
            if (year < p.currentYear) {
                targetDate = new Date(year, month + 1, -1).getTime();
            }
            else {
                targetDate = new Date(year, month).getTime();
            }
            if (p.params.maxDate && targetDate > new Date(p.params.maxDate).getTime()) {
                return false;
            }
            if (p.params.minDate && targetDate < new Date(p.params.minDate).getTime()) {
                return false;
            }
            var currentDate = new Date(p.currentYear, p.currentMonth).getTime();
            var dir = targetDate > currentDate ? 'next' : 'prev';
            var newMonthHTML = p.monthHTML(new Date(year, month));
            p.monthsTranslate = p.monthsTranslate || 0;
            var prevTranslate = p.monthsTranslate;
            var monthTranslate, wrapperTranslate;
            var transitionEndCallback = p.animating ? false : true;
            if (targetDate > currentDate) {
                // To next
                p.monthsTranslate --;
                if (!p.animating) p.months.eq(p.months.length - 1).remove();
                p.wrapper.append(newMonthHTML);
                p.months = p.wrapper.find('.picker-calendar-month');
                monthTranslate = -(prevTranslate - 1) * 100 * inverter;
                p.months.eq(p.months.length - 1).transform('translate3d(' + (p.isH ? monthTranslate : 0) + '%, ' + (p.isH ? 0 : monthTranslate) + '%, 0)').addClass('picker-calendar-month-next');
            }
            else {
                // To prev
                p.monthsTranslate ++;
                if (!p.animating) p.months.eq(0).remove();
                p.wrapper.prepend(newMonthHTML);
                p.months = p.wrapper.find('.picker-calendar-month');
                monthTranslate = -(prevTranslate + 1) * 100 * inverter;
                p.months.eq(0).transform('translate3d(' + (p.isH ? monthTranslate : 0) + '%, ' + (p.isH ? 0 : monthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');
            }
            if (p.params.onMonthAdd) {
                p.params.onMonthAdd(p, dir === 'next' ? p.months.eq(p.months.length - 1)[0] : p.months.eq(0)[0]);
            }
            p.animating = true;
            p.onMonthChangeStart(dir);
            wrapperTranslate = (p.monthsTranslate * 100) * inverter;
            p.wrapper.transition(transition).transform('translate3d(' + (p.isH ? wrapperTranslate : 0) + '%, ' + (p.isH ? 0 : wrapperTranslate) + '%, 0)');
            if (transitionEndCallback) {
                p.wrapper.transitionEnd(function () {
                    p.onMonthChangeEnd(dir, true);
                });
            }
            if (!p.params.animate) {
                p.onMonthChangeEnd(dir);
            }
        };
        p.nextYear = function () {
            p.setYearMonth(p.currentYear + 1);
        };
        p.prevYear = function () {
            p.setYearMonth(p.currentYear - 1);
        };


        // HTML Layout
        p.layout = function () {
            var pickerHTML = '';
            var pickerClass = '';
            var i;

            var layoutDate = p.value && p.value.length ? p.value[0] : new Date().setHours(0,0,0,0);
            var prevMonthHTML = p.monthHTML(layoutDate, 'prev');
            var currentMonthHTML = p.monthHTML(layoutDate);
            var nextMonthHTML = p.monthHTML(layoutDate, 'next');
            var monthsHTML = '<div class="picker-calendar-months"><div class="picker-calendar-months-wrapper">' + (prevMonthHTML + currentMonthHTML + nextMonthHTML) + '</div></div>';
            // Week days header
            var weekHeaderHTML = '';
            if (p.params.weekHeader) {
                for (i = 0; i < 7; i++) {
                    var weekDayIndex = (i + p.params.firstDay > 6) ? (i - 7 + p.params.firstDay) : (i + p.params.firstDay);
                    var dayName = p.params.dayNamesShort[weekDayIndex];
                    weekHeaderHTML += '<div class="picker-calendar-week-day ' + ((p.params.weekendDays.indexOf(weekDayIndex) >= 0) ? 'picker-calendar-week-day-weekend' : '') + '"> ' + dayName + '</div>';

                }
                weekHeaderHTML = '<div class="picker-calendar-week-days">' + weekHeaderHTML + '</div>';
            }
            pickerClass = 'picker-modal picker-calendar ' + (p.params.cssClass || '');
            var toolbarHTML = p.params.toolbar ? p.params.toolbarTemplate.replace(/{{closeText}}/g, p.params.toolbarCloseText) : '';
            if (p.params.toolbar) {
                toolbarHTML = p.params.toolbarTemplate
                    .replace(/{{closeText}}/g, p.params.toolbarCloseText)
                    .replace(/{{monthPicker}}/g, (p.params.monthPicker ? p.params.monthPickerTemplate : ''))
                    .replace(/{{yearPicker}}/g, (p.params.yearPicker ? p.params.yearPickerTemplate : ''));
            }

            pickerHTML =
                '<div class="' + (pickerClass) + '">' +
                toolbarHTML +
                '<div class="picker-modal-inner">' +
                weekHeaderHTML +
                monthsHTML +
                '</div>' +
                '</div>';


            p.pickerHTML = pickerHTML;
        };

        // Input Events
        function openOnInput(e) {
            e.preventDefault();
            // 安卓微信webviewreadonly的input依然弹出软键盘问题修复
            if ($.device.isWeixin && $.device.android && p.params.inputReadOnly) {
                /*jshint validthis:true */
                this.focus();
                this.blur();
            }
            if (p.opened) return;
            p.open();
            if (p.params.scrollToInput) {
                var pageContent = p.input.parents('.content');
                if (pageContent.length === 0) return;

                var paddingTop = parseInt(pageContent.css('padding-top'), 10),
                    paddingBottom = parseInt(pageContent.css('padding-bottom'), 10),
                    pageHeight = pageContent[0].offsetHeight - paddingTop - p.container.height(),
                    pageScrollHeight = pageContent[0].scrollHeight - paddingTop - p.container.height(),
                    newPaddingBottom;

                var inputTop = p.input.offset().top - paddingTop + p.input[0].offsetHeight;
                if (inputTop > pageHeight) {
                    var scrollTop = pageContent.scrollTop() + inputTop - pageHeight;
                    if (scrollTop + pageHeight > pageScrollHeight) {
                        newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;
                        if (pageHeight === pageScrollHeight) {
                            newPaddingBottom = p.container.height();
                        }
                        pageContent.css({'padding-bottom': (newPaddingBottom) + 'px'});
                    }
                    pageContent.scrollTop(scrollTop, 300);
                }
            }
        }
        function closeOnHTMLClick(e) {
            if (p.input && p.input.length > 0) {
                if (e.target !== p.input[0] && $(e.target).parents('.picker-modal').length === 0) p.close();
            }
            else {
                if ($(e.target).parents('.picker-modal').length === 0) p.close();
            }
        }

        if (p.params.input) {
            p.input = $(p.params.input);
            if (p.input.length > 0) {
                if (p.params.inputReadOnly) p.input.prop('readOnly', true);
                if (!p.inline) {
                    p.input.on('click', openOnInput);
                }
            }

        }

        if (!p.inline) $('html').on('click', closeOnHTMLClick);

        // Open
        function onPickerClose() {
            p.opened = false;
            if (p.input && p.input.length > 0) p.input.parents('.content').css({'padding-bottom': ''});
            if (p.params.onClose) p.params.onClose(p);

            // Destroy events
            p.destroyCalendarEvents();
        }

        p.opened = false;
        p.open = function () {
            var updateValue = false;
            if (!p.opened) {
                // Set date value
                if (!p.value) {
                    if (p.params.value) {
                        p.value = p.params.value;
                        updateValue = true;
                    }
                }

                // Layout
                p.layout();

                // Append
                if (p.inline) {
                    p.container = $(p.pickerHTML);
                    p.container.addClass('picker-modal-inline');
                    $(p.params.container).append(p.container);
                }
                else {
                    p.container = $($.pickerModal(p.pickerHTML));
                    $(p.container)
                        .on('close', function () {
                            onPickerClose();
                        });
                }

                // Store calendar instance
                p.container[0].f7Calendar = p;
                p.wrapper = p.container.find('.picker-calendar-months-wrapper');

                // Months
                p.months = p.wrapper.find('.picker-calendar-month');

                // Update current month and year
                p.updateCurrentMonthYear();

                // Set initial translate
                p.monthsTranslate = 0;
                p.setMonthsTranslate();

                // Init events
                p.initCalendarEvents();

                // Update input value
                if (updateValue) p.updateValue();

            }

            // Set flag
            p.opened = true;
            p.initialized = true;
            if (p.params.onMonthAdd) {
                p.months.each(function () {
                    p.params.onMonthAdd(p, this);
                });
            }
            if (p.params.onOpen) p.params.onOpen(p);
        };

        // Close
        p.close = function () {
            if (!p.opened || p.inline) return;
            $.closeModal(p.container);
            return;
        };

        // Destroy
        p.destroy = function () {
            p.close();
            if (p.params.input && p.input.length > 0) {
                p.input.off('click', openOnInput);
            }
            $('html').off('click', closeOnHTMLClick);
        };

        if (p.inline) {
            p.open();
        }

        return p;
    };
    $.fn.calendar = function (params) {
        return this.each(function() {
            var $this = $(this);
            if(!$this[0]) return;
            var p = {};
            if($this[0].tagName.toUpperCase() === "INPUT") {
                p.input = $this;
            } else {
                p.container = $this;
            }
            new Calendar($.extend(p, params));
        });
    };

    $.initCalendar = function(content) {
        var $content = content ? $(content) : $(document.body);
        $content.find("[data-toggle='date']").each(function() {
            $(this).calendar();
        });
    };
}(jQuery);

/*======================================================
 ************   Picker   ************
 ======================================================*/
/* jshint unused:false */
/* jshint multistr:true */
+ function($) {
    "use strict";
    var Picker = function (params) {
        var p = this;
        var defaults = {
            updateValuesOnMomentum: false,
            updateValuesOnTouchmove: true,
            rotateEffect: false,
            momentumRatio: 7,
            freeMode: false,
            // Common settings
            scrollToInput: true,
            inputReadOnly: true,
            toolbar: true,
            toolbarCloseText: '确定',
            toolbarTemplate: '<header class="bar bar-nav">\
                <button class="button button-link pull-right close-picker">确定</button>\
                <h1 class="title">请选择</h1>\
                </header>',
        };
        params = params || {};
        for (var def in defaults) {
            if (typeof params[def] === 'undefined') {
                params[def] = defaults[def];
            }
        }
        p.params = params;
        p.cols = [];
        p.initialized = false;

        // Inline flag
        p.inline = p.params.container ? true : false;

        // 3D Transforms origin bug, only on safari
        var originBug = $.device.ios || (navigator.userAgent.toLowerCase().indexOf('safari') >= 0 && navigator.userAgent.toLowerCase().indexOf('chrome') < 0) && !$.device.android;

        // Value
        p.setValue = function (arrValues, transition) {
            var valueIndex = 0;
            for (var i = 0; i < p.cols.length; i++) {
                if (p.cols[i] && !p.cols[i].divider) {
                    p.cols[i].setValue(arrValues[valueIndex], transition);
                    valueIndex++;
                }
            }
        };
        p.updateValue = function () {
            var newValue = [];
            var newDisplayValue = [];
            for (var i = 0; i < p.cols.length; i++) {
                if (!p.cols[i].divider) {
                    newValue.push(p.cols[i].value);
                    newDisplayValue.push(p.cols[i].displayValue);
                }
            }
            if (newValue.indexOf(undefined) >= 0) {
                return;
            }
            p.value = newValue;
            p.displayValue = newDisplayValue;
            if (p.params.onChange) {
                p.params.onChange(p, p.value, p.displayValue);
            }
            if (p.input && p.input.length > 0) {
                $(p.input).val(p.params.formatValue ? p.params.formatValue(p, p.value, p.displayValue) : p.value.join(' '));
                $(p.input).trigger('change');
            }
        };

        // Columns Handlers
        p.initPickerCol = function (colElement, updateItems) {
            var colContainer = $(colElement);
            var colIndex = colContainer.index();
            var col = p.cols[colIndex];
            if (col.divider) return;
            col.container = colContainer;
            col.wrapper = col.container.find('.picker-items-col-wrapper');
            col.items = col.wrapper.find('.picker-item');

            var i, j;
            var wrapperHeight, itemHeight, itemsHeight, minTranslate, maxTranslate;
            col.replaceValues = function (values, displayValues) {
                col.destroyEvents();
                col.values = values;
                col.displayValues = displayValues;
                var newItemsHTML = p.columnHTML(col, true);
                col.wrapper.html(newItemsHTML);
                col.items = col.wrapper.find('.picker-item');
                col.calcSize();
                col.setValue(col.values[0], 0, true);
                col.initEvents();
            };
            col.calcSize = function () {
                if (p.params.rotateEffect) {
                    col.container.removeClass('picker-items-col-absolute');
                    if (!col.width) col.container.css({width:''});
                }
                var colWidth, colHeight;
                colWidth = 0;
                colHeight = col.container[0].offsetHeight;
                wrapperHeight = col.wrapper[0].offsetHeight;
                itemHeight = col.items[0].offsetHeight;
                itemsHeight = itemHeight * col.items.length;
                minTranslate = colHeight / 2 - itemsHeight + itemHeight / 2;
                maxTranslate = colHeight / 2 - itemHeight / 2;
                if (col.width) {
                    colWidth = col.width;
                    if (parseInt(colWidth, 10) === colWidth) colWidth = colWidth + 'px';
                    col.container.css({width: colWidth});
                }
                if (p.params.rotateEffect) {
                    if (!col.width) {
                        col.items.each(function () {
                            var item = $(this);
                            item.css({width:'auto'});
                            colWidth = Math.max(colWidth, item[0].offsetWidth);
                            item.css({width:''});
                        });
                        col.container.css({width: (colWidth + 2) + 'px'});
                    }
                    col.container.addClass('picker-items-col-absolute');
                }
            };
            col.calcSize();

            col.wrapper.transform('translate3d(0,' + maxTranslate + 'px,0)').transition(0);


            var activeIndex = 0;
            var animationFrameId;

            // Set Value Function
            col.setValue = function (newValue, transition, valueCallbacks) {
                if (typeof transition === 'undefined') transition = '';
                var newActiveIndex = col.wrapper.find('.picker-item[data-picker-value="' + newValue + '"]').index();
                if(typeof newActiveIndex === 'undefined' || newActiveIndex === -1) {
                    return;
                }
                var newTranslate = -newActiveIndex * itemHeight + maxTranslate;
                // Update wrapper
                col.wrapper.transition(transition);
                col.wrapper.transform('translate3d(0,' + (newTranslate) + 'px,0)');

                // Watch items
                if (p.params.updateValuesOnMomentum && col.activeIndex && col.activeIndex !== newActiveIndex ) {
                    $.cancelAnimationFrame(animationFrameId);
                    col.wrapper.transitionEnd(function(){
                        $.cancelAnimationFrame(animationFrameId);
                    });
                    updateDuringScroll();
                }

                // Update items
                col.updateItems(newActiveIndex, newTranslate, transition, valueCallbacks);
            };

            col.updateItems = function (activeIndex, translate, transition, valueCallbacks) {
                if (typeof translate === 'undefined') {
                    translate = $.getTranslate(col.wrapper[0], 'y');
                }
                if(typeof activeIndex === 'undefined') activeIndex = -Math.round((translate - maxTranslate)/itemHeight);
                if (activeIndex < 0) activeIndex = 0;
                if (activeIndex >= col.items.length) activeIndex = col.items.length - 1;
                var previousActiveIndex = col.activeIndex;
                col.activeIndex = activeIndex;
                /*
                 col.wrapper.find('.picker-selected, .picker-after-selected, .picker-before-selected').removeClass('picker-selected picker-after-selected picker-before-selected');

                 col.items.transition(transition);
                 var selectedItem = col.items.eq(activeIndex).addClass('picker-selected').transform('');
                 var prevItems = selectedItem.prevAll().addClass('picker-before-selected');
                 var nextItems = selectedItem.nextAll().addClass('picker-after-selected');
                 */
                //去掉 .picker-after-selected, .picker-before-selected 以提高性能
                col.wrapper.find('.picker-selected').removeClass('picker-selected');
                if (p.params.rotateEffect) {
                    col.items.transition(transition);
                }
                var selectedItem = col.items.eq(activeIndex).addClass('picker-selected').transform('');

                if (valueCallbacks || typeof valueCallbacks === 'undefined') {
                    // Update values
                    col.value = selectedItem.attr('data-picker-value');
                    col.displayValue = col.displayValues ? col.displayValues[activeIndex] : col.value;
                    // On change callback
                    if (previousActiveIndex !== activeIndex) {
                        if (col.onChange) {
                            col.onChange(p, col.value, col.displayValue);
                        }
                        p.updateValue();
                    }
                }

                // Set 3D rotate effect
                if (!p.params.rotateEffect) {
                    return;
                }
                var percentage = (translate - (Math.floor((translate - maxTranslate)/itemHeight) * itemHeight + maxTranslate)) / itemHeight;

                col.items.each(function () {
                    var item = $(this);
                    var itemOffsetTop = item.index() * itemHeight;
                    var translateOffset = maxTranslate - translate;
                    var itemOffset = itemOffsetTop - translateOffset;
                    var percentage = itemOffset / itemHeight;

                    var itemsFit = Math.ceil(col.height / itemHeight / 2) + 1;

                    var angle = (-18*percentage);
                    if (angle > 180) angle = 180;
                    if (angle < -180) angle = -180;
                    // Far class
                    if (Math.abs(percentage) > itemsFit) item.addClass('picker-item-far');
                    else item.removeClass('picker-item-far');
                    // Set transform
                    item.transform('translate3d(0, ' + (-translate + maxTranslate) + 'px, ' + (originBug ? -110 : 0) + 'px) rotateX(' + angle + 'deg)');
                });
            };

            function updateDuringScroll() {
                animationFrameId = $.requestAnimationFrame(function () {
                    col.updateItems(undefined, undefined, 0);
                    updateDuringScroll();
                });
            }

            // Update items on init
            if (updateItems) col.updateItems(0, maxTranslate, 0);

            var allowItemClick = true;
            var isTouched, isMoved, touchStartY, touchCurrentY, touchStartTime, touchEndTime, startTranslate, returnTo, currentTranslate, prevTranslate, velocityTranslate, velocityTime;
            function handleTouchStart (e) {
                if (isMoved || isTouched) return;
                e.preventDefault();
                isTouched = true;
                touchStartY = touchCurrentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
                touchStartTime = (new Date()).getTime();

                allowItemClick = true;
                startTranslate = currentTranslate = $.getTranslate(col.wrapper[0], 'y');
            }
            function handleTouchMove (e) {
                if (!isTouched) return;
                e.preventDefault();
                allowItemClick = false;
                touchCurrentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                if (!isMoved) {
                    // First move
                    $.cancelAnimationFrame(animationFrameId);
                    isMoved = true;
                    startTranslate = currentTranslate = $.getTranslate(col.wrapper[0], 'y');
                    col.wrapper.transition(0);
                }
                e.preventDefault();

                var diff = touchCurrentY - touchStartY;
                currentTranslate = startTranslate + diff;
                returnTo = undefined;

                // Normalize translate
                if (currentTranslate < minTranslate) {
                    currentTranslate = minTranslate - Math.pow(minTranslate - currentTranslate, 0.8);
                    returnTo = 'min';
                }
                if (currentTranslate > maxTranslate) {
                    currentTranslate = maxTranslate + Math.pow(currentTranslate - maxTranslate, 0.8);
                    returnTo = 'max';
                }
                // Transform wrapper
                col.wrapper.transform('translate3d(0,' + currentTranslate + 'px,0)');

                // Update items
                col.updateItems(undefined, currentTranslate, 0, p.params.updateValuesOnTouchmove);

                // Calc velocity
                velocityTranslate = currentTranslate - prevTranslate || currentTranslate;
                velocityTime = (new Date()).getTime();
                prevTranslate = currentTranslate;
            }
            function handleTouchEnd (e) {
                if (!isTouched || !isMoved) {
                    isTouched = isMoved = false;
                    return;
                }
                isTouched = isMoved = false;
                col.wrapper.transition('');
                if (returnTo) {
                    if (returnTo === 'min') {
                        col.wrapper.transform('translate3d(0,' + minTranslate + 'px,0)');
                    }
                    else col.wrapper.transform('translate3d(0,' + maxTranslate + 'px,0)');
                }
                touchEndTime = new Date().getTime();
                var velocity, newTranslate;
                if (touchEndTime - touchStartTime > 300) {
                    newTranslate = currentTranslate;
                }
                else {
                    velocity = Math.abs(velocityTranslate / (touchEndTime - velocityTime));
                    newTranslate = currentTranslate + velocityTranslate * p.params.momentumRatio;
                }

                newTranslate = Math.max(Math.min(newTranslate, maxTranslate), minTranslate);

                // Active Index
                var activeIndex = -Math.floor((newTranslate - maxTranslate)/itemHeight);

                // Normalize translate
                if (!p.params.freeMode) newTranslate = -activeIndex * itemHeight + maxTranslate;

                // Transform wrapper
                col.wrapper.transform('translate3d(0,' + (parseInt(newTranslate,10)) + 'px,0)');

                // Update items
                col.updateItems(activeIndex, newTranslate, '', true);

                // Watch items
                if (p.params.updateValuesOnMomentum) {
                    updateDuringScroll();
                    col.wrapper.transitionEnd(function(){
                        $.cancelAnimationFrame(animationFrameId);
                    });
                }

                // Allow click
                setTimeout(function () {
                    allowItemClick = true;
                }, 100);
            }

            function handleClick(e) {
                if (!allowItemClick) return;
                $.cancelAnimationFrame(animationFrameId);
                /*jshint validthis:true */
                var value = $(this).attr('data-picker-value');
                col.setValue(value);
            }

            col.initEvents = function (detach) {
                var method = detach ? 'off' : 'on';
                col.container[method]($.touchEvents.start, handleTouchStart);
                col.container[method]($.touchEvents.move, handleTouchMove);
                col.container[method]($.touchEvents.end, handleTouchEnd);
                col.items[method]('click', handleClick);
            };
            col.destroyEvents = function () {
                col.initEvents(true);
            };

            col.container[0].f7DestroyPickerCol = function () {
                col.destroyEvents();
            };

            col.initEvents();

        };
        p.destroyPickerCol = function (colContainer) {
            colContainer = $(colContainer);
            if ('f7DestroyPickerCol' in colContainer[0]) colContainer[0].f7DestroyPickerCol();
        };
        // Resize cols
        function resizeCols() {
            if (!p.opened) return;
            for (var i = 0; i < p.cols.length; i++) {
                if (!p.cols[i].divider) {
                    p.cols[i].calcSize();
                    p.cols[i].setValue(p.cols[i].value, 0, false);
                }
            }
        }
        $(window).on('resize', resizeCols);

        // HTML Layout
        p.columnHTML = function (col, onlyItems) {
            var columnItemsHTML = '';
            var columnHTML = '';
            if (col.divider) {
                columnHTML += '<div class="picker-items-col picker-items-col-divider ' + (col.textAlign ? 'picker-items-col-' + col.textAlign : '') + ' ' + (col.cssClass || '') + '">' + col.content + '</div>';
            }
            else {
                for (var j = 0; j < col.values.length; j++) {
                    columnItemsHTML += '<div class="picker-item" data-picker-value="' + col.values[j] + '">' + (col.displayValues ? col.displayValues[j] : col.values[j]) + '</div>';
                }

                columnHTML += '<div class="picker-items-col ' + (col.textAlign ? 'picker-items-col-' + col.textAlign : '') + ' ' + (col.cssClass || '') + '"><div class="picker-items-col-wrapper">' + columnItemsHTML + '</div></div>';
            }
            return onlyItems ? columnItemsHTML : columnHTML;
        };
        p.layout = function () {
            var pickerHTML = '';
            var pickerClass = '';
            var i;
            p.cols = [];
            var colsHTML = '';
            for (i = 0; i < p.params.cols.length; i++) {
                var col = p.params.cols[i];
                colsHTML += p.columnHTML(p.params.cols[i]);
                p.cols.push(col);
            }
            pickerClass = 'picker-modal picker-columns ' + (p.params.cssClass || '') + (p.params.rotateEffect ? ' picker-3d' : '');
            pickerHTML =
                '<div class="' + (pickerClass) + '">' +
                (p.params.toolbar ? p.params.toolbarTemplate.replace(/{{closeText}}/g, p.params.toolbarCloseText) : '') +
                '<div class="picker-modal-inner picker-items">' +
                colsHTML +
                '<div class="picker-center-highlight"></div>' +
                '</div>' +
                '</div>';

            p.pickerHTML = pickerHTML;
        };

        // Input Events
        function openOnInput(e) {
            e.preventDefault();
            // 安卓微信webviewreadonly的input依然弹出软键盘问题修复
            if ($.device.isWeixin && $.device.android && p.params.inputReadOnly) {
                /*jshint validthis:true */
                this.focus();
                this.blur();
            }
            if (p.opened) return;
            p.open();
            if (p.params.scrollToInput) {
                var pageContent = p.input.parents('.content');
                if (pageContent.length === 0) return;

                var paddingTop = parseInt(pageContent.css('padding-top'), 10),
                    paddingBottom = parseInt(pageContent.css('padding-bottom'), 10),
                    pageHeight = pageContent[0].offsetHeight - paddingTop - p.container.height(),
                    pageScrollHeight = pageContent[0].scrollHeight - paddingTop - p.container.height(),
                    newPaddingBottom;
                var inputTop = p.input.offset().top - paddingTop + p.input[0].offsetHeight;
                if (inputTop > pageHeight) {
                    var scrollTop = pageContent.scrollTop() + inputTop - pageHeight;
                    if (scrollTop + pageHeight > pageScrollHeight) {
                        newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;
                        if (pageHeight === pageScrollHeight) {
                            newPaddingBottom = p.container.height();
                        }
                        pageContent.css({'padding-bottom': (newPaddingBottom) + 'px'});
                    }
                    pageContent.scrollTop(scrollTop, 300);
                }
            }
        }
        function closeOnHTMLClick(e) {
            if (!p.opened) return;
            if (p.input && p.input.length > 0) {
                if (e.target !== p.input[0] && $(e.target).parents('.picker-modal').length === 0) p.close();
            }
            else {
                if ($(e.target).parents('.picker-modal').length === 0) p.close();
            }
        }

        if (p.params.input) {
            p.input = $(p.params.input);
            if (p.input.length > 0) {
                if (p.params.inputReadOnly) p.input.prop('readOnly', true);
                if (!p.inline) {
                    p.input.on('click', openOnInput);
                }
            }
        }

        if (!p.inline) $('html').on('click', closeOnHTMLClick);

        // Open
        function onPickerClose() {
            p.opened = false;
            if (p.input && p.input.length > 0) p.input.parents('.content').css({'padding-bottom': ''});
            if (p.params.onClose) p.params.onClose(p);

            // Destroy events
            p.container.find('.picker-items-col').each(function () {
                p.destroyPickerCol(this);
            });
        }

        p.opened = false;
        p.open = function () {
            if (!p.opened) {

                // Layout
                p.layout();

                // Append
                if (p.inline) {
                    p.container = $(p.pickerHTML);
                    p.container.addClass('picker-modal-inline');
                    $(p.params.container).append(p.container);
                    p.opened = true;
                }
                else {
                    p.container = $($.pickerModal(p.pickerHTML));
                    $(p.container)
                        .one('opened', function() {
                            p.opened = true;
                        })
                        .on('close', function () {
                            onPickerClose();
                        });
                }

                // Store picker instance
                p.container[0].f7Picker = p;

                // Init Events
                p.container.find('.picker-items-col').each(function () {
                    var updateItems = true;
                    if ((!p.initialized && p.params.value) || (p.initialized && p.value)) updateItems = false;
                    p.initPickerCol(this, updateItems);
                });

                // Set value
                if (!p.initialized) {
                    if (p.params.value) {
                        p.setValue(p.params.value, 0);
                    }
                }
                else {
                    if (p.value) p.setValue(p.value, 0);
                }
            }

            // Set flag
            p.initialized = true;

            if (p.params.onOpen) p.params.onOpen(p);
        };

        // Close
        p.close = function () {
            if (!p.opened || p.inline) return;
            $.closeModal(p.container);
            return;
        };

        // Destroy
        p.destroy = function () {
            p.close();
            if (p.params.input && p.input.length > 0) {
                p.input.off('click', openOnInput);
            }
            $('html').off('click', closeOnHTMLClick);
            $(window).off('resize', resizeCols);
        };

        if (p.inline) {
            p.open();
        }

        return p;
    };

    $(document).on("click", ".close-picker", function() {
        var pickerToClose = $('.picker-modal.modal-in');
        $.closeModal(pickerToClose);
    });

    $.fn.picker = function(params) {
        var args = arguments;
        return this.each(function() {
            if(!this) return;
            var $this = $(this);

            var picker = $this.data("picker");
            if(!picker) {
                var p = $.extend({
                    input: this,
                    value: $this.val() ? $this.val().split(' ') : ''
                }, params);
                picker = new Picker(p);
                $this.data("picker", picker);
            }
            if(typeof params === typeof "a") {
                picker[params].apply(picker, Array.prototype.slice.call(args, 1));
            }
        });
    };
}(jQuery);

/* jshint unused:false*/

+ function($) {
    "use strict";

    var today = new Date();

    var getDays = function(max) {
        var days = [];
        for(var i=1; i<= (max||31);i++) {
            days.push(i < 10 ? "0"+i : i);
        }
        return days;
    };

    var getDaysByMonthAndYear = function(month, year) {
        var int_d = new Date(year, parseInt(month)+1-1, 1);
        var d = new Date(int_d - 1);
        return getDays(d.getDate());
    };

    var formatNumber = function (n) {
        return n < 10 ? "0" + n : n;
    };

    var initMonthes = ('01 02 03 04 05 06 07 08 09 10 11 12').split(' ');

    var initYears = (function () {
        var arr = [];
        for (var i = 1950; i <= 2050; i++) { arr.push(i); }
        return arr;
    })();


    var defaults = {

        rotateEffect: false,  //为了性能

        value: [today.getFullYear(), formatNumber(today.getMonth()+1), formatNumber(today.getDate()), today.getHours(), formatNumber(today.getMinutes())],

        onChange: function (picker, values, displayValues) {
            var days = getDaysByMonthAndYear(picker.cols[1].value, picker.cols[0].value);
            var currentValue = picker.cols[2].value;
            if(currentValue > days.length) currentValue = days.length;
            picker.cols[2].setValue(currentValue);
        },

        formatValue: function (p, values, displayValues) {
            return displayValues[0] + '-' + values[1] + '-' + values[2] + ' ' + values[3] + ':' + values[4];
        },

        cols: [
            // Years
            {
                values: initYears
            },
            // Months
            {
                values: initMonthes
            },
            // Days
            {
                values: getDays()
            },

            // Space divider
            {
                divider: true,
                content: '  '
            },
            // Hours
            {
                values: (function () {
                    var arr = [];
                    for (var i = 0; i <= 23; i++) { arr.push(i); }
                    return arr;
                })(),
            },
            // Divider
            {
                divider: true,
                content: ':'
            },
            // Minutes
            {
                values: (function () {
                    var arr = [];
                    for (var i = 0; i <= 59; i++) { arr.push(i < 10 ? '0' + i : i); }
                    return arr;
                })(),
            }
        ]
    };

    $.fn.datetimePicker = function(params) {
        return this.each(function() {
            if(!this) return;
            var p = $.extend(defaults, params);
            $(this).picker(p);
            if (params.value) $(this).val(p.formatValue(p, p.value, p.value));
        });
    };

}(jQuery);

+ function(window) {

    "use strict";

    var rAF = window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.oRequestAnimationFrame ||
        window.msRequestAnimationFrame ||
        function(callback) {
            window.setTimeout(callback, 1000 / 60);
        };
    /*var cRAF = window.cancelRequestAnimationFrame ||
     window.webkitCancelRequestAnimationFrame ||
     window.mozCancelRequestAnimationFrame ||
     window.oCancelRequestAnimationFrame ||
     window.msCancelRequestAnimationFrame;*/

    var utils = (function() {
        var me = {};

        var _elementStyle = document.createElement('div').style;
        var _vendor = (function() {
            var vendors = ['t', 'webkitT', 'MozT', 'msT', 'OT'],
                transform,
                i = 0,
                l = vendors.length;

            for (; i < l; i++) {
                transform = vendors[i] + 'ransform';
                if (transform in _elementStyle) return vendors[i].substr(0, vendors[i].length - 1);
            }

            return false;
        })();

        function _prefixStyle(style) {
            if (_vendor === false) return false;
            if (_vendor === '') return style;
            return _vendor + style.charAt(0).toUpperCase() + style.substr(1);
        }

        me.getTime = Date.now || function getTime() {
                return new Date().getTime();
            };

        me.extend = function(target, obj) {
            for (var i in obj) {  // jshint ignore:line
                target[i] = obj[i];
            }
        };

        me.addEvent = function(el, type, fn, capture) {
            el.addEventListener(type, fn, !!capture);
        };

        me.removeEvent = function(el, type, fn, capture) {
            el.removeEventListener(type, fn, !!capture);
        };

        me.prefixPointerEvent = function(pointerEvent) {
            return window.MSPointerEvent ?
                'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10) :
                pointerEvent;
        };

        me.momentum = function(current, start, time, lowerMargin, wrapperSize, deceleration, self) {
            var distance = current - start,
                speed = Math.abs(distance) / time,
                destination,
                duration;

            // var absDistance = Math.abs(distance);
            speed = speed / 2; //slowdown
            speed = speed > 1.5 ? 1.5 : speed; //set max speed to 1
            deceleration = deceleration === undefined ? 0.0006 : deceleration;

            destination = current + (speed * speed) / (2 * deceleration) * (distance < 0 ? -1 : 1);
            duration = speed / deceleration;

            if (destination < lowerMargin) {
                destination = wrapperSize ? lowerMargin - (wrapperSize / 2.5 * (speed / 8)) : lowerMargin;
                distance = Math.abs(destination - current);
                duration = distance / speed;
            } else if (destination > 0) {
                destination = wrapperSize ? wrapperSize / 2.5 * (speed / 8) : 0;
                distance = Math.abs(current) + destination;
                duration = distance / speed;
            }

            //simple trigger, every 50ms
            var t = +new Date();
            var l = t;

            function eventTrigger() {
                if (+new Date() - l > 50) {
                    self._execEvent('scroll');
                    l = +new Date();
                }
                if (+new Date() - t < duration) {
                    rAF(eventTrigger);
                }
            }
            rAF(eventTrigger);

            return {
                destination: Math.round(destination),
                duration: duration
            };
        };

        var _transform = _prefixStyle('transform');

        me.extend(me, {
            hasTransform: _transform !== false,
            hasPerspective: _prefixStyle('perspective') in _elementStyle,
            hasTouch: 'ontouchstart' in window,
            hasPointer: window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed
            hasTransition: _prefixStyle('transition') in _elementStyle
        });

        // This should find all Android browsers lower than build 535.19 (both stock browser and webview)
        me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !(/Chrome\/\d/.test(window.navigator.appVersion)) && false; //this will cause many android device scroll flash; so set it to false!

        me.extend(me.style = {}, {
            transform: _transform,
            transitionTimingFunction: _prefixStyle('transitionTimingFunction'),
            transitionDuration: _prefixStyle('transitionDuration'),
            transitionDelay: _prefixStyle('transitionDelay'),
            transformOrigin: _prefixStyle('transformOrigin')
        });

        me.hasClass = function(e, c) {
            var re = new RegExp('(^|\\s)' + c + '(\\s|$)');
            return re.test(e.className);
        };

        me.addClass = function(e, c) {
            if (me.hasClass(e, c)) {
                return;
            }

            var newclass = e.className.split(' ');
            newclass.push(c);
            e.className = newclass.join(' ');
        };

        me.removeClass = function(e, c) {
            if (!me.hasClass(e, c)) {
                return;
            }

            var re = new RegExp('(^|\\s)' + c + '(\\s|$)', 'g');
            e.className = e.className.replace(re, ' ');
        };

        me.offset = function(el) {
            var left = -el.offsetLeft,
                top = -el.offsetTop;

            // jshint -W084
            while (el = el.offsetParent) {
                left -= el.offsetLeft;
                top -= el.offsetTop;
            }
            // jshint +W084

            return {
                left: left,
                top: top
            };
        };

        me.preventDefaultException = function(el, exceptions) {
            for (var i in exceptions) {
                if (exceptions[i].test(el[i])) {
                    return true;
                }
            }

            return false;
        };

        me.extend(me.eventType = {}, {
            touchstart: 1,
            touchmove: 1,
            touchend: 1,

            mousedown: 2,
            mousemove: 2,
            mouseup: 2,

            pointerdown: 3,
            pointermove: 3,
            pointerup: 3,

            MSPointerDown: 3,
            MSPointerMove: 3,
            MSPointerUp: 3
        });

        me.extend(me.ease = {}, {
            quadratic: {
                style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
                fn: function(k) {
                    return k * (2 - k);
                }
            },
            circular: {
                style: 'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly 'circular' but this looks better, it should be (0.075, 0.82, 0.165, 1)
                fn: function(k) {
                    return Math.sqrt(1 - (--k * k));
                }
            },
            back: {
                style: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
                fn: function(k) {
                    var b = 4;
                    return (k = k - 1) * k * ((b + 1) * k + b) + 1;
                }
            },
            bounce: {
                style: '',
                fn: function(k) {
                    if ((k /= 1) < (1 / 2.75)) {
                        return 7.5625 * k * k;
                    } else if (k < (2 / 2.75)) {
                        return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;
                    } else if (k < (2.5 / 2.75)) {
                        return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;
                    } else {
                        return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;
                    }
                }
            },
            elastic: {
                style: '',
                fn: function(k) {
                    var f = 0.22,
                        e = 0.4;

                    if (k === 0) {
                        return 0;
                    }
                    if (k === 1) {
                        return 1;
                    }

                    return (e * Math.pow(2, -10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1);
                }
            }
        });

        me.tap = function(e, eventName) {
            var ev = document.createEvent('Event');
            ev.initEvent(eventName, true, true);
            ev.pageX = e.pageX;
            ev.pageY = e.pageY;
            e.target.dispatchEvent(ev);
        };

        me.click = function(e) {
            var target = e.target,
                ev;

            if (!(/(SELECT|INPUT|TEXTAREA)/i).test(target.tagName)) {
                ev = document.createEvent('MouseEvents');
                ev.initMouseEvent('click', true, true, e.view, 1,
                    target.screenX, target.screenY, target.clientX, target.clientY,
                    e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,
                    0, null);

                ev._constructed = true;
                target.dispatchEvent(ev);
            }
        };

        return me;
    })();

    function IScroll(el, options) {
        this.wrapper = typeof el === 'string' ? document.querySelector(el) : el;
        this.scroller = $(this.wrapper).find('.content-inner')[0]; // jshint ignore:line


        this.scrollerStyle = this.scroller&&this.scroller.style; // cache style for better performance

        this.options = {

            resizeScrollbars: true,

            mouseWheelSpeed: 20,

            snapThreshold: 0.334,

            // INSERT POINT: OPTIONS

            startX: 0,
            startY: 0,
            scrollY: true,
            directionLockThreshold: 5,
            momentum: true,

            bounce: true,
            bounceTime: 600,
            bounceEasing: '',

            preventDefault: true,
            preventDefaultException: {
                tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/
            },

            HWCompositing: true,
            useTransition: true,
            useTransform: true,

            //other options
            eventPassthrough: undefined, //if you  want to use native scroll, you can set to: true or horizontal
        };

        for (var i in options) {
            this.options[i] = options[i];
        }

        // Normalize options
        this.translateZ = this.options.HWCompositing && utils.hasPerspective ? ' translateZ(0)' : '';

        this.options.useTransition = utils.hasTransition && this.options.useTransition;
        this.options.useTransform = utils.hasTransform && this.options.useTransform;

        this.options.eventPassthrough = this.options.eventPassthrough === true ? 'vertical' : this.options.eventPassthrough;
        this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;

        // If you want eventPassthrough I have to lock one of the axes
        this.options.scrollY = this.options.eventPassthrough === 'vertical' ? false : this.options.scrollY;
        this.options.scrollX = this.options.eventPassthrough === 'horizontal' ? false : this.options.scrollX;

        // With eventPassthrough we also need lockDirection mechanism
        this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;
        this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;

        this.options.bounceEasing = typeof this.options.bounceEasing === 'string' ? utils.ease[this.options.bounceEasing] || utils.ease.circular : this.options.bounceEasing;

        this.options.resizePolling = this.options.resizePolling === undefined ? 60 : this.options.resizePolling;

        if (this.options.tap === true) {
            this.options.tap = 'tap';
        }

        if (this.options.shrinkScrollbars === 'scale') {
            this.options.useTransition = false;
        }

        this.options.invertWheelDirection = this.options.invertWheelDirection ? -1 : 1;

        if (this.options.probeType === 3) {
            this.options.useTransition = false;
        }

        // INSERT POINT: NORMALIZATION

        // Some defaults
        this.x = 0;
        this.y = 0;
        this.directionX = 0;
        this.directionY = 0;
        this._events = {};

        // INSERT POINT: DEFAULTS

        this._init();
        this.refresh();

        this.scrollTo(this.options.startX, this.options.startY);
        this.enable();
    }

    IScroll.prototype = {
        version: '5.1.3',

        _init: function() {
            this._initEvents();

            if (this.options.scrollbars || this.options.indicators) {
                this._initIndicators();
            }

            if (this.options.mouseWheel) {
                this._initWheel();
            }

            if (this.options.snap) {
                this._initSnap();
            }

            if (this.options.keyBindings) {
                this._initKeys();
            }

            // INSERT POINT: _init

        },

        destroy: function() {
            this._initEvents(true);

            this._execEvent('destroy');
        },

        _transitionEnd: function(e) {
            if (e.target !== this.scroller || !this.isInTransition) {
                return;
            }

            this._transitionTime();
            if (!this.resetPosition(this.options.bounceTime)) {
                this.isInTransition = false;
                this._execEvent('scrollEnd');
            }
        },

        _start: function(e) {
            // React to left mouse button only
            if (utils.eventType[e.type] !== 1) {
                if (e.button !== 0) {
                    return;
                }
            }

            if (!this.enabled || (this.initiated && utils.eventType[e.type] !== this.initiated)) {
                return;
            }

            if (this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
                e.preventDefault();
            }

            var point = e.touches ? e.touches[0] : e,
                pos;

            this.initiated = utils.eventType[e.type];
            this.moved = false;
            this.distX = 0;
            this.distY = 0;
            this.directionX = 0;
            this.directionY = 0;
            this.directionLocked = 0;

            this._transitionTime();

            this.startTime = utils.getTime();

            if (this.options.useTransition && this.isInTransition) {
                this.isInTransition = false;
                pos = this.getComputedPosition();
                this._translate(Math.round(pos.x), Math.round(pos.y));
                this._execEvent('scrollEnd');
            } else if (!this.options.useTransition && this.isAnimating) {
                this.isAnimating = false;
                this._execEvent('scrollEnd');
            }

            this.startX = this.x;
            this.startY = this.y;
            this.absStartX = this.x;
            this.absStartY = this.y;
            this.pointX = point.pageX;
            this.pointY = point.pageY;

            this._execEvent('beforeScrollStart');
        },

        _move: function(e) {
            if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
                return;
            }

            if (this.options.preventDefault) { // increases performance on Android? TODO: check!
                e.preventDefault();
            }

            var point = e.touches ? e.touches[0] : e,
                deltaX = point.pageX - this.pointX,
                deltaY = point.pageY - this.pointY,
                timestamp = utils.getTime(),
                newX, newY,
                absDistX, absDistY;

            this.pointX = point.pageX;
            this.pointY = point.pageY;

            this.distX += deltaX;
            this.distY += deltaY;
            absDistX = Math.abs(this.distX);
            absDistY = Math.abs(this.distY);

            // We need to move at least 10 pixels for the scrolling to initiate
            if (timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10)) {
                return;
            }

            // If you are scrolling in one direction lock the other
            if (!this.directionLocked && !this.options.freeScroll) {
                if (absDistX > absDistY + this.options.directionLockThreshold) {
                    this.directionLocked = 'h'; // lock horizontally
                } else if (absDistY >= absDistX + this.options.directionLockThreshold) {
                    this.directionLocked = 'v'; // lock vertically
                } else {
                    this.directionLocked = 'n'; // no lock
                }
            }

            if (this.directionLocked === 'h') {
                if (this.options.eventPassthrough === 'vertical') {
                    e.preventDefault();
                } else if (this.options.eventPassthrough === 'horizontal') {
                    this.initiated = false;
                    return;
                }

                deltaY = 0;
            } else if (this.directionLocked === 'v') {
                if (this.options.eventPassthrough === 'horizontal') {
                    e.preventDefault();
                } else if (this.options.eventPassthrough === 'vertical') {
                    this.initiated = false;
                    return;
                }

                deltaX = 0;
            }

            deltaX = this.hasHorizontalScroll ? deltaX : 0;
            deltaY = this.hasVerticalScroll ? deltaY : 0;

            newX = this.x + deltaX;
            newY = this.y + deltaY;

            // Slow down if outside of the boundaries
            if (newX > 0 || newX < this.maxScrollX) {
                newX = this.options.bounce ? this.x + deltaX / 3 : newX > 0 ? 0 : this.maxScrollX;
            }
            if (newY > 0 || newY < this.maxScrollY) {
                newY = this.options.bounce ? this.y + deltaY / 3 : newY > 0 ? 0 : this.maxScrollY;
            }

            this.directionX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
            this.directionY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;

            if (!this.moved) {
                this._execEvent('scrollStart');
            }

            this.moved = true;

            this._translate(newX, newY);

            /* REPLACE START: _move */
            if (timestamp - this.startTime > 300) {
                this.startTime = timestamp;
                this.startX = this.x;
                this.startY = this.y;

                if (this.options.probeType === 1) {
                    this._execEvent('scroll');
                }
            }

            if (this.options.probeType > 1) {
                this._execEvent('scroll');
            }
            /* REPLACE END: _move */

        },

        _end: function(e) {
            if (!this.enabled || utils.eventType[e.type] !== this.initiated) {
                return;
            }

            if (this.options.preventDefault && !utils.preventDefaultException(e.target, this.options.preventDefaultException)) {
                e.preventDefault();
            }

            var /*point = e.changedTouches ? e.changedTouches[0] : e,*/
                momentumX,
                momentumY,
                duration = utils.getTime() - this.startTime,
                newX = Math.round(this.x),
                newY = Math.round(this.y),
                distanceX = Math.abs(newX - this.startX),
                distanceY = Math.abs(newY - this.startY),
                time = 0,
                easing = '';

            this.isInTransition = 0;
            this.initiated = 0;
            this.endTime = utils.getTime();

            // reset if we are outside of the boundaries
            if (this.resetPosition(this.options.bounceTime)) {
                return;
            }

            this.scrollTo(newX, newY); // ensures that the last position is rounded

            // we scrolled less than 10 pixels
            if (!this.moved) {
                if (this.options.tap) {
                    utils.tap(e, this.options.tap);
                }

                if (this.options.click) {
                    utils.click(e);
                }

                this._execEvent('scrollCancel');
                return;
            }

            if (this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100) {
                this._execEvent('flick');
                return;
            }

            // start momentum animation if needed
            if (this.options.momentum && duration < 300) {
                momentumX = this.hasHorizontalScroll ? utils.momentum(this.x, this.startX, duration, this.maxScrollX, this.options.bounce ? this.wrapperWidth : 0, this.options.deceleration, this) : {
                    destination: newX,
                    duration: 0
                };
                momentumY = this.hasVerticalScroll ? utils.momentum(this.y, this.startY, duration, this.maxScrollY, this.options.bounce ? this.wrapperHeight : 0, this.options.deceleration, this) : {
                    destination: newY,
                    duration: 0
                };
                newX = momentumX.destination;
                newY = momentumY.destination;
                time = Math.max(momentumX.duration, momentumY.duration);
                this.isInTransition = 1;
            }


            if (this.options.snap) {
                var snap = this._nearestSnap(newX, newY);
                this.currentPage = snap;
                time = this.options.snapSpeed || Math.max(
                        Math.max(
                            Math.min(Math.abs(newX - snap.x), 1000),
                            Math.min(Math.abs(newY - snap.y), 1000)
                        ), 300);
                newX = snap.x;
                newY = snap.y;

                this.directionX = 0;
                this.directionY = 0;
                easing = this.options.bounceEasing;
            }

            // INSERT POINT: _end

            if (newX !== this.x || newY !== this.y) {
                // change easing function when scroller goes out of the boundaries
                if (newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY) {
                    easing = utils.ease.quadratic;
                }

                this.scrollTo(newX, newY, time, easing);
                return;
            }

            this._execEvent('scrollEnd');
        },

        _resize: function() {
            var that = this;

            clearTimeout(this.resizeTimeout);

            this.resizeTimeout = setTimeout(function() {
                that.refresh();
            }, this.options.resizePolling);
        },

        resetPosition: function(time) {
            var x = this.x,
                y = this.y;

            time = time || 0;

            if (!this.hasHorizontalScroll || this.x > 0) {
                x = 0;
            } else if (this.x < this.maxScrollX) {
                x = this.maxScrollX;
            }

            if (!this.hasVerticalScroll || this.y > 0) {
                y = 0;
            } else if (this.y < this.maxScrollY) {
                y = this.maxScrollY;
            }

            if (x === this.x && y === this.y) {
                return false;
            }

            if (this.options.ptr && this.y > 44 && this.startY * -1 < $(window).height() && !this.ptrLock) {// jshint ignore:line
                // not trigger ptr when user want to scroll to top
                y = this.options.ptrOffset || 44;
                this._execEvent('ptr');
                // 防止返回的过程中再次触发了 ptr ，导致被定位到 44px（因为可能done事件触发很快，在返回到44px以前就触发done
                this.ptrLock = true;
                var self = this;
                setTimeout(function() {
                    self.ptrLock = false;
                }, 500);
            }

            this.scrollTo(x, y, time, this.options.bounceEasing);

            return true;
        },

        disable: function() {
            this.enabled = false;
        },

        enable: function() {
            this.enabled = true;
        },

        refresh: function() {
            // var rf = this.wrapper.offsetHeight; // Force reflow

            this.wrapperWidth = this.wrapper.clientWidth;
            this.wrapperHeight = this.wrapper.clientHeight;

            /* REPLACE START: refresh */

            this.scrollerWidth = this.scroller.offsetWidth;
            this.scrollerHeight = this.scroller.offsetHeight;

            this.maxScrollX = this.wrapperWidth - this.scrollerWidth;
            this.maxScrollY = this.wrapperHeight - this.scrollerHeight;

            /* REPLACE END: refresh */

            this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;
            this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;

            if (!this.hasHorizontalScroll) {
                this.maxScrollX = 0;
                this.scrollerWidth = this.wrapperWidth;
            }

            if (!this.hasVerticalScroll) {
                this.maxScrollY = 0;
                this.scrollerHeight = this.wrapperHeight;
            }

            this.endTime = 0;
            this.directionX = 0;
            this.directionY = 0;

            this.wrapperOffset = utils.offset(this.wrapper);

            this._execEvent('refresh');

            this.resetPosition();

            // INSERT POINT: _refresh

        },

        on: function(type, fn) {
            if (!this._events[type]) {
                this._events[type] = [];
            }

            this._events[type].push(fn);
        },

        off: function(type, fn) {
            if (!this._events[type]) {
                return;
            }

            var index = this._events[type].indexOf(fn);

            if (index > -1) {
                this._events[type].splice(index, 1);
            }
        },

        _execEvent: function(type) {
            if (!this._events[type]) {
                return;
            }

            var i = 0,
                l = this._events[type].length;

            if (!l) {
                return;
            }

            for (; i < l; i++) {
                this._events[type][i].apply(this, [].slice.call(arguments, 1));
            }
        },

        scrollBy: function(x, y, time, easing) {
            x = this.x + x;
            y = this.y + y;
            time = time || 0;

            this.scrollTo(x, y, time, easing);
        },

        scrollTo: function(x, y, time, easing) {
            easing = easing || utils.ease.circular;

            this.isInTransition = this.options.useTransition && time > 0;

            if (!time || (this.options.useTransition && easing.style)) {
                this._transitionTimingFunction(easing.style);
                this._transitionTime(time);
                this._translate(x, y);
            } else {
                this._animate(x, y, time, easing.fn);
            }
        },

        scrollToElement: function(el, time, offsetX, offsetY, easing) {
            el = el.nodeType ? el : this.scroller.querySelector(el);

            if (!el) {
                return;
            }

            var pos = utils.offset(el);

            pos.left -= this.wrapperOffset.left;
            pos.top -= this.wrapperOffset.top;

            // if offsetX/Y are true we center the element to the screen
            if (offsetX === true) {
                offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);
            }
            if (offsetY === true) {
                offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);
            }

            pos.left -= offsetX || 0;
            pos.top -= offsetY || 0;

            pos.left = pos.left > 0 ? 0 : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;
            pos.top = pos.top > 0 ? 0 : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;

            time = time === undefined || time === null || time === 'auto' ? Math.max(Math.abs(this.x - pos.left), Math.abs(this.y - pos.top)) : time;

            this.scrollTo(pos.left, pos.top, time, easing);
        },

        _transitionTime: function(time) {
            time = time || 0;

            this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';

            if (!time && utils.isBadAndroid) {
                this.scrollerStyle[utils.style.transitionDuration] = '0.001s';
            }


            if (this.indicators) {
                for (var i = this.indicators.length; i--;) {
                    this.indicators[i].transitionTime(time);
                }
            }


            // INSERT POINT: _transitionTime

        },

        _transitionTimingFunction: function(easing) {
            this.scrollerStyle[utils.style.transitionTimingFunction] = easing;


            if (this.indicators) {
                for (var i = this.indicators.length; i--;) {
                    this.indicators[i].transitionTimingFunction(easing);
                }
            }


            // INSERT POINT: _transitionTimingFunction

        },

        _translate: function(x, y) {
            if (this.options.useTransform) {

                /* REPLACE START: _translate */

                this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ;

                /* REPLACE END: _translate */

            } else {
                x = Math.round(x);
                y = Math.round(y);
                this.scrollerStyle.left = x + 'px';
                this.scrollerStyle.top = y + 'px';
            }

            this.x = x;
            this.y = y;


            if (this.indicators) {
                for (var i = this.indicators.length; i--;) {
                    this.indicators[i].updatePosition();
                }
            }


            // INSERT POINT: _translate

        },

        _initEvents: function(remove) {
            var eventType = remove ? utils.removeEvent : utils.addEvent,
                target = this.options.bindToWrapper ? this.wrapper : window;

            eventType(window, 'orientationchange', this);
            eventType(window, 'resize', this);

            if (this.options.click) {
                eventType(this.wrapper, 'click', this, true);
            }

            if (!this.options.disableMouse) {
                eventType(this.wrapper, 'mousedown', this);
                eventType(target, 'mousemove', this);
                eventType(target, 'mousecancel', this);
                eventType(target, 'mouseup', this);
            }

            if (utils.hasPointer && !this.options.disablePointer) {
                eventType(this.wrapper, utils.prefixPointerEvent('pointerdown'), this);
                eventType(target, utils.prefixPointerEvent('pointermove'), this);
                eventType(target, utils.prefixPointerEvent('pointercancel'), this);
                eventType(target, utils.prefixPointerEvent('pointerup'), this);
            }

            if (utils.hasTouch && !this.options.disableTouch) {
                eventType(this.wrapper, 'touchstart', this);
                eventType(target, 'touchmove', this);
                eventType(target, 'touchcancel', this);
                eventType(target, 'touchend', this);
            }

            eventType(this.scroller, 'transitionend', this);
            eventType(this.scroller, 'webkitTransitionEnd', this);
            eventType(this.scroller, 'oTransitionEnd', this);
            eventType(this.scroller, 'MSTransitionEnd', this);
        },

        getComputedPosition: function() {
            var matrix = window.getComputedStyle(this.scroller, null),
                x, y;

            if (this.options.useTransform) {
                matrix = matrix[utils.style.transform].split(')')[0].split(', ');
                x = +(matrix[12] || matrix[4]);
                y = +(matrix[13] || matrix[5]);
            } else {
                x = +matrix.left.replace(/[^-\d.]/g, '');
                y = +matrix.top.replace(/[^-\d.]/g, '');
            }

            return {
                x: x,
                y: y
            };
        },

        _initIndicators: function() {
            var interactive = this.options.interactiveScrollbars,
                customStyle = typeof this.options.scrollbars !== 'string',
                indicators = [],
                indicator;

            var that = this;

            this.indicators = [];

            if (this.options.scrollbars) {
                // Vertical scrollbar
                if (this.options.scrollY) {
                    indicator = {
                        el: createDefaultScrollbar('v', interactive, this.options.scrollbars),
                        interactive: interactive,
                        defaultScrollbars: true,
                        customStyle: customStyle,
                        resize: this.options.resizeScrollbars,
                        shrink: this.options.shrinkScrollbars,
                        fade: this.options.fadeScrollbars,
                        listenX: false
                    };

                    this.wrapper.appendChild(indicator.el);
                    indicators.push(indicator);
                }

                // Horizontal scrollbar
                if (this.options.scrollX) {
                    indicator = {
                        el: createDefaultScrollbar('h', interactive, this.options.scrollbars),
                        interactive: interactive,
                        defaultScrollbars: true,
                        customStyle: customStyle,
                        resize: this.options.resizeScrollbars,
                        shrink: this.options.shrinkScrollbars,
                        fade: this.options.fadeScrollbars,
                        listenY: false
                    };

                    this.wrapper.appendChild(indicator.el);
                    indicators.push(indicator);
                }
            }

            if (this.options.indicators) {
                // TODO: check concat compatibility
                indicators = indicators.concat(this.options.indicators);
            }

            for (var i = indicators.length; i--;) {
                this.indicators.push(new Indicator(this, indicators[i]));
            }

            // TODO: check if we can use array.map (wide compatibility and performance issues)
            function _indicatorsMap(fn) {
                for (var i = that.indicators.length; i--;) {
                    fn.call(that.indicators[i]);
                }
            }

            if (this.options.fadeScrollbars) {
                this.on('scrollEnd', function() {
                    _indicatorsMap(function() {
                        this.fade();
                    });
                });

                this.on('scrollCancel', function() {
                    _indicatorsMap(function() {
                        this.fade();
                    });
                });

                this.on('scrollStart', function() {
                    _indicatorsMap(function() {
                        this.fade(1);
                    });
                });

                this.on('beforeScrollStart', function() {
                    _indicatorsMap(function() {
                        this.fade(1, true);
                    });
                });
            }


            this.on('refresh', function() {
                _indicatorsMap(function() {
                    this.refresh();
                });
            });

            this.on('destroy', function() {
                _indicatorsMap(function() {
                    this.destroy();
                });

                delete this.indicators;
            });
        },

        _initWheel: function() {
            utils.addEvent(this.wrapper, 'wheel', this);
            utils.addEvent(this.wrapper, 'mousewheel', this);
            utils.addEvent(this.wrapper, 'DOMMouseScroll', this);

            this.on('destroy', function() {
                utils.removeEvent(this.wrapper, 'wheel', this);
                utils.removeEvent(this.wrapper, 'mousewheel', this);
                utils.removeEvent(this.wrapper, 'DOMMouseScroll', this);
            });
        },

        _wheel: function(e) {
            if (!this.enabled) {
                return;
            }

            e.preventDefault();
            e.stopPropagation();

            var wheelDeltaX, wheelDeltaY,
                newX, newY,
                that = this;

            if (this.wheelTimeout === undefined) {
                that._execEvent('scrollStart');
            }

            // Execute the scrollEnd event after 400ms the wheel stopped scrolling
            clearTimeout(this.wheelTimeout);
            this.wheelTimeout = setTimeout(function() {
                that._execEvent('scrollEnd');
                that.wheelTimeout = undefined;
            }, 400);

            if ('deltaX' in e) {
                if (e.deltaMode === 1) {
                    wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;
                    wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;
                } else {
                    wheelDeltaX = -e.deltaX;
                    wheelDeltaY = -e.deltaY;
                }
            } else if ('wheelDeltaX' in e) {
                wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;
                wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;
            } else if ('wheelDelta' in e) {
                wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;
            } else if ('detail' in e) {
                wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;
            } else {
                return;
            }

            wheelDeltaX *= this.options.invertWheelDirection;
            wheelDeltaY *= this.options.invertWheelDirection;

            if (!this.hasVerticalScroll) {
                wheelDeltaX = wheelDeltaY;
                wheelDeltaY = 0;
            }

            if (this.options.snap) {
                newX = this.currentPage.pageX;
                newY = this.currentPage.pageY;

                if (wheelDeltaX > 0) {
                    newX--;
                } else if (wheelDeltaX < 0) {
                    newX++;
                }

                if (wheelDeltaY > 0) {
                    newY--;
                } else if (wheelDeltaY < 0) {
                    newY++;
                }

                this.goToPage(newX, newY);

                return;
            }

            newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);
            newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);

            if (newX > 0) {
                newX = 0;
            } else if (newX < this.maxScrollX) {
                newX = this.maxScrollX;
            }

            if (newY > 0) {
                newY = 0;
            } else if (newY < this.maxScrollY) {
                newY = this.maxScrollY;
            }

            this.scrollTo(newX, newY, 0);

            this._execEvent('scroll');

            // INSERT POINT: _wheel
        },

        _initSnap: function() {
            this.currentPage = {};

            if (typeof this.options.snap === 'string') {
                this.options.snap = this.scroller.querySelectorAll(this.options.snap);
            }

            this.on('refresh', function() {
                var i = 0,
                    l,
                    m = 0,
                    n,
                    cx, cy,
                    x = 0,
                    y,
                    stepX = this.options.snapStepX || this.wrapperWidth,
                    stepY = this.options.snapStepY || this.wrapperHeight,
                    el;

                this.pages = [];

                if (!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight) {
                    return;
                }

                if (this.options.snap === true) {
                    cx = Math.round(stepX / 2);
                    cy = Math.round(stepY / 2);

                    while (x > -this.scrollerWidth) {
                        this.pages[i] = [];
                        l = 0;
                        y = 0;

                        while (y > -this.scrollerHeight) {
                            this.pages[i][l] = {
                                x: Math.max(x, this.maxScrollX),
                                y: Math.max(y, this.maxScrollY),
                                width: stepX,
                                height: stepY,
                                cx: x - cx,
                                cy: y - cy
                            };

                            y -= stepY;
                            l++;
                        }

                        x -= stepX;
                        i++;
                    }
                } else {
                    el = this.options.snap;
                    l = el.length;
                    n = -1;

                    for (; i < l; i++) {
                        if (i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft) {
                            m = 0;
                            n++;
                        }

                        if (!this.pages[m]) {
                            this.pages[m] = [];
                        }

                        x = Math.max(-el[i].offsetLeft, this.maxScrollX);
                        y = Math.max(-el[i].offsetTop, this.maxScrollY);
                        cx = x - Math.round(el[i].offsetWidth / 2);
                        cy = y - Math.round(el[i].offsetHeight / 2);

                        this.pages[m][n] = {
                            x: x,
                            y: y,
                            width: el[i].offsetWidth,
                            height: el[i].offsetHeight,
                            cx: cx,
                            cy: cy
                        };

                        if (x > this.maxScrollX) {
                            m++;
                        }
                    }
                }

                this.goToPage(this.currentPage.pageX || 0, this.currentPage.pageY || 0, 0);

                // Update snap threshold if needed
                if (this.options.snapThreshold % 1 === 0) {
                    this.snapThresholdX = this.options.snapThreshold;
                    this.snapThresholdY = this.options.snapThreshold;
                } else {
                    this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);
                    this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);
                }
            });

            this.on('flick', function() {
                var time = this.options.snapSpeed || Math.max(
                        Math.max(
                            Math.min(Math.abs(this.x - this.startX), 1000),
                            Math.min(Math.abs(this.y - this.startY), 1000)
                        ), 300);

                this.goToPage(
                    this.currentPage.pageX + this.directionX,
                    this.currentPage.pageY + this.directionY,
                    time
                );
            });
        },

        _nearestSnap: function(x, y) {
            if (!this.pages.length) {
                return {
                    x: 0,
                    y: 0,
                    pageX: 0,
                    pageY: 0
                };
            }

            var i = 0,
                l = this.pages.length,
                m = 0;

            // Check if we exceeded the snap threshold
            if (Math.abs(x - this.absStartX) < this.snapThresholdX &&
                Math.abs(y - this.absStartY) < this.snapThresholdY) {
                return this.currentPage;
            }

            if (x > 0) {
                x = 0;
            } else if (x < this.maxScrollX) {
                x = this.maxScrollX;
            }

            if (y > 0) {
                y = 0;
            } else if (y < this.maxScrollY) {
                y = this.maxScrollY;
            }

            for (; i < l; i++) {
                if (x >= this.pages[i][0].cx) {
                    x = this.pages[i][0].x;
                    break;
                }
            }

            l = this.pages[i].length;

            for (; m < l; m++) {
                if (y >= this.pages[0][m].cy) {
                    y = this.pages[0][m].y;
                    break;
                }
            }

            if (i === this.currentPage.pageX) {
                i += this.directionX;

                if (i < 0) {
                    i = 0;
                } else if (i >= this.pages.length) {
                    i = this.pages.length - 1;
                }

                x = this.pages[i][0].x;
            }

            if (m === this.currentPage.pageY) {
                m += this.directionY;

                if (m < 0) {
                    m = 0;
                } else if (m >= this.pages[0].length) {
                    m = this.pages[0].length - 1;
                }

                y = this.pages[0][m].y;
            }

            return {
                x: x,
                y: y,
                pageX: i,
                pageY: m
            };
        },

        goToPage: function(x, y, time, easing) {
            easing = easing || this.options.bounceEasing;

            if (x >= this.pages.length) {
                x = this.pages.length - 1;
            } else if (x < 0) {
                x = 0;
            }

            if (y >= this.pages[x].length) {
                y = this.pages[x].length - 1;
            } else if (y < 0) {
                y = 0;
            }

            var posX = this.pages[x][y].x,
                posY = this.pages[x][y].y;

            time = time === undefined ? this.options.snapSpeed || Math.max(
                    Math.max(
                        Math.min(Math.abs(posX - this.x), 1000),
                        Math.min(Math.abs(posY - this.y), 1000)
                    ), 300) : time;

            this.currentPage = {
                x: posX,
                y: posY,
                pageX: x,
                pageY: y
            };

            this.scrollTo(posX, posY, time, easing);
        },

        next: function(time, easing) {
            var x = this.currentPage.pageX,
                y = this.currentPage.pageY;

            x++;

            if (x >= this.pages.length && this.hasVerticalScroll) {
                x = 0;
                y++;
            }

            this.goToPage(x, y, time, easing);
        },

        prev: function(time, easing) {
            var x = this.currentPage.pageX,
                y = this.currentPage.pageY;

            x--;

            if (x < 0 && this.hasVerticalScroll) {
                x = 0;
                y--;
            }

            this.goToPage(x, y, time, easing);
        },

        _initKeys: function() {
            // default key bindings
            var keys = {
                pageUp: 33,
                pageDown: 34,
                end: 35,
                home: 36,
                left: 37,
                up: 38,
                right: 39,
                down: 40
            };
            var i;

            // if you give me characters I give you keycode
            if (typeof this.options.keyBindings === 'object') {
                for (i in this.options.keyBindings) {
                    if (typeof this.options.keyBindings[i] === 'string') {
                        this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);
                    }
                }
            } else {
                this.options.keyBindings = {};
            }

            for (i in keys) { // jshint ignore:line
                this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];
            }

            utils.addEvent(window, 'keydown', this);

            this.on('destroy', function() {
                utils.removeEvent(window, 'keydown', this);
            });
        },

        _key: function(e) {
            if (!this.enabled) {
                return;
            }

            var snap = this.options.snap, // we are using this alot, better to cache it
                newX = snap ? this.currentPage.pageX : this.x,
                newY = snap ? this.currentPage.pageY : this.y,
                now = utils.getTime(),
                prevTime = this.keyTime || 0,
                acceleration = 0.250,
                pos;

            if (this.options.useTransition && this.isInTransition) {
                pos = this.getComputedPosition();

                this._translate(Math.round(pos.x), Math.round(pos.y));
                this.isInTransition = false;
            }

            this.keyAcceleration = now - prevTime < 200 ? Math.min(this.keyAcceleration + acceleration, 50) : 0;

            switch (e.keyCode) {
                case this.options.keyBindings.pageUp:
                    if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
                        newX += snap ? 1 : this.wrapperWidth;
                    } else {
                        newY += snap ? 1 : this.wrapperHeight;
                    }
                    break;
                case this.options.keyBindings.pageDown:
                    if (this.hasHorizontalScroll && !this.hasVerticalScroll) {
                        newX -= snap ? 1 : this.wrapperWidth;
                    } else {
                        newY -= snap ? 1 : this.wrapperHeight;
                    }
                    break;
                case this.options.keyBindings.end:
                    newX = snap ? this.pages.length - 1 : this.maxScrollX;
                    newY = snap ? this.pages[0].length - 1 : this.maxScrollY;
                    break;
                case this.options.keyBindings.home:
                    newX = 0;
                    newY = 0;
                    break;
                case this.options.keyBindings.left:
                    newX += snap ? -1 : 5 + this.keyAcceleration >> 0; // jshint ignore:line
                    break;
                case this.options.keyBindings.up:
                    newY += snap ? 1 : 5 + this.keyAcceleration >> 0; // jshint ignore:line
                    break;
                case this.options.keyBindings.right:
                    newX -= snap ? -1 : 5 + this.keyAcceleration >> 0; // jshint ignore:line
                    break;
                case this.options.keyBindings.down:
                    newY -= snap ? 1 : 5 + this.keyAcceleration >> 0; // jshint ignore:line
                    break;
                default:
                    return;
            }

            if (snap) {
                this.goToPage(newX, newY);
                return;
            }

            if (newX > 0) {
                newX = 0;
                this.keyAcceleration = 0;
            } else if (newX < this.maxScrollX) {
                newX = this.maxScrollX;
                this.keyAcceleration = 0;
            }

            if (newY > 0) {
                newY = 0;
                this.keyAcceleration = 0;
            } else if (newY < this.maxScrollY) {
                newY = this.maxScrollY;
                this.keyAcceleration = 0;
            }

            this.scrollTo(newX, newY, 0);

            this.keyTime = now;
        },

        _animate: function(destX, destY, duration, easingFn) {
            var that = this,
                startX = this.x,
                startY = this.y,
                startTime = utils.getTime(),
                destTime = startTime + duration;

            function step() {
                var now = utils.getTime(),
                    newX, newY,
                    easing;

                if (now >= destTime) {
                    that.isAnimating = false;
                    that._translate(destX, destY);

                    if (!that.resetPosition(that.options.bounceTime)) {
                        that._execEvent('scrollEnd');
                    }

                    return;
                }

                now = (now - startTime) / duration;
                easing = easingFn(now);
                newX = (destX - startX) * easing + startX;
                newY = (destY - startY) * easing + startY;
                that._translate(newX, newY);

                if (that.isAnimating) {
                    rAF(step);
                }

                if (that.options.probeType === 3) {
                    that._execEvent('scroll');
                }
            }

            this.isAnimating = true;
            step();
        },

        handleEvent: function(e) {
            switch (e.type) {
                case 'touchstart':
                case 'pointerdown':
                case 'MSPointerDown':
                case 'mousedown':
                    this._start(e);
                    break;
                case 'touchmove':
                case 'pointermove':
                case 'MSPointerMove':
                case 'mousemove':
                    this._move(e);
                    break;
                case 'touchend':
                case 'pointerup':
                case 'MSPointerUp':
                case 'mouseup':
                case 'touchcancel':
                case 'pointercancel':
                case 'MSPointerCancel':
                case 'mousecancel':
                    this._end(e);
                    break;
                case 'orientationchange':
                case 'resize':
                    this._resize();
                    break;
                case 'transitionend':
                case 'webkitTransitionEnd':
                case 'oTransitionEnd':
                case 'MSTransitionEnd':
                    this._transitionEnd(e);
                    break;
                case 'wheel':
                case 'DOMMouseScroll':
                case 'mousewheel':
                    this._wheel(e);
                    break;
                case 'keydown':
                    this._key(e);
                    break;
                case 'click':
                    if (!e._constructed) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    break;
            }
        }
    };

    function createDefaultScrollbar(direction, interactive, type) {
        var scrollbar = document.createElement('div'),
            indicator = document.createElement('div');

        if (type === true) {
            scrollbar.style.cssText = 'position:absolute;z-index:9999';
            indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';
        }

        indicator.className = 'iScrollIndicator';

        if (direction === 'h') {
            if (type === true) {
                scrollbar.style.cssText += ';height:5px;left:2px;right:2px;bottom:0';
                indicator.style.height = '100%';
            }
            scrollbar.className = 'iScrollHorizontalScrollbar';
        } else {
            if (type === true) {
                scrollbar.style.cssText += ';width:5px;bottom:2px;top:2px;right:1px';
                indicator.style.width = '100%';
            }
            scrollbar.className = 'iScrollVerticalScrollbar';
        }

        scrollbar.style.cssText += ';overflow:hidden';

        if (!interactive) {
            scrollbar.style.pointerEvents = 'none';
        }

        scrollbar.appendChild(indicator);

        return scrollbar;
    }

    function Indicator(scroller, options) {
        this.wrapper = typeof options.el === 'string' ? document.querySelector(options.el) : options.el;
        this.wrapperStyle = this.wrapper.style;
        this.indicator = this.wrapper.children[0];
        this.indicatorStyle = this.indicator.style;
        this.scroller = scroller;

        this.options = {
            listenX: true,
            listenY: true,
            interactive: false,
            resize: true,
            defaultScrollbars: false,
            shrink: false,
            fade: false,
            speedRatioX: 0,
            speedRatioY: 0
        };

        for (var i in options) { // jshint ignore:line
            this.options[i] = options[i];

        }

        this.sizeRatioX = 1;
        this.sizeRatioY = 1;
        this.maxPosX = 0;
        this.maxPosY = 0;

        if (this.options.interactive) {
            if (!this.options.disableTouch) {
                utils.addEvent(this.indicator, 'touchstart', this);
                utils.addEvent(window, 'touchend', this);
            }
            if (!this.options.disablePointer) {
                utils.addEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
                utils.addEvent(window, utils.prefixPointerEvent('pointerup'), this);
            }
            if (!this.options.disableMouse) {
                utils.addEvent(this.indicator, 'mousedown', this);
                utils.addEvent(window, 'mouseup', this);
            }
        }

        if (this.options.fade) {
            this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;
            this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid ? '0.001s' : '0ms';
            this.wrapperStyle.opacity = '0';
        }
    }

    Indicator.prototype = {
        handleEvent: function(e) {
            switch (e.type) {
                case 'touchstart':
                case 'pointerdown':
                case 'MSPointerDown':
                case 'mousedown':
                    this._start(e);
                    break;
                case 'touchmove':
                case 'pointermove':
                case 'MSPointerMove':
                case 'mousemove':
                    this._move(e);
                    break;
                case 'touchend':
                case 'pointerup':
                case 'MSPointerUp':
                case 'mouseup':
                case 'touchcancel':
                case 'pointercancel':
                case 'MSPointerCancel':
                case 'mousecancel':
                    this._end(e);
                    break;
            }
        },

        destroy: function() {
            if (this.options.interactive) {
                utils.removeEvent(this.indicator, 'touchstart', this);
                utils.removeEvent(this.indicator, utils.prefixPointerEvent('pointerdown'), this);
                utils.removeEvent(this.indicator, 'mousedown', this);

                utils.removeEvent(window, 'touchmove', this);
                utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
                utils.removeEvent(window, 'mousemove', this);

                utils.removeEvent(window, 'touchend', this);
                utils.removeEvent(window, utils.prefixPointerEvent('pointerup'), this);
                utils.removeEvent(window, 'mouseup', this);
            }

            if (this.options.defaultScrollbars) {
                this.wrapper.parentNode.removeChild(this.wrapper);
            }
        },

        _start: function(e) {
            var point = e.touches ? e.touches[0] : e;

            e.preventDefault();
            e.stopPropagation();

            this.transitionTime();

            this.initiated = true;
            this.moved = false;
            this.lastPointX = point.pageX;
            this.lastPointY = point.pageY;

            this.startTime = utils.getTime();

            if (!this.options.disableTouch) {
                utils.addEvent(window, 'touchmove', this);
            }
            if (!this.options.disablePointer) {
                utils.addEvent(window, utils.prefixPointerEvent('pointermove'), this);
            }
            if (!this.options.disableMouse) {
                utils.addEvent(window, 'mousemove', this);
            }

            this.scroller._execEvent('beforeScrollStart');
        },

        _move: function(e) {
            var point = e.touches ? e.touches[0] : e,
                deltaX, deltaY,
                newX, newY,
                timestamp = utils.getTime();

            if (!this.moved) {
                this.scroller._execEvent('scrollStart');
            }

            this.moved = true;

            deltaX = point.pageX - this.lastPointX;
            this.lastPointX = point.pageX;

            deltaY = point.pageY - this.lastPointY;
            this.lastPointY = point.pageY;

            newX = this.x + deltaX;
            newY = this.y + deltaY;

            this._pos(newX, newY);


            if (this.scroller.options.probeType === 1 && timestamp - this.startTime > 300) {
                this.startTime = timestamp;
                this.scroller._execEvent('scroll');
            } else if (this.scroller.options.probeType > 1) {
                this.scroller._execEvent('scroll');
            }


            // INSERT POINT: indicator._move

            e.preventDefault();
            e.stopPropagation();
        },

        _end: function(e) {
            if (!this.initiated) {
                return;
            }

            this.initiated = false;

            e.preventDefault();
            e.stopPropagation();

            utils.removeEvent(window, 'touchmove', this);
            utils.removeEvent(window, utils.prefixPointerEvent('pointermove'), this);
            utils.removeEvent(window, 'mousemove', this);

            if (this.scroller.options.snap) {
                var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);

                var time = this.options.snapSpeed || Math.max(
                        Math.max(
                            Math.min(Math.abs(this.scroller.x - snap.x), 1000),
                            Math.min(Math.abs(this.scroller.y - snap.y), 1000)
                        ), 300);

                if (this.scroller.x !== snap.x || this.scroller.y !== snap.y) {
                    this.scroller.directionX = 0;
                    this.scroller.directionY = 0;
                    this.scroller.currentPage = snap;
                    this.scroller.scrollTo(snap.x, snap.y, time, this.scroller.options.bounceEasing);
                }
            }

            if (this.moved) {
                this.scroller._execEvent('scrollEnd');
            }
        },

        transitionTime: function(time) {
            time = time || 0;
            this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';

            if (!time && utils.isBadAndroid) {
                this.indicatorStyle[utils.style.transitionDuration] = '0.001s';
            }
        },

        transitionTimingFunction: function(easing) {
            this.indicatorStyle[utils.style.transitionTimingFunction] = easing;
        },

        refresh: function() {
            this.transitionTime();

            if (this.options.listenX && !this.options.listenY) {
                this.indicatorStyle.display = this.scroller.hasHorizontalScroll ? 'block' : 'none';
            } else if (this.options.listenY && !this.options.listenX) {
                this.indicatorStyle.display = this.scroller.hasVerticalScroll ? 'block' : 'none';
            } else {
                this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll ? 'block' : 'none';
            }

            if (this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll) {
                utils.addClass(this.wrapper, 'iScrollBothScrollbars');
                utils.removeClass(this.wrapper, 'iScrollLoneScrollbar');

                if (this.options.defaultScrollbars && this.options.customStyle) {
                    if (this.options.listenX) {
                        this.wrapper.style.right = '8px';
                    } else {
                        this.wrapper.style.bottom = '8px';
                    }
                }
            } else {
                utils.removeClass(this.wrapper, 'iScrollBothScrollbars');
                utils.addClass(this.wrapper, 'iScrollLoneScrollbar');

                if (this.options.defaultScrollbars && this.options.customStyle) {
                    if (this.options.listenX) {
                        this.wrapper.style.right = '2px';
                    } else {
                        this.wrapper.style.bottom = '2px';
                    }
                }
            }

            // var r = this.wrapper.offsetHeight; // force refresh

            if (this.options.listenX) {
                this.wrapperWidth = this.wrapper.clientWidth;
                if (this.options.resize) {
                    this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)), 8);
                    this.indicatorStyle.width = this.indicatorWidth + 'px';
                } else {
                    this.indicatorWidth = this.indicator.clientWidth;
                }

                this.maxPosX = this.wrapperWidth - this.indicatorWidth;

                if (this.options.shrink === 'clip') {
                    this.minBoundaryX = -this.indicatorWidth + 8;
                    this.maxBoundaryX = this.wrapperWidth - 8;
                } else {
                    this.minBoundaryX = 0;
                    this.maxBoundaryX = this.maxPosX;
                }

                this.sizeRatioX = this.options.speedRatioX || (this.scroller.maxScrollX && (this.maxPosX / this.scroller.maxScrollX));
            }

            if (this.options.listenY) {
                this.wrapperHeight = this.wrapper.clientHeight;
                if (this.options.resize) {
                    this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)), 8);
                    this.indicatorStyle.height = this.indicatorHeight + 'px';
                } else {
                    this.indicatorHeight = this.indicator.clientHeight;
                }

                this.maxPosY = this.wrapperHeight - this.indicatorHeight;

                if (this.options.shrink === 'clip') {
                    this.minBoundaryY = -this.indicatorHeight + 8;
                    this.maxBoundaryY = this.wrapperHeight - 8;
                } else {
                    this.minBoundaryY = 0;
                    this.maxBoundaryY = this.maxPosY;
                }

                this.maxPosY = this.wrapperHeight - this.indicatorHeight;
                this.sizeRatioY = this.options.speedRatioY || (this.scroller.maxScrollY && (this.maxPosY / this.scroller.maxScrollY));
            }

            this.updatePosition();
        },

        updatePosition: function() {
            var x = this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,
                y = this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;

            if (!this.options.ignoreBoundaries) {
                if (x < this.minBoundaryX) {
                    if (this.options.shrink === 'scale') {
                        this.width = Math.max(this.indicatorWidth + x, 8);
                        this.indicatorStyle.width = this.width + 'px';
                    }
                    x = this.minBoundaryX;
                } else if (x > this.maxBoundaryX) {
                    if (this.options.shrink === 'scale') {
                        this.width = Math.max(this.indicatorWidth - (x - this.maxPosX), 8);
                        this.indicatorStyle.width = this.width + 'px';
                        x = this.maxPosX + this.indicatorWidth - this.width;
                    } else {
                        x = this.maxBoundaryX;
                    }
                } else if (this.options.shrink === 'scale' && this.width !== this.indicatorWidth) {
                    this.width = this.indicatorWidth;
                    this.indicatorStyle.width = this.width + 'px';
                }

                if (y < this.minBoundaryY) {
                    if (this.options.shrink === 'scale') {
                        this.height = Math.max(this.indicatorHeight + y * 3, 8);
                        this.indicatorStyle.height = this.height + 'px';
                    }
                    y = this.minBoundaryY;
                } else if (y > this.maxBoundaryY) {
                    if (this.options.shrink === 'scale') {
                        this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, 8);
                        this.indicatorStyle.height = this.height + 'px';
                        y = this.maxPosY + this.indicatorHeight - this.height;
                    } else {
                        y = this.maxBoundaryY;
                    }
                } else if (this.options.shrink === 'scale' && this.height !== this.indicatorHeight) {
                    this.height = this.indicatorHeight;
                    this.indicatorStyle.height = this.height + 'px';
                }
            }

            this.x = x;
            this.y = y;

            if (this.scroller.options.useTransform) {
                this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;
            } else {
                this.indicatorStyle.left = x + 'px';
                this.indicatorStyle.top = y + 'px';
            }
        },

        _pos: function(x, y) {
            if (x < 0) {
                x = 0;
            } else if (x > this.maxPosX) {
                x = this.maxPosX;
            }

            if (y < 0) {
                y = 0;
            } else if (y > this.maxPosY) {
                y = this.maxPosY;
            }

            x = this.options.listenX ? Math.round(x / this.sizeRatioX) : this.scroller.x;
            y = this.options.listenY ? Math.round(y / this.sizeRatioY) : this.scroller.y;

            this.scroller.scrollTo(x, y);
        },

        fade: function(val, hold) {
            if (hold && !this.visible) {
                return;
            }

            clearTimeout(this.fadeTimeout);
            this.fadeTimeout = null;

            var time = val ? 250 : 500,
                delay = val ? 0 : 300;

            val = val ? '1' : '0';

            this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';

            this.fadeTimeout = setTimeout((function(val) {
                this.wrapperStyle.opacity = val;
                this.visible = +val;
            }).bind(this, val), delay);
        }
    };

    IScroll.utils = utils;

    window.IScroll = IScroll;
}(window);

/* ===============================================================================
 ************   scroller   ************
 =============================================================================== */

+ function($) {
    'use strict';

    $.initPullToRefresh = function(pageContainer) {
        var eventsTarget = $(pageContainer);
        if (!eventsTarget.hasClass('pull-to-refresh-content')) {
            eventsTarget = eventsTarget.find('.pull-to-refresh-content');
        }
        if (!eventsTarget || eventsTarget.length === 0) return;

        var isTouched, isMoved, touchesStart = {},
            isScrolling, touchesDiff, touchStartTime, container, refresh = false,
            useTranslate = false,
            startTranslate = 0,
            translate, scrollTop, wasScrolled, triggerDistance, dynamicTriggerDistance;

        container = eventsTarget;

        // Define trigger distance
        if (container.attr('data-ptr-distance')) {
            dynamicTriggerDistance = true;
        } else {
            triggerDistance = 44;
        }

        function handleTouchStart(e) {
            if (isTouched) {
                if ($.os.android) {
                    if ('targetTouches' in e && e.targetTouches.length > 1) return;
                } else return;
            }
            isMoved = false;
            isTouched = true;
            isScrolling = undefined;
            wasScrolled = undefined;
            var position = $.getTouchPosition(e);
            touchesStart.x = position.x;
            touchesStart.y = position.y;
            touchStartTime = (new Date()).getTime();
            /*jshint validthis:true */
            container = $(this);
        }

        function handleTouchMove(e) {
            if (!isTouched) return;
            var position = $.getTouchPosition(e);
            var pageX = position.x;
            var pageY = position.y;
            if (typeof isScrolling === 'undefined') {
                isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));
            }
            if (!isScrolling) {
                isTouched = false;
                return;
            }

            scrollTop = container[0].scrollTop;
            if (typeof wasScrolled === 'undefined' && scrollTop !== 0) wasScrolled = true;

            if (!isMoved) {
                /*jshint validthis:true */
                container.removeClass('transitioning');
                if (scrollTop > container[0].offsetHeight) {
                    isTouched = false;
                    return;
                }
                if (dynamicTriggerDistance) {
                    triggerDistance = container.attr('data-ptr-distance');
                    if (triggerDistance.indexOf('%') >= 0) triggerDistance = container[0].offsetHeight * parseInt(triggerDistance, 10) / 100;
                }
                startTranslate = container.hasClass('refreshing') ? triggerDistance : 0;
                if (container[0].scrollHeight === container[0].offsetHeight || !$.os.ios) {
                    useTranslate = true;
                } else {
                    useTranslate = false;
                }
                useTranslate = true;
            }
            isMoved = true;
            touchesDiff = pageY - touchesStart.y;

            if (touchesDiff > 0 && scrollTop <= 0 || scrollTop < 0) {
                // iOS 8 fix
                if ($.os.ios && parseInt($.os.version.split('.')[0], 10) > 7 && scrollTop === 0 && !wasScrolled) useTranslate = true;

                if (useTranslate) {
                    e.preventDefault();
                    translate = (Math.pow(touchesDiff, 0.85) + startTranslate);
                    container.transform('translate3d(0,' + translate + 'px,0)');
                } else {}
                if ((useTranslate && Math.pow(touchesDiff, 0.85) > triggerDistance) || (!useTranslate && touchesDiff >= triggerDistance * 2)) {
                    refresh = true;
                    container.addClass('pull-up').removeClass('pull-down');
                } else {
                    refresh = false;
                    container.removeClass('pull-up').addClass('pull-down');
                }
            } else {

                container.removeClass('pull-up pull-down');
                refresh = false;
                return;
            }
        }

        function handleTouchEnd() {
            if (!isTouched || !isMoved) {
                isTouched = false;
                isMoved = false;
                return;
            }
            if (translate) {
                container.addClass('transitioning');
                translate = 0;
            }
            container.transform('');
            if (refresh) {
                container.addClass('refreshing');
                container.trigger('refresh', {
                    done: function() {
                        $.pullToRefreshDone(container);
                    }
                });
            } else {
                container.removeClass('pull-down');
            }
            isTouched = false;
            isMoved = false;
        }

        // Attach Events
        eventsTarget.on($.touchEvents.start, handleTouchStart);
        eventsTarget.on($.touchEvents.move, handleTouchMove);
        eventsTarget.on($.touchEvents.end, handleTouchEnd);


        function destroyPullToRefresh() {
            eventsTarget.off($.touchEvents.start, handleTouchStart);
            eventsTarget.off($.touchEvents.move, handleTouchMove);
            eventsTarget.off($.touchEvents.end, handleTouchEnd);
        }
        eventsTarget[0].destroyPullToRefresh = destroyPullToRefresh;

    };
    $.pullToRefreshDone = function(container) {
        container = $(container);
        if (container.length === 0) container = $('.pull-to-refresh-content.refreshing');
        container.removeClass('refreshing').addClass('transitioning');
        container.transitionEnd(function() {
            container.removeClass('transitioning pull-up pull-down');
        });
    };
    $.pullToRefreshTrigger = function(container) {
        container = $(container);
        if (container.length === 0) container = $('.pull-to-refresh-content');
        if (container.hasClass('refreshing')) return;
        container.addClass('transitioning refreshing');
        container.trigger('refresh', {
            done: function() {
                $.pullToRefreshDone(container);
            }
        });
    };

    $.destroyPullToRefresh = function(pageContainer) {
        pageContainer = $(pageContainer);
        var pullToRefreshContent = pageContainer.hasClass('pull-to-refresh-content') ? pageContainer : pageContainer.find('.pull-to-refresh-content');
        if (pullToRefreshContent.length === 0) return;
        if (pullToRefreshContent[0].destroyPullToRefresh) pullToRefreshContent[0].destroyPullToRefresh();
    };

}($); //jshint ignore:line

/* global $:true */
+ function($) {
    'use strict';

    function handleInfiniteScroll() {
        /*jshint validthis:true */
        var inf = $(this);
        var scrollTop = inf.scrollTop();
        var scrollHeight = inf[0].scrollHeight;
        var height = inf[0].offsetHeight;
        var distance = inf[0].getAttribute('data-distance');
        var virtualListContainer = inf.find('.virtual-list');
        var virtualList;
        var onTop = inf.hasClass('infinite-scroll-top');
        if (!distance) distance = 50;
        if (typeof distance === 'string' && distance.indexOf('%') >= 0) {
            distance = parseInt(distance, 10) / 100 * height;
        }
        if (distance > height) distance = height;
        if (onTop) {
            if (scrollTop < distance) {
                inf.trigger('infinite');
            }
        } else {
            if (scrollTop + height >= scrollHeight - distance) {
                if (virtualListContainer.length > 0) {
                    virtualList = virtualListContainer[0].f7VirtualList;
                    if (virtualList && !virtualList.reachEnd) return;
                }
                inf.trigger('infinite');
            }
        }

    }
    $.attachInfiniteScroll = function(infiniteContent) {
        $(infiniteContent).on('scroll', handleInfiniteScroll);
    };
    $.detachInfiniteScroll = function(infiniteContent) {
        $(infiniteContent).off('scroll', handleInfiniteScroll);
    };

    $.initInfiniteScroll = function(pageContainer) {
        pageContainer = $(pageContainer);
        var infiniteContent = pageContainer.hasClass('infinite-scroll')?pageContainer:pageContainer.find('.infinite-scroll');
        if (infiniteContent.length === 0) return;
        $.attachInfiniteScroll(infiniteContent);

        function detachEvents() {
            $.detachInfiniteScroll(infiniteContent);
            pageContainer.off('pageBeforeRemove', detachEvents);
        }
        pageContainer.on('pageBeforeRemove', detachEvents);
    };
}($);

// + function($) {
//     "use strict";
//     //重置zepto自带的滚动条
//     var _zeptoMethodCache = {
//         "scrollTop": $.fn.scrollTop,
//         "scrollLeft": $.fn.scrollLeft
//     };
//     //重置scrollLeft和scrollRight
//     (function() {
//         $.extend($.fn, {
//             scrollTop: function(top, dur) {
//                 if (!this.length) return;
//                 var scroller = this.data('scroller');
//                 if (scroller && scroller.scroller) { //js滚动
//                     return scroller.scrollTop(top, dur);
//                 } else {
//                     return _zeptoMethodCache.scrollTop.apply(this, arguments);
//                 }
//             }
//         });
//         $.extend($.fn, {
//             scrollLeft: function(left, dur) {
//                 if (!this.length) return;
//                 var scroller = this.data('scroller');
//                 if (scroller && scroller.scroller) { //js滚动
//                     return scroller.scrollLeft(left, dur);
//                 } else {
//                     return _zeptoMethodCache.scrollLeft.apply(this, arguments);
//                 }
//             }
//         });
//     })();
//
//
//
//     //自定义的滚动条
//     var Scroller = function(pageContent, _options) {
//         var $pageContent = this.$pageContent = $(pageContent);
//
//         this.options = $.extend({}, this._defaults, _options);
//
//         var type = this.options.type;
//         //auto的type,系统版本的小于4.4.0的安卓设备和系统版本小于6.0.0的ios设备，启用js版的iscoll
//         var useJSScroller = (type === 'js') || (type === 'auto' && ($.device.android && $.compareVersion('4.4.0', $.device.osVersion) > -1) || (type === 'auto' && ($.device.ios && $.compareVersion('6.0.0', $.device.osVersion) > -1)));
//
//         if (useJSScroller) {
//
//             var $pageContentInner = $pageContent.find('.content-inner');
//             //如果滚动内容没有被包裹，自动添加wrap
//             if (!$pageContentInner[0]) {
//                 // $pageContent.html('<div class="content-inner">' + $pageContent.html() + '</div>');
//                 var children = $pageContent.children();
//                 if (children.length < 1) {
//                     $pageContent.children().wrapAll('<div class="content-inner"></div>');
//                 } else {
//                     $pageContent.html('<div class="content-inner">' + $pageContent.html() + '</div>');
//                 }
//             }
//
//             if ($pageContent.hasClass('pull-to-refresh-content')) {
//                 //因为iscroll 当页面高度不足 100% 时无法滑动，所以无法触发下拉动作，这里改动一下高度
//                 //区分是否有.bar容器，如有，则content的top:0，无则content的top:-2.2rem,这里取2.2rem的最大值，近60
//                 var minHeight = $(window).height() + ($pageContent.prev().hasClass(".bar") ? 1 : 61);
//                 $pageContent.find('.content-inner').css('min-height', minHeight + 'px');
//             }
//
//             var ptr = $(pageContent).hasClass('pull-to-refresh-content');
//             //js滚动模式，用transform移动内容区位置，会导致fixed失效，表现类似absolute。因此禁用transform模式
//             var useTransform = $pageContent.find('.fixed-tab').length === 0;
//             var options = {
//                 probeType: 1,
//                 mouseWheel: true,
//                 //解决安卓js模式下，刷新滚动条后绑定的事件不响应，对chrome内核浏览器设置click:true
//                 click: $.device.androidChrome,
//                 useTransform: useTransform,
//                 //js模式下允许滚动条横向滚动，但是需要注意，滚动容易宽度必须大于屏幕宽度滚动才生效
//                 scrollX: true
//             };
//             if (ptr) {
//                 options.ptr = true;
//                 options.ptrOffset = 44;
//             }
//             //如果用js滚动条，用transform计算内容区位置，position：fixed将实效。若有.fixed-tab，强制使用native滚动条；备选方案，略粗暴
//             // if($(pageContent).find('.fixed-tab').length>0){
//             //     $pageContent.addClass('native-scroll');
//             //     return;
//             // }
//             this.scroller = new IScroll(pageContent, options); // jshint ignore:line
//             //和native滚动统一起来
//             this._bindEventToDomWhenJs();
//             $.initPullToRefresh = $._pullToRefreshJSScroll.initPullToRefresh;
//             $.pullToRefreshDone = $._pullToRefreshJSScroll.pullToRefreshDone;
//             $.pullToRefreshTrigger = $._pullToRefreshJSScroll.pullToRefreshTrigger;
//             $.destroyToRefresh = $._pullToRefreshJSScroll.destroyToRefresh;
//             $pageContent.addClass('javascript-scroll');
//             if (!useTransform) {
//                 $pageContent.find('.content-inner').css({
//                     width: '100%',
//                     position: 'absolute'
//                 });
//             }
//
//             //如果页面本身已经进行了原生滚动，那么把这个滚动换成JS的滚动
//             var nativeScrollTop = this.$pageContent[0].scrollTop;
//             if(nativeScrollTop) {
//                 this.$pageContent[0].scrollTop = 0;
//                 this.scrollTop(nativeScrollTop);
//             }
//         } else {
//             $pageContent.addClass('native-scroll');
//         }
//     };
//     Scroller.prototype = {
//         _defaults: {
//             type: 'native',
//         },
//         _bindEventToDomWhenJs: function() {
//             //"scrollStart", //the scroll started.
//             //"scroll", //the content is scrolling. Available only in scroll-probe.js edition. See onScroll event.
//             //"scrollEnd", //content stopped scrolling.
//             if (this.scroller) {
//                 var self = this;
//                 this.scroller.on('scrollStart', function() {
//                     self.$pageContent.trigger('scrollstart');
//                 });
//                 this.scroller.on('scroll', function() {
//                     self.$pageContent.trigger('scroll');
//                 });
//                 this.scroller.on('scrollEnd', function() {
//                     self.$pageContent.trigger('scrollend');
//                 });
//             } else {
//                 //TODO: 实现native的scrollStart和scrollEnd
//             }
//         },
//         scrollTop: function(top, dur) {
//             if (this.scroller) {
//                 if (top !== undefined) {
//                     this.scroller.scrollTo(0, -1 * top, dur);
//                 } else {
//                     return this.scroller.getComputedPosition().y * -1;
//                 }
//             } else {
//                 return this.$pageContent.scrollTop(top, dur);
//             }
//             return this;
//         },
//         scrollLeft: function(left, dur) {
//             if (this.scroller) {
//                 if (left !== undefined) {
//                     this.scroller.scrollTo(-1 * left, 0);
//                 } else {
//                     return this.scroller.getComputedPosition().x * -1;
//                 }
//             } else {
//                 return this.$pageContent.scrollTop(left, dur);
//             }
//             return this;
//         },
//         on: function(event, callback) {
//             if (this.scroller) {
//                 this.scroller.on(event, function() {
//                     callback.call(this.wrapper);
//                 });
//             } else {
//                 this.$pageContent.on(event, callback);
//             }
//             return this;
//         },
//         off: function(event, callback) {
//             if (this.scroller) {
//                 this.scroller.off(event, callback);
//             } else {
//                 this.$pageContent.off(event, callback);
//             }
//             return this;
//         },
//         refresh: function() {
//             if (this.scroller) this.scroller.refresh();
//             return this;
//         },
//         scrollHeight: function() {
//             if (this.scroller) {
//                 return this.scroller.scrollerHeight;
//             } else {
//                 return this.$pageContent[0].scrollHeight;
//             }
//         }
//
//     };
//
//     //Scroller PLUGIN DEFINITION
//     // =======================
//
//     function Plugin(option) {
//         var args = Array.apply(null, arguments);
//         args.shift();
//         var internal_return;
//
//         this.each(function() {
//
//             var $this = $(this);
//
//             var options = $.extend({}, $this.dataset(), typeof option === 'object' && option);
//
//             var data = $this.data('scroller');
//             //如果 scroller 没有被初始化，对scroller 进行初始化r
//             if (!data) {
//                 //获取data-api的
//                 $this.data('scroller', (data = new Scroller(this, options)));
//
//             }
//             if (typeof option === 'string' && typeof data[option] === 'function') {
//                 internal_return = data[option].apply(data, args);
//                 if (internal_return !== undefined)
//                     return false;
//             }
//
//         });
//
//         if (internal_return !== undefined)
//             return internal_return;
//         else
//             return this;
//
//     }
//
//     var old = $.fn.scroller;
//
//     $.fn.scroller = Plugin;
//     $.fn.scroller.Constructor = Scroller;
//
//
//     // Scroll NO CONFLICT
//     // =================
//
//     $.fn.scroller.noConflict = function() {
//         $.fn.scroller = old;
//         return this;
//     };
//     //添加data-api
//     $(function() {
//         $('[data-toggle="scroller"]').scroller();
//     });
//
//     //统一的接口,带有 .javascript-scroll 的content 进行刷新
//     $.refreshScroller = function(content) {
//         if (content) {
//             $(content).scroller('refresh');
//         } else {
//             $('.javascript-scroll').each(function() {
//                 $(this).scroller('refresh');
//             });
//         }
//
//     };
//     //全局初始化方法，会对页面上的 [data-toggle="scroller"]，.content. 进行滚动条初始化
//     $.initScroller = function(option) {
//         this.options = $.extend({}, typeof option === 'object' && option);
//         $('[data-toggle="scroller"],.content').scroller(option);
//     };
//     //获取scroller对象
//     $.getScroller = function(content) {
//         //以前默认只能有一个无限滚动，因此infinitescroll都是加在content上，现在允许里面有多个，因此要判断父元素是否有content
//         content = content.hasClass('content') ? content : content.parents('.content');
//         if (content) {
//             return $(content).data('scroller');
//         } else {
//             return $('.content.javascript-scroll').data('scroller');
//         }
//     };
//     //检测滚动类型,
//     //‘js’: javascript 滚动条
//     //‘native’: 原生滚动条
//     $.detectScrollerType = function(content) {
//         if (content) {
//             if ($(content).data('scroller') && $(content).data('scroller').scroller) {
//                 return 'js';
//             } else {
//                 return 'native';
//             }
//         }
//     };
//
// }(jQuery);

/* ===============================================================================
 ************   Tabs   ************
 =============================================================================== */
+function ($) {
    "use strict";

    var showTab = function (tab, tabLink, force) {
        var newTab = $(tab);
        if (arguments.length === 2) {
            if (typeof tabLink === 'boolean') {
                force = tabLink;
            }
        }
        if (newTab.length === 0) return false;
        if (newTab.hasClass('active')) {
            if (force) newTab.trigger('show');
            return false;
        }
        var tabs = newTab.parent('.tabs');
        if (tabs.length === 0) return false;

        // Animated tabs
        /*var isAnimatedTabs = tabs.parent().hasClass('tabs-animated-wrap');
         if (isAnimatedTabs) {
         tabs.transform('translate3d(' + -newTab.index() * 100 + '%,0,0)');
         }*/

        // Remove active class from old tabs
        var oldTab = tabs.children('.tab.active').removeClass('active');
        // Add active class to new tab
        newTab.addClass('active');
        // Trigger 'show' event on new tab
        newTab.trigger('show');

        // Update navbars in new tab
        /*if (!isAnimatedTabs && newTab.find('.navbar').length > 0) {
         // Find tab's view
         var viewContainer;
         if (newTab.hasClass(app.params.viewClass)) viewContainer = newTab[0];
         else viewContainer = newTab.parents('.' + app.params.viewClass)[0];
         app.sizeNavbars(viewContainer);
         }*/

        // Find related link for new tab
        if (tabLink) tabLink = $(tabLink);
        else {
            // Search by id
            if (typeof tab === 'string') tabLink = $('.tab-link[href="' + tab + '"]');
            else tabLink = $('.tab-link[href="#' + newTab.attr('id') + '"]');
            // Search by data-tab
            if (!tabLink || tabLink && tabLink.length === 0) {
                $('[data-tab]').each(function () {
                    if (newTab.is($(this).attr('data-tab'))) tabLink = $(this);
                });
            }
        }
        if (tabLink.length === 0) return;

        // Find related link for old tab
        var oldTabLink;
        if (oldTab && oldTab.length > 0) {
            // Search by id
            var oldTabId = oldTab.attr('id');
            if (oldTabId) oldTabLink = $('.tab-link[href="#' + oldTabId + '"]');
            // Search by data-tab
            if (!oldTabLink || oldTabLink && oldTabLink.length === 0) {
                $('[data-tab]').each(function () {
                    if (oldTab.is($(this).attr('data-tab'))) oldTabLink = $(this);
                });
            }
        }

        // Update links' classes
        if (tabLink && tabLink.length > 0) tabLink.addClass('active');
        if (oldTabLink && oldTabLink.length > 0) oldTabLink.removeClass('active');
        tabLink.trigger('active');

        //app.refreshScroller();

        return true;
    };

    var old = $.showTab;
    $.showTab = showTab;

    $.showTab.noConflict = function () {
        $.showTab = old;
        return this;
    };
    //a标签上的click事件，在iscroll下响应有问题
    $(document).on("click", ".tab-link", function(e) {
        e.preventDefault();
        var clicked = $(this);
        showTab(clicked.data("tab") || clicked.attr('href'), clicked);
    });


}(jQuery);

/* ===============================================================================
 ************   Tabs   ************
 =============================================================================== */
+function ($) {
    "use strict";
    $.initFixedTab = function(){
        var $fixedTab = $('.fixed-tab');
        if ($fixedTab.length === 0) return;
        $('.fixed-tab').fixedTab();//默认{offset: 0}
    };
    var FixedTab = function(pageContent, _options) {
        var $pageContent = this.$pageContent = $(pageContent);
        var shadow = $pageContent.clone();
        var fixedTop = $pageContent[0].getBoundingClientRect().top;

        shadow.css('visibility', 'hidden');
        this.options = $.extend({}, this._defaults, {
            fixedTop: fixedTop,
            shadow: shadow,
            offset: 0
        }, _options);

        this._bindEvents();
    };

    FixedTab.prototype = {
        _defaults: {
            offset: 0,
        },
        _bindEvents: function() {
            this.$pageContent.parents('.content').on('scroll', this._scrollHandler.bind(this));
            this.$pageContent.on('active', '.tab-link', this._tabLinkHandler.bind(this));
        },
        _tabLinkHandler: function(ev) {
            var isFixed = $(ev.target).parents('.buttons-fixed').length > 0;
            var fixedTop = this.options.fixedTop;
            var offset = this.options.offset;
            // $.refreshScroller();
            if (!isFixed) return;
            this.$pageContent.parents('.content').scrollTop(fixedTop - offset);
        },
        // 滚动核心代码
        _scrollHandler: function(ev) {
            var $scroller = $(ev.target);
            var $pageContent = this.$pageContent;
            var shadow = this.options.shadow;
            var offset = this.options.offset;
            var fixedTop = this.options.fixedTop;
            var scrollTop = $scroller.scrollTop();
            var isFixed = scrollTop >= fixedTop - offset;
            if (isFixed) {
                shadow.insertAfter($pageContent);
                $pageContent.addClass('buttons-fixed').css('top', offset);
            } else {
                shadow.remove();
                $pageContent.removeClass('buttons-fixed').css('top', 0);
            }
        }
    };

    //FixedTab PLUGIN DEFINITION
    // =======================

    function Plugin(option) {
        var args = Array.apply(null, arguments);
        args.shift();
        this.each(function() {
            var $this = $(this);
            var options = $.extend({}, $this.dataset(), typeof option === 'object' && option);
            var data = $this.data('fixedtab');
            if (!data) {
                //获取data-api的
                $this.data('fixedtab', (data = new FixedTab(this, options)));
            }
        });

    }
    $.fn.fixedTab = Plugin;
    $.fn.fixedTab.Constructor = FixedTab;
    $(document).on('pageInit',function(){
        $.initFixedTab();
    });



}(jQuery);

+ function($) {
    "use strict";
    //这里实在js滚动时使用的下拉刷新代码。

    var refreshTime = 0;
    var initPullToRefreshJS = function(pageContainer) {
        var eventsTarget = $(pageContainer);
        if (!eventsTarget.hasClass('pull-to-refresh-content')) {
            eventsTarget = eventsTarget.find('.pull-to-refresh-content');
        }
        if (!eventsTarget || eventsTarget.length === 0) return;

        var page = eventsTarget.hasClass('content') ? eventsTarget : eventsTarget.parents('.content');
        var scroller = $.getScroller(page[0]);
        if(!scroller) return;


        var container = eventsTarget;

        function handleScroll() {
            if (container.hasClass('refreshing')) return;
            if (scroller.scrollTop() * -1 >= 44) {
                container.removeClass('pull-down').addClass('pull-up');
            } else {
                container.removeClass('pull-up').addClass('pull-down');
            }
        }

        function handleRefresh() {
            if (container.hasClass('refreshing')) return;
            container.removeClass('pull-down pull-up');
            container.addClass('refreshing transitioning');
            container.trigger('refresh');
            refreshTime = +new Date();
        }
        scroller.on('scroll', handleScroll);
        scroller.scroller.on('ptr', handleRefresh);

        // Detach Events on page remove
        function destroyPullToRefresh() {
            scroller.off('scroll', handleScroll);
            scroller.scroller.off('ptr', handleRefresh);
        }
        eventsTarget[0].destroyPullToRefresh = destroyPullToRefresh;

    };

    var pullToRefreshDoneJS = function(container) {
        container = $(container);
        if (container.length === 0) container = $('.pull-to-refresh-content.refreshing');
        if (container.length === 0) return;
        var interval = (+new Date()) - refreshTime;
        var timeOut = interval > 1000 ? 0 : 1000 - interval; //long than bounce time
        var scroller = $.getScroller(container);
        setTimeout(function() {
            scroller.refresh();
            container.removeClass('refreshing');
            container.transitionEnd(function() {
                container.removeClass("transitioning");
            });
        }, timeOut);
    };
    var pullToRefreshTriggerJS = function(container) {
        container = $(container);
        if (container.length === 0) container = $('.pull-to-refresh-content');
        if (container.hasClass('refreshing')) return;
        container.addClass('refreshing');
        var scroller = $.getScroller(container);
        scroller.scrollTop(44 + 1, 200);
        container.trigger('refresh');
    };

    var destroyPullToRefreshJS = function(pageContainer) {
        pageContainer = $(pageContainer);
        var pullToRefreshContent = pageContainer.hasClass('pull-to-refresh-content') ? pageContainer : pageContainer.find('.pull-to-refresh-content');
        if (pullToRefreshContent.length === 0) return;
        if (pullToRefreshContent[0].destroyPullToRefresh) pullToRefreshContent[0].destroyPullToRefresh();
    };

    $._pullToRefreshJSScroll = {
        "initPullToRefresh": initPullToRefreshJS,
        "pullToRefreshDone": pullToRefreshDoneJS,
        "pullToRefreshTrigger": pullToRefreshTriggerJS,
        "destroyPullToRefresh": destroyPullToRefreshJS,
    };
}(jQuery); // jshint ignore:line

+ function($) {
    'use strict';
    $.initPullToRefresh = function(pageContainer) {
        var eventsTarget = $(pageContainer);
        if (!eventsTarget.hasClass('pull-to-refresh-content')) {
            eventsTarget = eventsTarget.find('.pull-to-refresh-content');
        }
        if (!eventsTarget || eventsTarget.length === 0) return;

        var isTouched, isMoved, touchesStart = {},
            isScrolling, touchesDiff, touchStartTime, container, refresh = false,
            useTranslate = false,
            startTranslate = 0,
            translate, scrollTop, wasScrolled, triggerDistance, dynamicTriggerDistance;

        container = eventsTarget;

        // Define trigger distance
        if (container.attr('data-ptr-distance')) {
            dynamicTriggerDistance = true;
        } else {
            triggerDistance = 44;
        }

        function handleTouchStart(e) {
            if (isTouched) {
                if ($.device.android) {
                    if ('targetTouches' in e && e.targetTouches.length > 1) return;
                } else return;
            }
            isMoved = false;
            isTouched = true;
            isScrolling = undefined;
            wasScrolled = undefined;
            touchesStart.x = (Boolean(e.targetTouches) && e.type === 'touchstart') ? e.targetTouches[0].pageX : e.pageX;
            touchesStart.y = (Boolean(e.targetTouches) && e.type === 'touchstart') ? e.targetTouches[0].pageY : e.pageY;
            // touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
            // touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
            touchStartTime = (new Date()).getTime();
            /*jshint validthis:true */
            container = $(this);
        }

        function handleTouchMove(e) {
            if (!isTouched) return;
            var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
            var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
            if (typeof isScrolling === 'undefined') {
                isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));
            }
            if (!isScrolling) {
                isTouched = false;
                return;
            }

            scrollTop = container[0].scrollTop;
            if (typeof wasScrolled === 'undefined' && scrollTop !== 0) wasScrolled = true;

            if (!isMoved) {
                /*jshint validthis:true */
                container.removeClass('transitioning');
                if (scrollTop > container[0].offsetHeight) {
                    isTouched = false;
                    return;
                }
                if (dynamicTriggerDistance) {
                    triggerDistance = container.attr('data-ptr-distance');
                    if (triggerDistance.indexOf('%') >= 0) triggerDistance = container[0].offsetHeight * parseInt(triggerDistance, 10) / 100;
                }
                startTranslate = container.hasClass('refreshing') ? triggerDistance : 0;
                if (container[0].scrollHeight === container[0].offsetHeight || !$.device.ios) {
                    useTranslate = true;
                } else {
                    useTranslate = false;
                }
                useTranslate = true;
            }
            isMoved = true;
            touchesDiff = pageY - touchesStart.y;

            if (touchesDiff > 0 && scrollTop <= 0 || scrollTop < 0) {
                // iOS 8 fix
                if ($.device.ios && parseInt($.device.osVersion.split('.')[0], 10) > 7 && scrollTop === 0 && !wasScrolled) useTranslate = true;

                if (useTranslate) {
                    e.preventDefault();
                    translate = (Math.pow(touchesDiff, 0.85) + startTranslate);
                    container.transform('translate3d(0,' + translate + 'px,0)');
                } else {}
                if ((useTranslate && Math.pow(touchesDiff, 0.85) > triggerDistance) || (!useTranslate && touchesDiff >= triggerDistance * 2)) {
                    refresh = true;
                    container.addClass('pull-up').removeClass('pull-down');
                } else {
                    refresh = false;
                    container.removeClass('pull-up').addClass('pull-down');
                }
            } else {

                container.removeClass('pull-up pull-down');
                refresh = false;
                return;
            }
        }

        function handleTouchEnd() {
            if (!isTouched || !isMoved) {
                isTouched = false;
                isMoved = false;
                return;
            }
            if (translate) {
                container.addClass('transitioning');
                translate = 0;
            }
            container.transform('');
            if (refresh) {
                //防止二次触发
                if(container.hasClass('refreshing')) return;
                container.addClass('refreshing');
                container.trigger('refresh');
            } else {
                container.removeClass('pull-down');
            }
            isTouched = false;
            isMoved = false;
        }

        // Attach Events
        eventsTarget.on($.touchEvents.start, handleTouchStart);
        eventsTarget.on($.touchEvents.move, handleTouchMove);
        eventsTarget.on($.touchEvents.end, handleTouchEnd);


        function destroyPullToRefresh() {
            eventsTarget.off($.touchEvents.start, handleTouchStart);
            eventsTarget.off($.touchEvents.move, handleTouchMove);
            eventsTarget.off($.touchEvents.end, handleTouchEnd);
        }
        eventsTarget[0].destroyPullToRefresh = destroyPullToRefresh;

    };
    $.pullToRefreshDone = function(container) {
        $(window).scrollTop(0);//解决微信下拉刷新顶部消失的问题
        container = $(container);
        if (container.length === 0) container = $('.pull-to-refresh-content.refreshing');
        container.removeClass('refreshing').addClass('transitioning');
        container.transitionEnd(function() {
            container.removeClass('transitioning pull-up pull-down');
        });
    };
    $.pullToRefreshTrigger = function(container) {
        container = $(container);
        if (container.length === 0) container = $('.pull-to-refresh-content');
        if (container.hasClass('refreshing')) return;
        container.addClass('transitioning refreshing');
        container.trigger('refresh');
    };

    $.destroyPullToRefresh = function(pageContainer) {
        pageContainer = $(pageContainer);
        var pullToRefreshContent = pageContainer.hasClass('pull-to-refresh-content') ? pageContainer : pageContainer.find('.pull-to-refresh-content');
        if (pullToRefreshContent.length === 0) return;
        if (pullToRefreshContent[0].destroyPullToRefresh) pullToRefreshContent[0].destroyPullToRefresh();
    };

    //这里是否需要写到 scroller 中去？
    /*    $.initPullToRefresh = function(pageContainer) {
     var $pageContainer = $(pageContainer);
     $pageContainer.each(function(index, item) {
     if ($.detectScrollerType(item) === 'js') {
     $._pullToRefreshJSScroll.initPullToRefresh(item);
     } else {
     initPullToRefresh(item);
     }
     });
     };


     $.pullToRefreshDone = function(pageContainer) {
     var $pageContainer = $(pageContainer);
     $pageContainer.each(function(index, item) {
     if ($.detectScrollerType(item) === 'js') {
     $._pullToRefreshJSScroll.pullToRefreshDone(item);
     } else {
     pullToRefreshDone(item);
     }
     });
     };


     $.pullToRefreshTrigger = function(pageContainer) {
     var $pageContainer = $(pageContainer);
     $pageContainer.each(function(index, item) {
     if ($.detectScrollerType(item) === 'js') {
     $._pullToRefreshJSScroll.pullToRefreshTrigger(item);
     } else {
     pullToRefreshTrigger(item);
     }
     });
     };

     $.destroyPullToRefresh = function(pageContainer) {
     var $pageContainer = $(pageContainer);
     $pageContainer.each(function(index, item) {
     if ($.detectScrollerType(item) === 'js') {
     $._pullToRefreshJSScroll.destroyPullToRefresh(item);
     } else {
     destroyPullToRefresh(item);
     }
     });
     };
     */

}(jQuery); //jshint ignore:line

// + function($) {
//     'use strict';
//
//     function handleInfiniteScroll() {
//         /*jshint validthis:true */
//         var inf = $(this);
//         var scroller = $.getScroller(inf);
//         var scrollTop = scroller.scrollTop();
//         var scrollHeight = scroller.scrollHeight();
//         var height = inf[0].offsetHeight;
//         var distance = inf[0].getAttribute('data-distance');
//         var virtualListContainer = inf.find('.virtual-list');
//         var virtualList;
//         var onTop = inf.hasClass('infinite-scroll-top');
//         if (!distance) distance = 50;
//         if (typeof distance === 'string' && distance.indexOf('%') >= 0) {
//             distance = parseInt(distance, 10) / 100 * height;
//         }
//         if (distance > height) distance = height;
//         if (onTop) {
//             if (scrollTop < distance) {
//                 inf.trigger('infinite');
//             }
//         } else {
//             if (scrollTop + height >= scrollHeight - distance) {
//                 if (virtualListContainer.length > 0) {
//                     virtualList = virtualListContainer[0].f7VirtualList;
//                     if (virtualList && !virtualList.reachEnd) return;
//                 }
//                 inf.trigger('infinite');
//             }
//         }
//
//     }
//     $.attachInfiniteScroll = function(infiniteContent) {
//         $.getScroller(infiniteContent).on('scroll', handleInfiniteScroll);
//     };
//     $.detachInfiniteScroll = function(infiniteContent) {
//         $.getScroller(infiniteContent).off('scroll', handleInfiniteScroll);
//     };
//
//     $.initInfiniteScroll = function(pageContainer) {
//         pageContainer = $(pageContainer);
//         var infiniteContent = pageContainer.hasClass('infinite-scroll')?pageContainer:pageContainer.find('.infinite-scroll');
//         if (infiniteContent.length === 0) return;
//         $.attachInfiniteScroll(infiniteContent);
//         //如果是顶部无限刷新，要将滚动条初始化于最下端
//         pageContainer.each(function(v){
//             if($(v).hasClass('infinite-scroll-top')){
//                 var height = v.scrollHeight - v.clientHeight;
//                 $(v).scrollTop(height);
//             }
//         });
//         function detachEvents() {
//             $.detachInfiniteScroll(infiniteContent);
//             pageContainer.off('pageBeforeRemove', detachEvents);
//         }
//         pageContainer.on('pageBeforeRemove', detachEvents);
//     };
// }(jQuery);

+function ($) {
    "use strict";
    $(function() {
        $(document).on("focus", ".searchbar input", function(e) {
            var $input = $(e.target);
            $input.parents(".searchbar").addClass("searchbar-active");
        });
        $(document).on("click", ".searchbar-cancel", function(e) {
            var $btn = $(e.target);
            $btn.parents(".searchbar").removeClass("searchbar-active");
        });
        $(document).on("blur", ".searchbar input", function(e) {
            var $input = $(e.target);
            $input.parents(".searchbar").removeClass("searchbar-active");
        });
    });
}(jQuery);

/*======================================================
 ************   Panels   ************
 ======================================================*/
/*jshint unused: false*/
+function ($) {
    "use strict";
    $.allowPanelOpen = true;
    $.openPanel = function (panel) {
        if (!$.allowPanelOpen) return false;
        if(panel === 'left' || panel === 'right') panel = ".panel-" + panel;  //可以传入一个方向
        panel = panel ? $(panel) : $(".panel").eq(0);
        var direction = panel.hasClass("panel-right") ? "right" : "left";
        if (panel.length === 0 || panel.hasClass('active')) return false;
        $.closePanel(); // Close if some panel is opened
        $.allowPanelOpen = false;
        var effect = panel.hasClass('panel-reveal') ? 'reveal' : 'cover';
        panel.css({display: 'block'}).addClass('active');
        panel.trigger('open');

        // Trigger reLayout
        var clientLeft = panel[0].clientLeft;

        // Transition End;
        var transitionEndTarget = effect === 'reveal' ? $($.getCurrentPage()) : panel;
        var openedTriggered = false;

        function panelTransitionEnd() {
            transitionEndTarget.transitionEnd(function (e) {
                if (e.target === transitionEndTarget[0]) {
                    if (panel.hasClass('active')) {
                        panel.trigger('opened');
                    }
                    else {
                        panel.trigger('closed');
                    }
                    $.allowPanelOpen = true;
                }
                else panelTransitionEnd();
            });
        }
        panelTransitionEnd();

        $(document.body).addClass('with-panel-' + direction + '-' + effect);
        return true;
    };
    $.closePanel = function () {
        var activePanel = $('.panel.active');
        if (activePanel.length === 0) return false;
        var effect = activePanel.hasClass('panel-reveal') ? 'reveal' : 'cover';
        var panelPosition = activePanel.hasClass('panel-left') ? 'left' : 'right';
        activePanel.removeClass('active');
        var transitionEndTarget = effect === 'reveal' ? $('.page') : activePanel;
        activePanel.trigger('close');
        $.allowPanelOpen = false;

        transitionEndTarget.transitionEnd(function () {
            if (activePanel.hasClass('active')) return;
            activePanel.css({display: ''});
            activePanel.trigger('closed');
            $('body').removeClass('panel-closing');
            $.allowPanelOpen = true;
        });

        $('body').addClass('panel-closing').removeClass('with-panel-' + panelPosition + '-' + effect);
    };

    $(document).on("click", ".open-panel", function(e) {
        var panel = $(e.target).data('panel');
        $.openPanel(panel);
    });
    $(document).on("click", ".close-panel, .panel-overlay", function(e) {
        $.closePanel();
    });
    /*======================================================
     ************   Swipe panels   ************
     ======================================================*/
    $.initSwipePanels = function () {
        var panel, side;
        var swipePanel = $.smConfig.swipePanel;
        var swipePanelOnlyClose = $.smConfig.swipePanelOnlyClose;
        var swipePanelCloseOpposite = true;
        var swipePanelActiveArea = false;
        var swipePanelThreshold = 2;
        var swipePanelNoFollow = false;

        if(!(swipePanel || swipePanelOnlyClose)) return;

        var panelOverlay = $('.panel-overlay');
        var isTouched, isMoved, isScrolling, touchesStart = {}, touchStartTime, touchesDiff, translate, opened, panelWidth, effect, direction;
        var views = $('.page');

        function handleTouchStart(e) {
            if (!$.allowPanelOpen || (!swipePanel && !swipePanelOnlyClose) || isTouched) return;
            if ($('.modal-in, .photo-browser-in').length > 0) return;
            if (!(swipePanelCloseOpposite || swipePanelOnlyClose)) {
                if ($('.panel.active').length > 0 && !panel.hasClass('active')) return;
            }
            touchesStart.x = (Boolean(e.targetTouches) && e.type === 'touchstart') ? e.targetTouches[0].pageX : e.pageX;
            touchesStart.y = (Boolean(e.targetTouches) && e.type === 'touchstart') ? e.targetTouches[0].pageY : e.pageY;
            // touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
            // touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
            if (swipePanelCloseOpposite || swipePanelOnlyClose) {
                if ($('.panel.active').length > 0) {
                    side = $('.panel.active').hasClass('panel-left') ? 'left' : 'right';
                }
                else {
                    if (swipePanelOnlyClose) return;
                    side = swipePanel;
                }
                if (!side) return;
            }
            panel = $('.panel.panel-' + side);
            if(!panel[0]) return;
            opened = panel.hasClass('active');
            if (swipePanelActiveArea && !opened) {
                if (side === 'left') {
                    if (touchesStart.x > swipePanelActiveArea) return;
                }
                if (side === 'right') {
                    if (touchesStart.x < window.innerWidth - swipePanelActiveArea) return;
                }
            }
            isMoved = false;
            isTouched = true;
            isScrolling = undefined;

            touchStartTime = (new Date()).getTime();
            direction = undefined;
        }
        function handleTouchMove(e) {
            if (!isTouched) return;
            if(!panel[0]) return;
            if (e.f7PreventPanelSwipe) return;
            var pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
            var pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
            if (typeof isScrolling === 'undefined') {
                isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));
            }
            if (isScrolling) {
                isTouched = false;
                return;
            }
            if (!direction) {
                if (pageX > touchesStart.x) {
                    direction = 'to-right';
                }
                else {
                    direction = 'to-left';
                }

                if (
                    side === 'left' &&
                    (
                        direction === 'to-left' && !panel.hasClass('active')
                    ) ||
                    side === 'right' &&
                    (
                        direction === 'to-right' && !panel.hasClass('active')
                    )
                )
                {
                    isTouched = false;
                    return;
                }
            }

            if (swipePanelNoFollow) {
                var timeDiff = (new Date()).getTime() - touchStartTime;
                if (timeDiff < 300) {
                    if (direction === 'to-left') {
                        if (side === 'right') $.openPanel(side);
                        if (side === 'left' && panel.hasClass('active')) $.closePanel();
                    }
                    if (direction === 'to-right') {
                        if (side === 'left') $.openPanel(side);
                        if (side === 'right' && panel.hasClass('active')) $.closePanel();
                    }
                }
                isTouched = false;
                console.log(3);
                isMoved = false;
                return;
            }

            if (!isMoved) {
                effect = panel.hasClass('panel-cover') ? 'cover' : 'reveal';
                if (!opened) {
                    panel.show();
                    panelOverlay.show();
                }
                panelWidth = panel[0].offsetWidth;
                panel.transition(0);
                /*
                 if (panel.find('.' + app.params.viewClass).length > 0) {
                 if (app.sizeNavbars) app.sizeNavbars(panel.find('.' + app.params.viewClass)[0]);
                 }
                 */
            }

            isMoved = true;

            e.preventDefault();
            var threshold = opened ? 0 : -swipePanelThreshold;
            if (side === 'right') threshold = -threshold;

            touchesDiff = pageX - touchesStart.x + threshold;

            if (side === 'right') {
                translate = touchesDiff  - (opened ? panelWidth : 0);
                if (translate > 0) translate = 0;
                if (translate < -panelWidth) {
                    translate = -panelWidth;
                }
            }
            else {
                translate = touchesDiff  + (opened ? panelWidth : 0);
                if (translate < 0) translate = 0;
                if (translate > panelWidth) {
                    translate = panelWidth;
                }
            }
            if (effect === 'reveal') {
                views.transform('translate3d(' + translate + 'px,0,0)').transition(0);
                panelOverlay.transform('translate3d(' + translate + 'px,0,0)');
                //app.pluginHook('swipePanelSetTransform', views[0], panel[0], Math.abs(translate / panelWidth));
            }
            else {
                panel.transform('translate3d(' + translate + 'px,0,0)').transition(0);
                //app.pluginHook('swipePanelSetTransform', views[0], panel[0], Math.abs(translate / panelWidth));
            }
        }
        function handleTouchEnd(e) {
            if (!isTouched || !isMoved) {
                isTouched = false;
                isMoved = false;
                return;
            }
            isTouched = false;
            isMoved = false;
            var timeDiff = (new Date()).getTime() - touchStartTime;
            var action;
            var edge = (translate === 0 || Math.abs(translate) === panelWidth);

            if (!opened) {
                if (translate === 0) {
                    action = 'reset';
                }
                else if (
                    timeDiff < 300 && Math.abs(translate) > 0 ||
                    timeDiff >= 300 && (Math.abs(translate) >= panelWidth / 2)
                ) {
                    action = 'swap';
                }
                else {
                    action = 'reset';
                }
            }
            else {
                if (translate === -panelWidth) {
                    action = 'reset';
                }
                else if (
                    timeDiff < 300 && Math.abs(translate) >= 0 ||
                    timeDiff >= 300 && (Math.abs(translate) <= panelWidth / 2)
                ) {
                    if (side === 'left' && translate === panelWidth) action = 'reset';
                    else action = 'swap';
                }
                else {
                    action = 'reset';
                }
            }
            if (action === 'swap') {
                $.allowPanelOpen = true;
                if (opened) {
                    $.closePanel();
                    if (edge) {
                        panel.css({display: ''});
                        $('body').removeClass('panel-closing');
                    }
                }
                else {
                    $.openPanel(side);
                }
                if (edge) $.allowPanelOpen = true;
            }
            if (action === 'reset') {
                if (opened) {
                    $.allowPanelOpen = true;
                    $.openPanel(side);
                }
                else {
                    $.closePanel();
                    if (edge) {
                        $.allowPanelOpen = true;
                        panel.css({display: ''});
                    }
                    else {
                        var target = effect === 'reveal' ? views : panel;
                        $('body').addClass('panel-closing');
                        target.transitionEnd(function () {
                            $.allowPanelOpen = true;
                            panel.css({display: ''});
                            $('body').removeClass('panel-closing');
                        });
                    }
                }
            }
            if (effect === 'reveal') {
                views.transition('');
                views.transform('');
            }
            panel.transition('').transform('');
            panelOverlay.css({display: ''}).transform('');
        }
        $(document).on($.touchEvents.start, handleTouchStart);
        $(document).on($.touchEvents.move, handleTouchMove);
        $(document).on($.touchEvents.end, handleTouchEnd);
    };

    $.initSwipePanels();
}(jQuery);

/**
 * 路由
 *
 * 路由功能将接管页面的链接点击行为，最后达到动画切换的效果，具体如下：
 *  1. 链接对应的是另一个页面，那么则尝试 ajax 加载，然后把新页面里的符合约定的结构提取出来，然后做动画切换；如果没法 ajax 或结构不符合，那么则回退为普通的页面跳转
 *  2. 链接是当前页面的锚点，并且该锚点对应的元素存在且符合路由约定，那么则把该元素做动画切入
 *  3. 浏览器前进后退（history.forward/history.back）时，也使用动画效果
 *  4. 如果链接有 back 这个 class，那么则忽略一切，直接调用 history.back() 来后退
 *
 * 路由功能默认开启，如果需要关闭路由功能，那么在 zepto 之后，msui 脚本之前设置 $.config.router = false 即可（intro.js 中会 extend 到 $.smConfig 中）。
 *
 * 可以设置 $.config.routerFilter 函数来设置当前点击链接是否使用路由功能，实参是 a 链接的 zepto 对象；返回 false 表示不使用 router 功能。
 *
 * ajax 载入新的文档时，并不会执行里面的 js。到目前为止，在开启路由功能时，建议的做法是：
 *  把所有页面的 js 都放到同一个脚本里，js 里面的事件绑定使用委托而不是直接的绑定在元素上（因为动态加载的页面元素还不存在），然后所有页面都引用相同的 js 脚本。非事件类可以通过监控 pageInit 事件，根据里面的 pageId 来做对应区别处理。
 *
 * 如果有需要
 *
 * 对外暴露的方法
 *  - load （原 loadPage 效果一致,但后者已标记为待移除）
 *  - forward
 *  - back
 *
 * 事件
 * pageLoad* 系列在发生 ajax 加载时才会触发；当是块切换或已缓存的情况下，不会发送这些事件
 *  - pageLoadCancel: 如果前一个还没加载完,那么取消并发送该事件
 *  - pageLoadStart: 开始加载
 *  - pageLodComplete: ajax complete 完成
 *  - pageLoadError: ajax 发生 error
 *  - pageAnimationStart: 执行动画切换前，实参是 event，sectionId 和 $section
 *  - pageAnimationEnd: 执行动画完毕，实参是 event，sectionId 和 $section
 *  - beforePageRemove: 新 document 载入且动画切换完毕，旧的 document remove 之前在 window 上触发，实参是 event 和 $pageContainer
 *  - pageRemoved: 新的 document 载入且动画切换完毕，旧的 document remove 之后在 window 上触发
 *  - beforePageSwitch: page 切换前，在 pageAnimationStart 前，beforePageSwitch 之后会做一些额外的处理才触发 pageAnimationStart
 *  - pageInitInternal: （经 init.js 处理后，对外是 pageInit）紧跟着动画完成的事件，实参是 event，sectionId 和 $section
 *
 * 术语
 *  - 文档（document），不带 hash 的 url 关联着的应答 html 结构
 *  - 块（section），一个文档内有指定块标识的元素
 *
 * 路由实现约定
 *  - 每个文档的需要展示的内容必需位于指定的标识（routerConfig.sectionGroupClass）的元素里面，默认是: div.page-group （注意,如果改变这个需要同时改变 less 中的命名）
 *  - 每个块必需带有指定的块标识（routerConfig.pageClass），默认是 .page
 *
 *  即，使用路由功能的每一个文档应当是下面这样的结构（省略 <body> 等）:
 *      <div class="page-group">
 *          <div class="page">xxx</div>
 *          <div class="page">yyy</div>
 *      </div>
 *
 * 另，每一个块都应当有一个唯一的 ID，这样才能通过 #the-id 的形式来切换定位。
 * 当一个块没有 id 时，如果是第一个的默认的需要展示的块，那么会给其添加一个随机的 id；否则，没有 id 的块将不会被切换展示。
 *
 * 通过 history.state/history.pushState 以及用 sessionStorage 来记录当前 state 以及最大的 state id 来辅助前进后退的切换效果，所以在不支持 sessionStorage 的情况下，将不开启路由功能。
 *
 * 为了解决 ajax 载入页面导致重复 ID 以及重复 popup 等功能，上面约定了使用路由功能的所有可展示内容都必需位于指定元素内。从而可以在进行文档间切换时可以进行两个文档的整体移动，切换完毕后再把前一个文档的内容从页面之间移除。
 *
 * 默认地过滤了部分协议的链接，包括 tel:, javascript:, mailto:，这些链接将不会使用路由功能。如果有更多的自定义控制需求，可以在 $.config.routerFilter 实现
 *
 * 注: 以 _ 开头的函数标明用于此处内部使用，可根据需要随时重构变更，不对外确保兼容性。
 *
 */
+function($) {
    'use strict';

    if (!window.CustomEvent) {
        window.CustomEvent = function(type, config) {
            config = config || { bubbles: false, cancelable: false, detail: undefined};
            var e = document.createEvent('CustomEvent');
            e.initCustomEvent(type, config.bubbles, config.cancelable, config.detail);
            return e;
        };

        window.CustomEvent.prototype = window.Event.prototype;
    }

    var EVENTS = {
        pageLoadStart: 'pageLoadStart', // ajax 开始加载新页面前
        pageLoadCancel: 'pageLoadCancel', // 取消前一个 ajax 加载动作后
        pageLoadError: 'pageLoadError', // ajax 加载页面失败后
        pageLoadComplete: 'pageLoadComplete', // ajax 加载页面完成后（不论成功与否）
        pageAnimationStart: 'pageAnimationStart', // 动画切换 page 前
        pageAnimationEnd: 'pageAnimationEnd', // 动画切换 page 结束后
        beforePageRemove: 'beforePageRemove', // 移除旧 document 前（适用于非内联 page 切换）
        pageRemoved: 'pageRemoved', // 移除旧 document 后（适用于非内联 page 切换）
        beforePageSwitch: 'beforePageSwitch', // page 切换前，在 pageAnimationStart 前，beforePageSwitch 之后会做一些额外的处理才触发 pageAnimationStart
        pageInit: 'pageInitInternal' // 目前是定义为一个 page 加载完毕后（实际和 pageAnimationEnd 等同）
    };

    var Util = {
        /**
         * 获取 url 的 fragment（即 hash 中去掉 # 的剩余部分）
         *
         * 如果没有则返回空字符串
         * 如: http://example.com/path/?query=d#123 => 123
         *
         * @param {String} url url
         * @returns {String}
         */
        getUrlFragment: function(url) {
            var hashIndex = url.indexOf('#');
            return hashIndex === -1 ? '' : url.slice(hashIndex + 1);
        },
        /**
         * 获取一个链接相对于当前页面的绝对地址形式
         *
         * 假设当前页面是 http://a.com/b/c
         * 那么有以下情况:
         * d => http://a.com/b/d
         * /e => http://a.com/e
         * #1 => http://a.com/b/c#1
         * http://b.com/f => http://b.com/f
         *
         * @param {String} url url
         * @returns {String}
         */
        getAbsoluteUrl: function(url) {
            var link = document.createElement('a');
            link.setAttribute('href', url);
            var absoluteUrl = link.href;
            link = null;
            return absoluteUrl;
        },
        /**
         * 获取一个 url 的基本部分，即不包括 hash
         *
         * @param {String} url url
         * @returns {String}
         */
        getBaseUrl: function(url) {
            var hashIndex = url.indexOf('#');
            return hashIndex === -1 ? url.slice(0) : url.slice(0, hashIndex);
        },
        /**
         * 把一个字符串的 url 转为一个可获取其 base 和 fragment 等的对象
         *
         * @param {String} url url
         * @returns {UrlObject}
         */
        toUrlObject: function(url) {
            var fullUrl = this.getAbsoluteUrl(url),
                baseUrl = this.getBaseUrl(fullUrl),
                fragment = this.getUrlFragment(url);

            return {
                base: baseUrl,
                full: fullUrl,
                original: url,
                fragment: fragment
            };
        },
        /**
         * 判断浏览器是否支持 sessionStorage，支持返回 true，否则返回 false
         * @returns {Boolean}
         */
        supportStorage: function() {
            var mod = 'sm.router.storage.ability';
            try {
                sessionStorage.setItem(mod, mod);
                sessionStorage.removeItem(mod);
                return true;
            } catch(e) {
                return false;
            }
        }
    };

    var routerConfig = {
        sectionGroupClass: 'page-group',
        // 表示是当前 page 的 class
        curPageClass: 'page-current',
        // 用来辅助切换时表示 page 是 visible 的,
        // 之所以不用 curPageClass，是因为 page-current 已被赋予了「当前 page」这一含义而不仅仅是 display: block
        // 并且，别的地方已经使用了，所以不方便做变更，故新增一个
        visiblePageClass: 'page-visible',
        // 表示是 page 的 class，注意，仅是标志 class，而不是所有的 class
        pageClass: 'page'
    };

    var DIRECTION = {
        leftToRight: 'from-left-to-right',
        rightToLeft: 'from-right-to-left'
    };

    var theHistory = window.history;

    var Router = function() {
        this.sessionNames = {
            currentState: 'sm.router.currentState',
            maxStateId: 'sm.router.maxStateId'
        };

        this._init();
        this.xhr = null;
        window.addEventListener('popstate', this._onPopState.bind(this));
    };

    /**
     * 初始化
     *
     * - 把当前文档内容缓存起来
     * - 查找默认展示的块内容，查找顺序如下
     *      1. id 是 url 中的 fragment 的元素
     *      2. 有当前块 class 标识的第一个元素
     *      3. 第一个块
     * - 初始页面 state 处理
     *
     * @private
     */
    Router.prototype._init = function() {

        this.$view = $('body');

        // 用来保存 document 的 map
        this.cache = {};
        var $doc = $(document);
        var currentUrl = location.href;
        this._saveDocumentIntoCache($doc, currentUrl);

        var curPageId;

        var currentUrlObj = Util.toUrlObject(currentUrl);
        var $allSection = $doc.find('.' + routerConfig.pageClass);
        var $visibleSection = $doc.find('.' + routerConfig.curPageClass);
        var $curVisibleSection = $visibleSection.eq(0);
        var $hashSection;

        if (currentUrlObj.fragment) {
            $hashSection = $doc.find('#' + currentUrlObj.fragment);
        }
        if ($hashSection && $hashSection.length) {
            $visibleSection = $hashSection.eq(0);
        } else if (!$visibleSection.length) {
            $visibleSection = $allSection.eq(0);
        }
        if (!$visibleSection.attr('id')) {
            $visibleSection.attr('id', this._generateRandomId());
        }

        if ($curVisibleSection.length &&
            ($curVisibleSection.attr('id') !== $visibleSection.attr('id'))) {
            // 在 router 到 inner page 的情况下，刷新（或者直接访问该链接）
            // 直接切换 class 会有「闪」的现象,或许可以采用 animateSection 来减缓一下
            $curVisibleSection.removeClass(routerConfig.curPageClass);
            $visibleSection.addClass(routerConfig.curPageClass);
        } else {
            $visibleSection.addClass(routerConfig.curPageClass);
        }
        curPageId = $visibleSection.attr('id');


        // 新进入一个使用 history.state 相关技术的页面时，如果第一个 state 不 push/replace,
        // 那么在后退回该页面时，将不触发 popState 事件
        if (theHistory.state === null) {
            var curState = {
                id: this._getNextStateId(),
                url: Util.toUrlObject(currentUrl),
                pageId: curPageId
            };

            theHistory.replaceState(curState, '', currentUrl);
            this._saveAsCurrentState(curState);
            this._incMaxStateId();
        }
    };

    /**
     * 切换到 url 指定的块或文档
     *
     * 如果 url 指向的是当前页面，那么认为是切换块；
     * 否则是切换文档
     *
     * @param {String} url url
     * @param {Boolean=} ignoreCache 是否强制请求不使用缓存，对 document 生效，默认是 false
     */
    Router.prototype.load = function(url, ignoreCache) {
        if (ignoreCache === undefined) {
            ignoreCache = false;
        }

        if (this._isTheSameDocument(location.href, url)) {
            this._switchToSection(Util.getUrlFragment(url));
        } else {
            this._saveDocumentIntoCache($(document), location.href);
            this._switchToDocument(url, ignoreCache);
        }
    };

    /**
     * 调用 history.forward()
     */
    Router.prototype.forward = function() {
        theHistory.forward();
    };

    /**
     * 调用 history.back()
     */
    Router.prototype.back = function() {
        theHistory.back();
    };

    //noinspection JSUnusedGlobalSymbols
    /**
     * @deprecated
     */
    Router.prototype.loadPage = Router.prototype.load;

    /**
     * 切换显示当前文档另一个块
     *
     * 把新块从右边切入展示，同时会把新的块的记录用 history.pushState 来保存起来
     *
     * 如果已经是当前显示的块，那么不做任何处理；
     * 如果没对应的块，那么忽略。
     *
     * @param {String} sectionId 待切换显示的块的 id
     * @private
     */
    Router.prototype._switchToSection = function(sectionId) {
        if (!sectionId) {
            return;
        }

        var $curPage = this._getCurrentSection(),
            $newPage = $('#' + sectionId);

        // 如果已经是当前页，不做任何处理
        if ($curPage === $newPage) {
            return;
        }

        this._animateSection($curPage, $newPage, DIRECTION.rightToLeft);
        this._pushNewState('#' + sectionId, sectionId);
    };

    /**
     * 载入显示一个新的文档
     *
     * - 如果有缓存，那么直接利用缓存来切换
     * - 否则，先把页面加载过来缓存，然后再切换
     *      - 如果解析失败，那么用 location.href 的方式来跳转
     *
     * 注意：不能在这里以及其之后用 location.href 来 **读取** 切换前的页面的 url，
     *     因为如果是 popState 时的调用，那么此时 location 已经是 pop 出来的 state 的了
     *
     * @param {String} url 新的文档的 url
     * @param {Boolean=} ignoreCache 是否不使用缓存强制加载页面
     * @param {Boolean=} isPushState 是否需要 pushState
     * @param {String=} direction 新文档切入的方向
     * @private
     */
    Router.prototype._switchToDocument = function(url, ignoreCache, isPushState, direction) {
        var baseUrl = Util.toUrlObject(url).base;

        if (ignoreCache) {
            delete this.cache[baseUrl];
        }

        var cacheDocument = this.cache[baseUrl];
        var context = this;

        if (cacheDocument) {
            this._doSwitchDocument(url, isPushState, direction);
        } else {
            this._loadDocument(url, {
                success: function($doc) {
                    try {
                        context._parseDocument(url, $doc);
                        context._doSwitchDocument(url, isPushState, direction);
                    } catch (e) {
                        location.href = url;
                    }
                },
                error: function() {
                    location.href = url;
                }
            });
        }
    };

    /**
     * 利用缓存来做具体的切换文档操作
     *
     * - 确定待切入的文档的默认展示 section
     * - 把新文档 append 到 view 中
     * - 动画切换文档
     * - 如果需要 pushState，那么把最新的状态 push 进去并把当前状态更新为该状态
     *
     * @param {String} url 待切换的文档的 url
     * @param {Boolean} isPushState 加载页面后是否需要 pushState，默认是 true
     * @param {String} direction 动画切换方向，默认是 DIRECTION.rightToLeft
     * @private
     */
    Router.prototype._doSwitchDocument = function(url, isPushState, direction) {
        if (typeof isPushState === 'undefined') {
            isPushState = true;
        }

        var urlObj = Util.toUrlObject(url);
        var $currentDoc = this.$view.find('.' + routerConfig.sectionGroupClass);
        var $newDoc = $($('<div></div>').append(this.cache[urlObj.base].$content).html());

        // 确定一个 document 展示 section 的顺序
        // 1. 与 hash 关联的 element
        // 2. 默认的标识为 current 的 element
        // 3. 第一个 section
        var $allSection = $newDoc.find('.' + routerConfig.pageClass);
        var $visibleSection = $newDoc.find('.' + routerConfig.curPageClass);
        var $hashSection;

        if (urlObj.fragment) {
            $hashSection = $newDoc.find('#' + urlObj.fragment);
        }
        if ($hashSection && $hashSection.length) {
            $visibleSection = $hashSection.eq(0);
        } else if (!$visibleSection.length) {
            $visibleSection = $allSection.eq(0);
        }
        if (!$visibleSection.attr('id')) {
            $visibleSection.attr('id', this._generateRandomId());
        }

        var $currentSection = this._getCurrentSection();
        $currentSection.trigger(EVENTS.beforePageSwitch, [$currentSection.attr('id'), $currentSection]);

        $allSection.removeClass(routerConfig.curPageClass);
        $visibleSection.addClass(routerConfig.curPageClass);

        // prepend 而不 append 的目的是避免 append 进去新的 document 在后面，
        // 其里面的默认展示的(.page-current) 的页面直接就覆盖了原显示的页面（因为都是 absolute）
        this.$view.prepend($newDoc);

        this._animateDocument($currentDoc, $newDoc, $visibleSection, direction);

        if (isPushState) {
            this._pushNewState(url, $visibleSection.attr('id'));
        }
    };

    /**
     * 判断两个 url 指向的页面是否是同一个
     *
     * 判断方式: 如果两个 url 的 base 形式（不带 hash 的绝对形式）相同，那么认为是同一个页面
     *
     * @param {String} url
     * @param {String} anotherUrl
     * @returns {Boolean}
     * @private
     */
    Router.prototype._isTheSameDocument = function(url, anotherUrl) {
        return Util.toUrlObject(url).base === Util.toUrlObject(anotherUrl).base;
    };

    /**
     * ajax 加载 url 指定的页面内容
     *
     * 加载过程中会发出以下事件
     *  pageLoadCancel: 如果前一个还没加载完,那么取消并发送该事件
     *  pageLoadStart: 开始加载
     *  pageLodComplete: ajax complete 完成
     *  pageLoadError: ajax 发生 error
     *
     *
     * @param {String} url url
     * @param {Object=} callback 回调函数配置，可选，可以配置 success\error 和 complete
     *      所有回调函数的 this 都是 null，各自实参如下：
     *      success: $doc, status, xhr
     *      error: xhr, status, err
     *      complete: xhr, status
     *
     * @private
     */
    Router.prototype._loadDocument = function(url, callback) {
        if (this.xhr && this.xhr.readyState < 4) {
            this.xhr.onreadystatechange = function() {
            };
            this.xhr.abort();
            this.dispatch(EVENTS.pageLoadCancel);
        }

        this.dispatch(EVENTS.pageLoadStart);

        callback = callback || {};
        var self = this;

        this.xhr = $.ajax({
            url: url,
            success: $.proxy(function(data, status, xhr) {
                // 给包一层 <html/>，从而可以拿到完整的结构
                var $doc = $('<html></html>');
                $doc.append(data);
                callback.success && callback.success.call(null, $doc, status, xhr);
            }, this),
            error: function(xhr, status, err) {
                callback.error && callback.error.call(null, xhr, status, err);
                self.dispatch(EVENTS.pageLoadError);
            },
            complete: function(xhr, status) {
                callback.complete && callback.complete.call(null, xhr, status);
                self.dispatch(EVENTS.pageLoadComplete);
            }
        });
    };

    /**
     * 对于 ajax 加载进来的页面，把其缓存起来
     *
     * @param {String} url url
     * @param $doc ajax 载入的页面的 jq 对象，可以看做是该页面的 $(document)
     * @private
     */
    Router.prototype._parseDocument = function(url, $doc) {
        var $innerView = $doc.find('.' + routerConfig.sectionGroupClass);

        if (!$innerView.length) {
            throw new Error('missing router view mark: ' + routerConfig.sectionGroupClass);
        }

        this._saveDocumentIntoCache($doc, url);
    };

    /**
     * 把一个页面的相关信息保存到 this.cache 中
     *
     * 以页面的 baseUrl 为 key,而 value 则是一个 DocumentCache
     *
     * @param {*} doc doc
     * @param {String} url url
     * @private
     */
    Router.prototype._saveDocumentIntoCache = function(doc, url) {
        var urlAsKey = Util.toUrlObject(url).base;
        var $doc = $(doc);

        this.cache[urlAsKey] = {
            $doc: $doc,
            $content: $doc.find('.' + routerConfig.sectionGroupClass)
        };
    };

    /**
     * 从 sessionStorage 中获取保存下来的「当前状态」
     *
     * 如果解析失败，那么认为当前状态是 null
     *
     * @returns {State|null}
     * @private
     */
    Router.prototype._getLastState = function() {
        var currentState = sessionStorage.getItem(this.sessionNames.currentState);
        try {
            currentState = JSON.parse(currentState);
        } catch(e) {
            currentState = null;
        }

        return currentState;
    };

    /**
     * 把一个状态设为当前状态，保存仅 sessionStorage 中
     *
     * @param {State} state
     * @private
     */
    Router.prototype._saveAsCurrentState = function(state) {
        sessionStorage.setItem(this.sessionNames.currentState, JSON.stringify(state));
    };

    /**
     * 获取下一个 state 的 id
     *
     * 读取 sessionStorage 里的最后的状态的 id，然后 + 1；如果原没设置，那么返回 1
     *
     * @returns {number}
     * @private
     */
    Router.prototype._getNextStateId = function() {
        var maxStateId = sessionStorage.getItem(this.sessionNames.maxStateId);
        return maxStateId ? parseInt(maxStateId, 10) + 1 : 1;
    };

    /**
     * 把 sessionStorage 里的最后状态的 id 自加 1
     *
     * @private
     */
    Router.prototype._incMaxStateId = function() {
        sessionStorage.setItem(this.sessionNames.maxStateId, this._getNextStateId());
    };

    /**
     * 从一个文档切换为显示另一个文档
     *
     * @param $from 目前显示的文档
     * @param $to 待切换显示的新文档
     * @param $visibleSection 新文档中展示的 section 元素
     * @param direction 新文档切入方向
     * @private
     */
    Router.prototype._animateDocument = function($from, $to, $visibleSection, direction) {
        var sectionId = $visibleSection.attr('id');


        var $visibleSectionInFrom = $from.find('.' + routerConfig.curPageClass);
        $visibleSectionInFrom.addClass(routerConfig.visiblePageClass).removeClass(routerConfig.curPageClass);

        $visibleSection.trigger(EVENTS.pageAnimationStart, [sectionId, $visibleSection]);

        this._animateElement($from, $to, direction);

        $from.animationEnd(function() {
            $visibleSectionInFrom.removeClass(routerConfig.visiblePageClass);
            // 移除 document 前后，发送 beforePageRemove 和 pageRemoved 事件
            $(window).trigger(EVENTS.beforePageRemove, [$from]);
            $from.remove();
            $(window).trigger(EVENTS.pageRemoved);
        });

        $to.animationEnd(function() {
            $visibleSection.trigger(EVENTS.pageAnimationEnd, [sectionId, $visibleSection]);
            // 外层（init.js）中会绑定 pageInitInternal 事件，然后对页面进行初始化
            $visibleSection.trigger(EVENTS.pageInit, [sectionId, $visibleSection]);
        });
    };

    /**
     * 把当前文档的展示 section 从一个 section 切换到另一个 section
     *
     * @param $from
     * @param $to
     * @param direction
     * @private
     */
    Router.prototype._animateSection = function($from, $to, direction) {
        var toId = $to.attr('id');
        $from.trigger(EVENTS.beforePageSwitch, [$from.attr('id'), $from]);

        $from.removeClass(routerConfig.curPageClass);
        $to.addClass(routerConfig.curPageClass);
        $to.trigger(EVENTS.pageAnimationStart, [toId, $to]);
        this._animateElement($from, $to, direction);
        $to.animationEnd(function() {
            $to.trigger(EVENTS.pageAnimationEnd, [toId, $to]);
            // 外层（init.js）中会绑定 pageInitInternal 事件，然后对页面进行初始化
            $to.trigger(EVENTS.pageInit, [toId, $to]);
        });
    };

    /**
     * 切换显示两个元素
     *
     * 切换是通过更新 class 来实现的，而具体的切换动画则是 class 关联的 css 来实现
     *
     * @param $from 当前显示的元素
     * @param $to 待显示的元素
     * @param direction 切换的方向
     * @private
     */
    Router.prototype._animateElement = function($from, $to, direction) {
        // todo: 可考虑如果入参不指定，那么尝试读取 $to 的属性，再没有再使用默认的
        // 考虑读取点击的链接上指定的方向
        if (typeof direction === 'undefined') {
            direction = DIRECTION.rightToLeft;
        }

        var animPageClasses = [
            'page-from-center-to-left',
            'page-from-center-to-right',
            'page-from-right-to-center',
            'page-from-left-to-center'].join(' ');

        var classForFrom, classForTo;
        switch(direction) {
            case DIRECTION.rightToLeft:
                classForFrom = 'page-from-center-to-left';
                classForTo = 'page-from-right-to-center';
                break;
            case DIRECTION.leftToRight:
                classForFrom = 'page-from-center-to-right';
                classForTo = 'page-from-left-to-center';
                break;
            default:
                classForFrom = 'page-from-center-to-left';
                classForTo = 'page-from-right-to-center';
                break;
        }

        $from.removeClass(animPageClasses).addClass(classForFrom);
        $to.removeClass(animPageClasses).addClass(classForTo);

        $from.animationEnd(function() {
            $from.removeClass(animPageClasses);
        });
        $to.animationEnd(function() {
            $to.removeClass(animPageClasses);
        });
    };

    /**
     * 获取当前显示的第一个 section
     *
     * @returns {*}
     * @private
     */
    Router.prototype._getCurrentSection = function() {
        return this.$view.find('.' + routerConfig.curPageClass).eq(0);
    };

    /**
     * popState 事件关联着的后退处理
     *
     * 判断两个 state 判断是否是属于同一个文档，然后做对应的 section 或文档切换；
     * 同时在切换后把新 state 设为当前 state
     *
     * @param {State} state 新 state
     * @param {State} fromState 旧 state
     * @private
     */
    Router.prototype._back = function(state, fromState) {
        if (this._isTheSameDocument(state.url.full, fromState.url.full)) {
            var $newPage = $('#' + state.pageId);
            if ($newPage.length) {
                var $currentPage = this._getCurrentSection();
                this._animateSection($currentPage, $newPage, DIRECTION.leftToRight);
                this._saveAsCurrentState(state);
            } else {
                location.href = state.url.full;
            }
        } else {
            this._saveDocumentIntoCache($(document), fromState.url.full);
            this._switchToDocument(state.url.full, false, false, DIRECTION.leftToRight);
            this._saveAsCurrentState(state);
        }
    };

    /**
     * popState 事件关联着的前进处理,类似于 _back，不同的是切换方向
     *
     * @param {State} state 新 state
     * @param {State} fromState 旧 state
     * @private
     */
    Router.prototype._forward = function(state, fromState) {
        if (this._isTheSameDocument(state.url.full, fromState.url.full)) {
            var $newPage = $('#' + state.pageId);
            if ($newPage.length) {
                var $currentPage = this._getCurrentSection();
                this._animateSection($currentPage, $newPage, DIRECTION.rightToLeft);
                this._saveAsCurrentState(state);
            } else {
                location.href = state.url.full;
            }
        } else {
            this._saveDocumentIntoCache($(document), fromState.url.full);
            this._switchToDocument(state.url.full, false, false, DIRECTION.rightToLeft);
            this._saveAsCurrentState(state);
        }
    };

    /**
     * popState 事件处理
     *
     * 根据 pop 出来的 state 和当前 state 来判断是前进还是后退
     *
     * @param event
     * @private
     */
    Router.prototype._onPopState = function(event) {
        var state = event.state;
        // if not a valid state, do nothing
        if (!state || !state.pageId) {
            return;
        }

        var lastState = this._getLastState();

        if (!lastState) {
            console.error && console.error('Missing last state when backward or forward');
            return;
        }

        if (state.id === lastState.id) {
            return;
        }

        if (state.id < lastState.id) {
            this._back(state, lastState);
        } else {
            this._forward(state, lastState);
        }
    };

    /**
     * 页面进入到一个新状态
     *
     * 把新状态 push 进去，设置为当前的状态，然后把 maxState 的 id +1。
     *
     * @param {String} url 新状态的 url
     * @param {String} sectionId 新状态中显示的 section 元素的 id
     * @private
     */
    Router.prototype._pushNewState = function(url, sectionId) {
        var state = {
            id: this._getNextStateId(),
            pageId: sectionId,
            url: Util.toUrlObject(url)
        };

        theHistory.pushState(state, '', url);
        this._saveAsCurrentState(state);
        this._incMaxStateId();
    };

    /**
     * 生成一个随机的 id
     *
     * @returns {string}
     * @private
     */
    Router.prototype._generateRandomId = function() {
        return "page-" + (+new Date());
    };

    Router.prototype.dispatch = function(event) {
        var e = new CustomEvent(event, {
            bubbles: true,
            cancelable: true
        });

        //noinspection JSUnresolvedFunction
        window.dispatchEvent(e);
    };

    /**
     * 判断一个链接是否使用 router 来处理
     *
     * @param $link
     * @returns {boolean}
     */
    function isInRouterBlackList($link) {
        var classBlackList = [
            'external',
            'tab-link',
            'open-popup',
            'close-popup',
            'open-panel',
            'close-panel'
        ];

        for (var i = classBlackList.length -1 ; i >= 0; i--) {
            if ($link.hasClass(classBlackList[i])) {
                return true;
            }
        }

        var linkEle = $link.get(0);
        var linkHref = linkEle.getAttribute('href');

        var protoWhiteList = [
            'http',
            'https'
        ];

        //如果非noscheme形式的链接，且协议不是http(s)，那么路由不会处理这类链接
        if (/^(\w+):/.test(linkHref) && protoWhiteList.indexOf(RegExp.$1) < 0) {
            return true;
        }

        //noinspection RedundantIfStatementJS
        if (linkEle.hasAttribute('external')) {
            return true;
        }

        return false;
    }

    /**
     * 自定义是否执行路由功能的过滤器
     *
     * 可以在外部定义 $.config.routerFilter 函数，实参是点击链接的 Zepto 对象。
     *
     * @param $link 当前点击的链接的 Zepto 对象
     * @returns {boolean} 返回 true 表示执行路由功能，否则不做路由处理
     */
    function customClickFilter($link) {
        var customRouterFilter = $.smConfig.routerFilter;
        if ($.isFunction(customRouterFilter)) {
            var filterResult = customRouterFilter($link);
            if (typeof filterResult === 'boolean') {
                return filterResult;
            }
        }

        return true;
    }

    $(function() {
        // 用户可选关闭router功能
        if (!$.smConfig.router) {
            return;
        }

        if (!Util.supportStorage()) {
            return;
        }

        var $pages = $('.' + routerConfig.pageClass);
        if (!$pages.length) {
            var warnMsg = 'Disable router function because of no .page elements';
            if (window.console && window.console.warn) {
                console.warn(warnMsg);
            }
            return;
        }

        var router = $.router = new Router();

        $(document).on('click', 'a', function(e) {
            var $target = $(e.currentTarget);

            var filterResult = customClickFilter($target);
            if (!filterResult) {
                return;
            }

            if (isInRouterBlackList($target)) {
                return;
            }

            e.preventDefault();

            if ($target.hasClass('back')) {
                router.back();
            } else {
                var url = $target.attr('href');
                if (!url || url === '#') {
                    return;
                }

                var ignoreCache = $target.attr('data-no-cache') === 'true';

                router.load(url, ignoreCache);
            }
        });
    });
}(jQuery);

/**
 * @typedef {Object} State
 * @property {Number} id
 * @property {String} url
 * @property {String} pageId
 */

/**
 * @typedef {Object} UrlObject 字符串 url 转为的对象
 * @property {String} base url 的基本路径
 * @property {String} full url 的完整绝对路径
 * @property {String} origin 转换前的 url
 * @property {String} fragment url 的 fragment
 */

/**
 * @typedef {Object} DocumentCache
 * @property {*|HTMLElement} $doc 看做是 $(document)
 * @property {*|HTMLElement} $content $doc 里的 routerConfig.innerViewClass 元素
 */

/*======================================================
 ************   Modals   ************
 ======================================================*/
/*jshint unused: false*/
+function ($) {
    "use strict";
    $.lastPosition =function(options) {
        if ( !sessionStorage) {
            return;
        }
        // 需要记忆模块的className
        var needMemoryClass = options.needMemoryClass || [];

        $(window).off('beforePageSwitch').on('beforePageSwitch', function(event,id,arg) {
            updateMemory(id,arg);
        });
        $(window).off('pageAnimationStart').on('pageAnimationStart', function(event,id,arg) {
            getMemory(id,arg);
        });
        //让后退页面回到之前的高度
        function getMemory(id,arg){
            needMemoryClass.forEach(function(item, index) {
                if ($(item).length === 0) {
                    return;
                }
                var positionName = id ;
                // 遍历对应节点设置存储的高度
                var memoryHeight = sessionStorage.getItem(positionName);
                arg.find(item).scrollTop(parseInt(memoryHeight));

            });
        }
        //记住即将离开的页面的高度
        function updateMemory(id,arg) {
            var positionName = id ;
            // 存储需要记忆模块的高度
            needMemoryClass.forEach(function(item, index) {
                if ($(item).length === 0) {
                    return;
                }
                sessionStorage.setItem(
                    positionName,
                    arg.find(item).scrollTop()
                );

            });
        }
    };
}(jQuery);

/*jshint unused: false*/
+function($) {
    'use strict';

    var getPage = function() {
        var $page = $(".page-current");
        if (!$page[0]) $page = $(".page").addClass('page-current');
        return $page;
    };

    //初始化页面中的JS组件
    $.initPage = function(page) {
        var $page = getPage();
        if (!$page[0]) $page = $(document.body);
        var $content = $page.hasClass('content') ?
            $page :
            $page.find('.content');
        //$content.scroller();  //注意滚动条一定要最先初始化

        $.initPullToRefresh($content);
        $.initInfiniteScroll($content);
        $.initCalendar($content);

        //extend
        if ($.initSwiper) $.initSwiper($content);
    };

    if ($.smConfig.showPageLoadingIndicator) {
        //这里的 以 push 开头的是私有事件，不要用
        $(window).on('pageLoadStart', function() {
            $.showIndicator();

        });
        $(window).on('pageAnimationStart', function() {
            $.hideIndicator();
        });
        $(window).on('pageLoadCancel', function() {
            $.hideIndicator();
        });
        $(window).on('pageLoadComplete', function() {
            $.hideIndicator();
        });
        $(window).on('pageLoadError', function() {
            $.hideIndicator();
            $.toast('...');
        });
    }

    $(window).on('pageAnimationStart', function(event,id,page) {
        // 在路由切换页面动画开始前,为了把位于 .page 之外的 popup 等隐藏,此处做些处理
        $.closeModal();
        $.closePanel();
        // 如果 panel 的 effect 是 reveal 时,似乎是 page 的动画或别的样式原因导致了 transitionEnd 时间不会触发
        // 这里暂且处理一下
        $('body').removeClass('panel-closing');
        $.allowPanelOpen = true;
    });

    $(window).on('pageInit', function() {
        $.hideIndicator();
        $.lastPosition({
            needMemoryClass: [
                '.content'
            ]
        });
    });
    // safari 在后退的时候会使用缓存技术，但实现上似乎存在些问题，
    // 导致路由中绑定的点击事件不会正常如期的运行（log 和 debugger 都没法调试），
    // 从而后续的跳转等完全乱了套。
    // 所以，这里检测到是 safari 的 cache 的情况下，做一次 reload
    // 测试路径(后缀 D 表示是 document，E 表示 external，不使用路由跳转）：
    // 1. aD -> bDE
    // 2. back
    // 3. aD -> bD
    window.addEventListener('pageshow', function(event) {
        if (event.persisted) {
            location.reload();
        }
    });

    $.init = function() {
        var $page = getPage();
        $.initPage();
        var id = Boolean($page[0]) ? $page[0].id : 1;
        $page.trigger('pageInit', [id, $page]);
    };

    //DOM READY
    $(function() {
        //直接绑定
        FastClick.attach(document.body);

        if ($.smConfig.autoInit) {
            $.init();
        }

        $(document).on('pageInitInternal', function(e, id, page) {
            $.init();
        });
    });

}(jQuery);

/**
 * ScrollFix v0.1
 * http://www.joelambert.co.uk
 *
 * Copyright 2011, Joe Lambert.
 * Free to use under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 */
/* ===============================================================================
 ************   ScrollFix   ************
 =============================================================================== */

+ function($) {
    "use strict";
    //安卓微信中使用scrollfix会有问题，因此只在ios中使用，安卓机器按照原来的逻辑

    if($.device.ios){
        var ScrollFix = function(elem) {

            // Variables to track inputs
            var startY;
            var startTopScroll;

            elem = elem || document.querySelector(elem);

            // If there is no element, then do nothing
            if(!elem)
                return;

            // Handle the start of interactions
            elem.addEventListener('touchstart', function(event){
                startY = event.touches[0].pageY;
                startTopScroll = elem.scrollTop;

                if(startTopScroll <= 0)
                    elem.scrollTop = 1;

                if(startTopScroll + elem.offsetHeight >= elem.scrollHeight)
                    elem.scrollTop = elem.scrollHeight - elem.offsetHeight - 1;
            }, false);
        };

        var initScrollFix = function(){
            var prefix = $('.page-current').length > 0 ? '.page-current ' : '';
            var scrollable = $(prefix + ".content");
            new ScrollFix(scrollable[0]);
        };

        $(document).on($.touchEvents.move, ".page-current .bar",function(){
            event.preventDefault();
        });
        //监听ajax页面跳转
        $(document).on("pageLoadComplete", function(){
            initScrollFix();
        });
        //监听内联页面跳转
        $(document).on("pageAnimationEnd", function(){
            initScrollFix();
        });
        initScrollFix();
    }

}(jQuery);
/*!
 * =====================================================
 * light7 V0.4.3 - http://light7.org/
 *
 * =====================================================
 */
/**
 * Swiper 3.3.1
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 *
 * http://www.idangero.us/swiper/
 *
 * Copyright 2016, Vladimir Kharlampidi
 * The iDangero.us
 * http://www.idangero.us/
 *
 * Licensed under MIT
 *
 * Released on: February 7, 2016
 */
/* global $:true, jQuery: true, Dom7:true, Modernizr: true, DocumentTouch: true */
/* jshint unused:false */
/*jshint forin: false */
/*jshint bitwise: false*/

(function ($) {
    'use strict';
    /*===========================
    Swiper
    ===========================*/
    var defaults = {
        direction: 'horizontal',
        touchEventsTarget: 'container',
        initialSlide: 0,
        speed: 300,
        // autoplay
        autoplay: false,
        autoplayDisableOnInteraction: true,
        autoplayStopOnLast: false,
        // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).
        iOSEdgeSwipeDetection: false,
        iOSEdgeSwipeThreshold: 20,
        // Free mode
        freeMode: false,
        freeModeMomentum: true,
        freeModeMomentumRatio: 1,
        freeModeMomentumBounce: true,
        freeModeMomentumBounceRatio: 1,
        freeModeSticky: false,
        freeModeMinimumVelocity: 0.02,
        // Autoheight
        autoHeight: false,
        // Set wrapper width
        setWrapperSize: false,
        // Virtual Translate
        virtualTranslate: false,
        // Effects
        effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
        coverflow: {
            rotate: 50,
            stretch: 0,
            depth: 100,
            modifier: 1,
            slideShadows : true
        },
        flip: {
            slideShadows : true,
            limitRotation: true
        },
        cube: {
            slideShadows: true,
            shadow: true,
            shadowOffset: 20,
            shadowScale: 0.94
        },
        fade: {
            crossFade: false
        },
        // Parallax
        parallax: false,
        // Scrollbar
        scrollbar: null,
        scrollbarHide: true,
        scrollbarDraggable: false,
        scrollbarSnapOnRelease: false,
        // Keyboard Mousewheel
        keyboardControl: false,
        mousewheelControl: false,
        mousewheelReleaseOnEdges: false,
        mousewheelInvert: false,
        mousewheelForceToAxis: false,
        mousewheelSensitivity: 1,
        // Hash Navigation
        hashnav: false,
        // Breakpoints
        breakpoints: undefined,
        // Slides grid
        spaceBetween: 0,
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerColumnFill: 'column',
        slidesPerGroup: 1,
        centeredSlides: false,
        slidesOffsetBefore: 0, // in px
        slidesOffsetAfter: 0, // in px
        // Round length
        roundLengths: false,
        // Touches
        touchRatio: 1,
        touchAngle: 45,
        simulateTouch: true,
        shortSwipes: true,
        longSwipes: true,
        longSwipesRatio: 0.5,
        longSwipesMs: 300,
        followFinger: true,
        onlyExternal: false,
        threshold: 0,
        touchMoveStopPropagation: true,
        // Unique Navigation Elements
        uniqueNavElements: true,
        // Pagination
        pagination: null,
        paginationElement: 'span',
        paginationClickable: false,
        paginationHide: false,
        paginationBulletRender: null,
        paginationProgressRender: null,
        paginationFractionRender: null,
        paginationCustomRender: null,
        paginationType: 'bullets', // 'bullets' or 'progress' or 'fraction' or 'custom'
        // Resistance
        resistance: true,
        resistanceRatio: 0.85,
        // Next/prev buttons
        nextButton: null,
        prevButton: null,
        // Progress
        watchSlidesProgress: false,
        watchSlidesVisibility: false,
        // Cursor
        grabCursor: false,
        // Clicks
        preventClicks: true,
        preventClicksPropagation: true,
        slideToClickedSlide: false,
        // Lazy Loading
        lazyLoading: false,
        lazyLoadingInPrevNext: false,
        lazyLoadingInPrevNextAmount: 1,
        lazyLoadingOnTransitionStart: false,
        // Images
        preloadImages: true,
        updateOnImagesReady: true,
        // loop
        loop: false,
        loopAdditionalSlides: 0,
        loopedSlides: null,
        // Control
        control: undefined,
        controlInverse: false,
        controlBy: 'slide', //or 'container'
        // Swiping/no swiping
        allowSwipeToPrev: true,
        allowSwipeToNext: true,
        swipeHandler: null, //'.swipe-handler',
        noSwiping: true,
        noSwipingClass: 'swiper-no-swiping',
        // NS
        slideClass: 'swiper-slide',
        slideActiveClass: 'swiper-slide-active',
        slideVisibleClass: 'swiper-slide-visible',
        slideDuplicateClass: 'swiper-slide-duplicate',
        slideNextClass: 'swiper-slide-next',
        slidePrevClass: 'swiper-slide-prev',
        wrapperClass: 'swiper-wrapper',
        bulletClass: 'swiper-pagination-bullet',
        bulletActiveClass: 'swiper-pagination-bullet-active',
        buttonDisabledClass: 'swiper-button-disabled',
        paginationCurrentClass: 'swiper-pagination-current',
        paginationTotalClass: 'swiper-pagination-total',
        paginationHiddenClass: 'swiper-pagination-hidden',
        paginationProgressbarClass: 'swiper-pagination-progressbar',
        // Observer
        observer: false,
        observeParents: false,
        // Accessibility
        a11y: false,
        prevSlideMessage: 'Previous slide',
        nextSlideMessage: 'Next slide',
        firstSlideMessage: 'This is the first slide',
        lastSlideMessage: 'This is the last slide',
        paginationBulletMessage: 'Go to slide {{index}}',
        // Callbacks
        runCallbacksOnInit: true
        /*
           Callbacks:
           onInit: function (swiper)
           onDestroy: function (swiper)
           onClick: function (swiper, e)
           onTap: function (swiper, e)
           onDoubleTap: function (swiper, e)
           onSliderMove: function (swiper, e)
           onSlideChangeStart: function (swiper)
           onSlideChangeEnd: function (swiper)
           onTransitionStart: function (swiper)
           onTransitionEnd: function (swiper)
           onImagesReady: function (swiper)
           onProgress: function (swiper, progress)
           onTouchStart: function (swiper, e)
           onTouchMove: function (swiper, e)
           onTouchMoveOpposite: function (swiper, e)
           onTouchEnd: function (swiper, e)
           onReachBeginning: function (swiper)
           onReachEnd: function (swiper)
           onSetTransition: function (swiper, duration)
           onSetTranslate: function (swiper, translate)
           onAutoplayStart: function (swiper)
           onAutoplayStop: function (swiper),
           onLazyImageLoad: function (swiper, slide, image)
           onLazyImageReady: function (swiper, slide, image)
           */

    };
    var Swiper = function (container, params) {
        if (!(this instanceof Swiper)) return new Swiper(container, params);


        var initialVirtualTranslate = params && params.virtualTranslate;

        params = params || {};
        var originalParams = {};
        for (var param in params) {
            if (typeof params[param] === 'object' && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {
                originalParams[param] = {};
                for (var deepParam in params[param]) {
                    originalParams[param][deepParam] = params[param][deepParam];
                }
            }
            else {
                originalParams[param] = params[param];
            }
        }
        for (var def in defaults) {
            if (typeof params[def] === 'undefined') {
                params[def] = defaults[def];
            }
            else if (typeof params[def] === 'object') {
                for (var deepDef in defaults[def]) {
                    if (typeof params[def][deepDef] === 'undefined') {
                        params[def][deepDef] = defaults[def][deepDef];
                    }
                }
            }
        }

        // Swiper
        var s = this;

        // Params
        s.params = params;
        s.originalParams = originalParams;

        // Classname
        s.classNames = [];
        s.$ = $;

        /*=========================
          Breakpoints
          ===========================*/
        s.currentBreakpoint = undefined;
        s.getActiveBreakpoint = function () {
            //Get breakpoint for window width
            if (!s.params.breakpoints) return false;
            var breakpoint = false;
            var points = [], point;
            for ( point in s.params.breakpoints ) {
                if (s.params.breakpoints.hasOwnProperty(point)) {
                    points.push(point);
                }
            }
            points.sort(function (a, b) {
                return parseInt(a, 10) > parseInt(b, 10);
            });
            for (var i = 0; i < points.length; i++) {
                point = points[i];
                if (point >= window.innerWidth && !breakpoint) {
                    breakpoint = point;
                }
            }
            return breakpoint || 'max';
        };
        s.setBreakpoint = function () {
            //Set breakpoint for window width and update parameters
            var breakpoint = s.getActiveBreakpoint();
            if (breakpoint && s.currentBreakpoint !== breakpoint) {
                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;
                var needsReLoop = s.params.loop && (breakPointsParams.slidesPerView !== s.params.slidesPerView);
                for ( var param in breakPointsParams ) {
                    s.params[param] = breakPointsParams[param];
                }
                s.currentBreakpoint = breakpoint;
                if(needsReLoop && s.destroyLoop) {
                    s.reLoop(true);
                }
            }
        };
        // Set breakpoint on load
        if (s.params.breakpoints) {
            s.setBreakpoint();
        }

        /*=========================
          Preparation - Define Container, Wrapper and Pagination
          ===========================*/
        s.container = $(container);
        if (s.container.length === 0) return;
        if (s.container.length > 1) {
            var swipers = [];
            s.container.each(function () {
                var container = this;
                swipers.push(new Swiper(this, params));
            });
            return swipers;
        }

        // Save instance in container HTML Element and in data
        s.container[0].swiper = s;
        s.container.data('swiper', s);

        s.classNames.push('swiper-container-' + s.params.direction);

        if (s.params.freeMode) {
            s.classNames.push('swiper-container-free-mode');
        }
        if (!s.support.flexbox) {
            s.classNames.push('swiper-container-no-flexbox');
            s.params.slidesPerColumn = 1;
        }
        if (s.params.autoHeight) {
            s.classNames.push('swiper-container-autoheight');
        }
        // Enable slides progress when required
        if (s.params.parallax || s.params.watchSlidesVisibility) {
            s.params.watchSlidesProgress = true;
        }
        // Coverflow / 3D
        if (['cube', 'coverflow', 'flip'].indexOf(s.params.effect) >= 0) {
            if (s.support.transforms3d) {
                s.params.watchSlidesProgress = true;
                s.classNames.push('swiper-container-3d');
            }
            else {
                s.params.effect = 'slide';
            }
        }
        if (s.params.effect !== 'slide') {
            s.classNames.push('swiper-container-' + s.params.effect);
        }
        if (s.params.effect === 'cube') {
            s.params.resistanceRatio = 0;
            s.params.slidesPerView = 1;
            s.params.slidesPerColumn = 1;
            s.params.slidesPerGroup = 1;
            s.params.centeredSlides = false;
            s.params.spaceBetween = 0;
            s.params.virtualTranslate = true;
            s.params.setWrapperSize = false;
        }
        if (s.params.effect === 'fade' || s.params.effect === 'flip') {
            s.params.slidesPerView = 1;
            s.params.slidesPerColumn = 1;
            s.params.slidesPerGroup = 1;
            s.params.watchSlidesProgress = true;
            s.params.spaceBetween = 0;
            s.params.setWrapperSize = false;
            if (typeof initialVirtualTranslate === 'undefined') {
                s.params.virtualTranslate = true;
            }
        }

        // Grab Cursor
        if (s.params.grabCursor && s.support.touch) {
            s.params.grabCursor = false;
        }

        // Wrapper
        s.wrapper = s.container.children('.' + s.params.wrapperClass);

        // Pagination
        if (s.params.pagination) {
            s.paginationContainer = $(s.params.pagination);
            if (s.params.uniqueNavElements && typeof s.params.pagination === 'string' && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {
                s.paginationContainer = s.container.find(s.params.pagination);
            }

            if (s.params.paginationType === 'bullets' && s.params.paginationClickable) {
                s.paginationContainer.addClass('swiper-pagination-clickable');
            }
            else {
                s.params.paginationClickable = false;
            }
            s.paginationContainer.addClass('swiper-pagination-' + s.params.paginationType);
        }
        // Next/Prev Buttons
        if (s.params.nextButton || s.params.prevButton) {
            if (s.params.nextButton) {
                s.nextButton = $(s.params.nextButton);
                if (s.params.uniqueNavElements && typeof s.params.nextButton === 'string' && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {
                    s.nextButton = s.container.find(s.params.nextButton);
                }
            }
            if (s.params.prevButton) {
                s.prevButton = $(s.params.prevButton);
                if (s.params.uniqueNavElements && typeof s.params.prevButton === 'string' && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {
                    s.prevButton = s.container.find(s.params.prevButton);
                }
            }
        }

        // Is Horizontal
        s.isHorizontal = function () {
            return s.params.direction === 'horizontal';
        };
        // s.isH = isH;

        // RTL
        s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');
        if (s.rtl) {
            s.classNames.push('swiper-container-rtl');
        }

        // Wrong RTL support
        if (s.rtl) {
            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';
        }

        // Columns
        if (s.params.slidesPerColumn > 1) {
            s.classNames.push('swiper-container-multirow');
        }

        // Check for Android
        if (s.device.android) {
            s.classNames.push('swiper-container-android');
        }

        // Add classes
        s.container.addClass(s.classNames.join(' '));

        // Translate
        s.translate = 0;

        // Progress
        s.progress = 0;

        // Velocity
        s.velocity = 0;

        /*=========================
          Locks, unlocks
          ===========================*/
        s.lockSwipeToNext = function () {
            s.params.allowSwipeToNext = false;
        };
        s.lockSwipeToPrev = function () {
            s.params.allowSwipeToPrev = false;
        };
        s.lockSwipes = function () {
            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;
        };
        s.unlockSwipeToNext = function () {
            s.params.allowSwipeToNext = true;
        };
        s.unlockSwipeToPrev = function () {
            s.params.allowSwipeToPrev = true;
        };
        s.unlockSwipes = function () {
            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;
        };

        /*=========================
          Round helper
          ===========================*/
        function round(a) {
            return Math.floor(a);
        }
        /*=========================
          Set grab cursor
          ===========================*/
        if (s.params.grabCursor) {
            s.container[0].style.cursor = 'move';
            s.container[0].style.cursor = '-webkit-grab';
            s.container[0].style.cursor = '-moz-grab';
            s.container[0].style.cursor = 'grab';
        }
        /*=========================
          Update on Images Ready
          ===========================*/
        s.imagesToLoad = [];
        s.imagesLoaded = 0;

        s.loadImage = function (imgElement, src, srcset, checkForComplete, callback) {
            var image;
            function onReady () {
                if (callback) callback();
            }
            if (!imgElement.complete || !checkForComplete) {
                if (src) {
                    image = new window.Image();
                    image.onload = onReady;
                    image.onerror = onReady;
                    if (srcset) {
                        image.srcset = srcset;
                    }
                    if (src) {
                        image.src = src;
                    }
                } else {
                    onReady();
                }

            } else {//image already loaded...
                onReady();
            }
        };
        s.preloadImages = function () {
            s.imagesToLoad = s.container.find('img');
            function _onReady() {
                if (typeof s === 'undefined' || s === null) return;
                if (s.imagesLoaded !== undefined) s.imagesLoaded++;
                if (s.imagesLoaded === s.imagesToLoad.length) {
                    if (s.params.updateOnImagesReady) s.update();
                    s.emit('onImagesReady', s);
                }
            }
            for (var i = 0; i < s.imagesToLoad.length; i++) {
                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), true, _onReady);
            }
        };

        /*=========================
          Autoplay
          ===========================*/
        s.autoplayTimeoutId = undefined;
        s.autoplaying = false;
        s.autoplayPaused = false;
        function autoplay() {
            s.autoplayTimeoutId = setTimeout(function () {
                if (s.params.loop) {
                    s.fixLoop();
                    s._slideNext();
                    s.emit('onAutoplay', s);
                }
                else {
                    if (!s.isEnd) {
                        s._slideNext();
                        s.emit('onAutoplay', s);
                    }
                    else {
                        if (!params.autoplayStopOnLast) {
                            s._slideTo(0);
                            s.emit('onAutoplay', s);
                        }
                        else {
                            s.stopAutoplay();
                        }
                    }
                }
            }, s.params.autoplay);
        }
        s.startAutoplay = function () {
            if (typeof s.autoplayTimeoutId !== 'undefined') return false;
            if (!s.params.autoplay) return false;
            if (s.autoplaying) return false;
            s.autoplaying = true;
            s.emit('onAutoplayStart', s);
            autoplay();
        };
        s.stopAutoplay = function (internal) {
            if (!s.autoplayTimeoutId) return;
            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
            s.autoplaying = false;
            s.autoplayTimeoutId = undefined;
            s.emit('onAutoplayStop', s);
        };
        s.pauseAutoplay = function (speed) {
            if (s.autoplayPaused) return;
            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);
            s.autoplayPaused = true;
            if (speed === 0) {
                s.autoplayPaused = false;
                autoplay();
            }
            else {
                s.wrapper.transitionEnd(function () {
                    if (!s) return;
                    s.autoplayPaused = false;
                    if (!s.autoplaying) {
                        s.stopAutoplay();
                    }
                    else {
                        autoplay();
                    }
                });
            }
        };
        /*=========================
          Min/Max Translate
          ===========================*/
        s.minTranslate = function () {
            return (-s.snapGrid[0]);
        };
        s.maxTranslate = function () {
            return (-s.snapGrid[s.snapGrid.length - 1]);
        };
        /*=========================
          Slider/slides sizes
          ===========================*/
        s.updateAutoHeight = function () {
            // Update Height
            var slide = s.slides.eq(s.activeIndex)[0];
            if (typeof slide !== 'undefined') {
                var newHeight = slide.offsetHeight;
                if (newHeight) s.wrapper.css('height', newHeight + 'px');
            }
        };
        s.updateContainerSize = function () {
            var width, height;
            if (typeof s.params.width !== 'undefined') {
                width = s.params.width;
            }
            else {
                width = s.container[0].clientWidth;
            }
            if (typeof s.params.height !== 'undefined') {
                height = s.params.height;
            }
            else {
                height = s.container[0].clientHeight;
            }
            if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {
                return;
            }

            //Subtract paddings
            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);
            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);

            // Store values
            s.width = width;
            s.height = height;
            s.size = s.isHorizontal() ? s.width : s.height;
        };

        s.updateSlidesSize = function () {
            s.slides = s.wrapper.children('.' + s.params.slideClass);
            s.snapGrid = [];
            s.slidesGrid = [];
            s.slidesSizesGrid = [];

            var spaceBetween = s.params.spaceBetween,
                slidePosition = -s.params.slidesOffsetBefore,
                i,
                prevSlideSize = 0,
                index = 0;
            if (typeof s.size === 'undefined') return;
            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;
            }

            s.virtualSize = -spaceBetween;
            // reset margins
            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});
            else s.slides.css({marginRight: '', marginBottom: ''});

            var slidesNumberEvenToRows;
            if (s.params.slidesPerColumn > 1) {
                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {
                    slidesNumberEvenToRows = s.slides.length;
                }
                else {
                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;
                }
                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {
                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);
                }
            }

            // Calc slides
            var slideSize;
            var slidesPerColumn = s.params.slidesPerColumn;
            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);
            for (i = 0; i < s.slides.length; i++) {
                slideSize = 0;
                var slide = s.slides.eq(i);
                if (s.params.slidesPerColumn > 1) {
                    // Set slides order
                    var newSlideOrderIndex;
                    var column, row;
                    if (s.params.slidesPerColumnFill === 'column') {
                        column = Math.floor(i / slidesPerColumn);
                        row = i - column * slidesPerColumn;
                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {
                            if (++row >= slidesPerColumn) {
                                row = 0;
                                column++;
                            }
                        }
                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
                        slide
                            .css({
                                '-webkit-box-ordinal-group': newSlideOrderIndex,
                                '-moz-box-ordinal-group': newSlideOrderIndex,
                                '-ms-flex-order': newSlideOrderIndex,
                                '-webkit-order': newSlideOrderIndex,
                                'order': newSlideOrderIndex
                            });
                    }
                    else {
                        row = Math.floor(i / slidesPerRow);
                        column = i - row * slidesPerRow;
                    }
                    slide
                        .css({
                            'margin-top': (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')
                        })
                        .attr('data-swiper-column', column)
                        .attr('data-swiper-row', row);

                }
                if (slide.css('display') === 'none') continue;
                if (s.params.slidesPerView === 'auto') {
                    slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
                    if (s.params.roundLengths) slideSize = round(slideSize);
                }
                else {
                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;
                    if (s.params.roundLengths) slideSize = round(slideSize);

                    if (s.isHorizontal()) {
                        s.slides[i].style.width = slideSize + 'px';
                    }
                    else {
                        s.slides[i].style.height = slideSize + 'px';
                    }
                }
                s.slides[i].swiperSlideSize = slideSize;
                s.slidesSizesGrid.push(slideSize);


                if (s.params.centeredSlides) {
                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;
                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;
                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                    s.slidesGrid.push(slidePosition);
                }
                else {
                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);
                    s.slidesGrid.push(slidePosition);
                    slidePosition = slidePosition + slideSize + spaceBetween;
                }

                s.virtualSize += slideSize + spaceBetween;

                prevSlideSize = slideSize;

                index ++;
            }
            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;
            var newSlidesGrid;

            if (
                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {
                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
            }
            if (!s.support.flexbox || s.params.setWrapperSize) {
                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});
            }

            if (s.params.slidesPerColumn > 1) {
                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;
                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;
                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
                if (s.params.centeredSlides) {
                    newSlidesGrid = [];
                    for (i = 0; i < s.snapGrid.length; i++) {
                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);
                    }
                    s.snapGrid = newSlidesGrid;
                }
            }

            // Remove last grid elements depending on width
            if (!s.params.centeredSlides) {
                newSlidesGrid = [];
                for (i = 0; i < s.snapGrid.length; i++) {
                    if (s.snapGrid[i] <= s.virtualSize - s.size) {
                        newSlidesGrid.push(s.snapGrid[i]);
                    }
                }
                s.snapGrid = newSlidesGrid;
                if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {
                    s.snapGrid.push(s.virtualSize - s.size);
                }
            }
            if (s.snapGrid.length === 0) s.snapGrid = [0];

            if (s.params.spaceBetween !== 0) {
                if (s.isHorizontal()) {
                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});
                    else s.slides.css({marginRight: spaceBetween + 'px'});
                }
                else s.slides.css({marginBottom: spaceBetween + 'px'});
            }
            if (s.params.watchSlidesProgress) {
                s.updateSlidesOffset();
            }
        };
        s.updateSlidesOffset = function () {
            for (var i = 0; i < s.slides.length; i++) {
                s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;
            }
        };

        /*=========================
          Slider/slides progress
          ===========================*/
        s.updateSlidesProgress = function (translate) {
            if (typeof translate === 'undefined') {
                translate = s.translate || 0;
            }
            if (s.slides.length === 0) return;
            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();

            var offsetCenter = -translate;
            if (s.rtl) offsetCenter = translate;

            // Visible Slides
            s.slides.removeClass(s.params.slideVisibleClass);
            for (var i = 0; i < s.slides.length; i++) {
                var slide = s.slides[i];
                var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);
                if (s.params.watchSlidesVisibility) {
                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
                    var slideAfter = slideBefore + s.slidesSizesGrid[i];
                    var isVisible =
                        (slideBefore >= 0 && slideBefore < s.size) ||
                        (slideAfter > 0 && slideAfter <= s.size) ||
                        (slideBefore <= 0 && slideAfter >= s.size);
                    if (isVisible) {
                        s.slides.eq(i).addClass(s.params.slideVisibleClass);
                    }
                }
                slide.progress = s.rtl ? -slideProgress : slideProgress;
            }
        };
        s.updateProgress = function (translate) {
            if (typeof translate === 'undefined') {
                translate = s.translate || 0;
            }
            var translatesDiff = s.maxTranslate() - s.minTranslate();
            var wasBeginning = s.isBeginning;
            var wasEnd = s.isEnd;
            if (translatesDiff === 0) {
                s.progress = 0;
                s.isBeginning = s.isEnd = true;
            }
            else {
                s.progress = (translate - s.minTranslate()) / (translatesDiff);
                s.isBeginning = s.progress <= 0;
                s.isEnd = s.progress >= 1;
            }
            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);
            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);

            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);
            s.emit('onProgress', s, s.progress);
        };
        s.updateActiveIndex = function () {
            var translate = s.rtl ? s.translate : -s.translate;
            var newActiveIndex, i, snapIndex;
            for (i = 0; i < s.slidesGrid.length; i ++) {
                if (typeof s.slidesGrid[i + 1] !== 'undefined') {
                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {
                        newActiveIndex = i;
                    }
                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {
                        newActiveIndex = i + 1;
                    }
                }
                else {
                    if (translate >= s.slidesGrid[i]) {
                        newActiveIndex = i;
                    }
                }
            }
            // Normalize slideIndex
            if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;
            // for (i = 0; i < s.slidesGrid.length; i++) {
            // if (- translate >= s.slidesGrid[i]) {
            // newActiveIndex = i;
            // }
            // }
            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);
            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;

            if (newActiveIndex === s.activeIndex) {
                return;
            }
            s.snapIndex = snapIndex;
            s.previousIndex = s.activeIndex;
            s.activeIndex = newActiveIndex;
            s.updateClasses();
        };

        /*=========================
          Classes
          ===========================*/
        s.updateClasses = function () {
            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);
            var activeSlide = s.slides.eq(s.activeIndex);
            // Active classes
            activeSlide.addClass(s.params.slideActiveClass);
            // Next Slide
            var nextSlide = activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);
            if (s.params.loop && nextSlide.length === 0) {
                s.slides.eq(0).addClass(s.params.slideNextClass);
            }
            // Prev Slide
            var prevSlide = activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);
            if (s.params.loop && prevSlide.length === 0) {
                s.slides.eq(-1).addClass(s.params.slidePrevClass);
            }

            // Pagination
            if (s.paginationContainer && s.paginationContainer.length > 0) {
                // Current/Total
                var current,
                    total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                if (s.params.loop) {
                    current = Math.ceil((s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup);
                    if (current > s.slides.length - 1 - s.loopedSlides * 2) {
                        current = current - (s.slides.length - s.loopedSlides * 2);
                    }
                    if (current > total - 1) current = current - total;
                    if (current < 0 && s.params.paginationType !== 'bullets') current = total + current;
                }
                else {
                    if (typeof s.snapIndex !== 'undefined') {
                        current = s.snapIndex;
                    }
                    else {
                        current = s.activeIndex || 0;
                    }
                }
                // Types
                if (s.params.paginationType === 'bullets' && s.bullets && s.bullets.length > 0) {
                    s.bullets.removeClass(s.params.bulletActiveClass);
                    if (s.paginationContainer.length > 1) {
                        s.bullets.each(function () {
                            if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass);
                        });
                    }
                    else {
                        s.bullets.eq(current).addClass(s.params.bulletActiveClass);
                    }
                }
                if (s.params.paginationType === 'fraction') {
                    s.paginationContainer.find('.' + s.params.paginationCurrentClass).text(current + 1);
                    s.paginationContainer.find('.' + s.params.paginationTotalClass).text(total);
                }
                if (s.params.paginationType === 'progress') {
                    var scale = (current + 1) / total,
                        scaleX = scale,
                        scaleY = 1;
                    if (!s.isHorizontal()) {
                        scaleY = scale;
                        scaleX = 1;
                    }
                    s.paginationContainer.find('.' + s.params.paginationProgressbarClass).transform('translate3d(0,0,0) scaleX(' + scaleX + ') scaleY(' + scaleY + ')').transition(s.params.speed);
                }
                if (s.params.paginationType === 'custom' && s.params.paginationCustomRender) {
                    s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));
                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);
                }
            }

            // Next/active buttons
            if (!s.params.loop) {
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    if (s.isBeginning) {
                        s.prevButton.addClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton);
                    }
                    else {
                        s.prevButton.removeClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton);
                    }
                }
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    if (s.isEnd) {
                        s.nextButton.addClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton);
                    }
                    else {
                        s.nextButton.removeClass(s.params.buttonDisabledClass);
                        if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton);
                    }
                }
            }
        };

        /*=========================
          Pagination
          ===========================*/
        s.updatePagination = function () {
            if (!s.params.pagination) return;
            if (s.paginationContainer && s.paginationContainer.length > 0) {
                var paginationHTML = '';
                if (s.params.paginationType === 'bullets') {
                    var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
                    for (var i = 0; i < numberOfBullets; i++) {
                        if (s.params.paginationBulletRender) {
                            paginationHTML += s.params.paginationBulletRender(i, s.params.bulletClass);
                        }
                        else {
                            paginationHTML += '<' + s.params.paginationElement+' class="' + s.params.bulletClass + '"></' + s.params.paginationElement + '>';
                        }
                    }
                    s.paginationContainer.html(paginationHTML);
                    s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);
                    if (s.params.paginationClickable && s.params.a11y && s.a11y) {
                        s.a11y.initPagination();
                    }
                }
                if (s.params.paginationType === 'fraction') {
                    if (s.params.paginationFractionRender) {
                        paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass);
                    }
                    else {
                        paginationHTML =
                            '<span class="' + s.params.paginationCurrentClass + '"></span>' +
                            ' / ' +
                            '<span class="' + s.params.paginationTotalClass+'"></span>';
                    }
                    s.paginationContainer.html(paginationHTML);
                }
                if (s.params.paginationType === 'progress') {
                    if (s.params.paginationProgressRender) {
                        paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass);
                    }
                    else {
                        paginationHTML = '<span class="' + s.params.paginationProgressbarClass + '"></span>';
                    }
                    s.paginationContainer.html(paginationHTML);
                }
                if (s.params.paginationType !== 'custom') {
                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);
                }
            }
        };
        /*=========================
          Common update method
          ===========================*/
        s.update = function (updateTranslate) {
            s.updateContainerSize();
            s.updateSlidesSize();
            s.updateProgress();
            s.updatePagination();
            s.updateClasses();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
            }
            function forceSetTranslate() {
                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                s.setWrapperTranslate(newTranslate);
                s.updateActiveIndex();
                s.updateClasses();
            }
            if (updateTranslate) {
                var translated, newTranslate;
                if (s.controller && s.controller.spline) {
                    s.controller.spline = undefined;
                }
                if (s.params.freeMode) {
                    forceSetTranslate();
                    if (s.params.autoHeight) {
                        s.updateAutoHeight();
                    }
                }
                else {
                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                        translated = s.slideTo(s.slides.length - 1, 0, false, true);
                    }
                    else {
                        translated = s.slideTo(s.activeIndex, 0, false, true);
                    }
                    if (!translated) {
                        forceSetTranslate();
                    }
                }
            }
            else if (s.params.autoHeight) {
                s.updateAutoHeight();
            }
        };

        /*=========================
          Resize Handler
          ===========================*/
        s.onResize = function (forceUpdatePagination) {
            //Breakpoints
            if (s.params.breakpoints) {
                s.setBreakpoint();
            }

            // Disable locks on resize
            var allowSwipeToPrev = s.params.allowSwipeToPrev;
            var allowSwipeToNext = s.params.allowSwipeToNext;
            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;

            s.updateContainerSize();
            s.updateSlidesSize();
            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
            }
            if (s.controller && s.controller.spline) {
                s.controller.spline = undefined;
            }
            var slideChangedBySlideTo = false;
            if (s.params.freeMode) {
                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
                s.setWrapperTranslate(newTranslate);
                s.updateActiveIndex();
                s.updateClasses();

                if (s.params.autoHeight) {
                    s.updateAutoHeight();
                }
            }
            else {
                s.updateClasses();
                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
                    slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true);
                }
                else {
                    slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true);
                }
            }
            if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {
                s.lazy.load();
            }
            // Return locks after resize
            s.params.allowSwipeToPrev = allowSwipeToPrev;
            s.params.allowSwipeToNext = allowSwipeToNext;
        };

        /*=========================
          Events
          ===========================*/

        //Define Touch Events
        var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];
        if (window.navigator.pointerEnabled) desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];
        else if (window.navigator.msPointerEnabled) desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];
        s.touchEvents = {
            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : desktopEvents[0],
            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],
            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]
        };


        // WP8 Touch Events Fix
        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {
            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);
        }

        // Attach/detach events
        s.initEvents = function (detach) {
            var actionDom = detach ? 'off' : 'on';
            var action = detach ? 'removeEventListener' : 'addEventListener';
            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];
            var target = s.support.touch ? touchEventsTarget : document;

            var moveCapture = s.params.nested ? true : false;

            //Touch Events
            if (s.browser.ie) {
                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                target[action](s.touchEvents.end, s.onTouchEnd, false);
            }
            else {
                if (s.support.touch) {
                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);
                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);
                }
                if (params.simulateTouch && !s.device.ios && !s.device.android) {
                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);
                    document[action]('mousemove', s.onTouchMove, moveCapture);
                    document[action]('mouseup', s.onTouchEnd, false);
                }
            }
            window[action]('resize', s.onResize);

            // Next, Prev, Index
            if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                s.nextButton[actionDom]('click', s.onClickNext);
                if (s.params.a11y && s.a11y) s.nextButton[actionDom]('keydown', s.a11y.onEnterKey);
            }
            if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                s.prevButton[actionDom]('click', s.onClickPrev);
                if (s.params.a11y && s.a11y) s.prevButton[actionDom]('keydown', s.a11y.onEnterKey);
            }
            if (s.params.pagination && s.params.paginationClickable) {
                s.paginationContainer[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);
                if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);
            }

            // Prevent Links Clicks
            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);
        };
        s.attachEvents = function () {
            s.initEvents();
        };
        s.detachEvents = function () {
            s.initEvents(true);
        };

        /*=========================
          Handle Clicks
          ===========================*/
        // Prevent Clicks
        s.allowClick = true;
        s.preventClicks = function (e) {
            if (!s.allowClick) {
                if (s.params.preventClicks) e.preventDefault();
                if (s.params.preventClicksPropagation && s.animating) {
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                }
            }
        };
        // Clicks
        s.onClickNext = function (e) {
            e.preventDefault();
            if (s.isEnd && !s.params.loop) return;
            s.slideNext();
        };
        s.onClickPrev = function (e) {
            e.preventDefault();
            if (s.isBeginning && !s.params.loop) return;
            s.slidePrev();
        };
        s.onClickIndex = function (e) {
            e.preventDefault();
            var index = $(this).index() * s.params.slidesPerGroup;
            if (s.params.loop) index = index + s.loopedSlides;
            s.slideTo(index);
        };

        /*=========================
          Handle Touches
          ===========================*/
        function findElementInEvent(e, selector) {
            var el = $(e.target);
            if (!el.is(selector)) {
                if (typeof selector === 'string') {
                    el = el.parents(selector);
                }
                else if (selector.nodeType) {
                    var found;
                    el.parents().each(function (index, _el) {
                        if (_el === selector) found = selector;
                    });
                    if (!found) return undefined;
                    else return selector;
                }
            }
            if (el.length === 0) {
                return undefined;
            }
            return el[0];
        }
        s.updateClickedSlide = function (e) {
            var slide = findElementInEvent(e, '.' + s.params.slideClass);
            var slideFound = false;
            if (slide) {
                for (var i = 0; i < s.slides.length; i++) {
                    if (s.slides[i] === slide) slideFound = true;
                }
            }

            if (slide && slideFound) {
                s.clickedSlide = slide;
                s.clickedIndex = $(slide).index();
            }
            else {
                s.clickedSlide = undefined;
                s.clickedIndex = undefined;
                return;
            }
            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {
                var slideToIndex = s.clickedIndex,
                    realIndex,
                    duplicatedSlides;
                if (s.params.loop) {
                    if (s.animating) return;
                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');
                    if (s.params.centeredSlides) {
                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {
                            s.fixLoop();
                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.swiper-slide-duplicate)').eq(0).index();
                            setTimeout(function () {
                                s.slideTo(slideToIndex);
                            }, 0);
                        }
                        else {
                            s.slideTo(slideToIndex);
                        }
                    }
                    else {
                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {
                            s.fixLoop();
                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.swiper-slide-duplicate)').eq(0).index();
                            setTimeout(function () {
                                s.slideTo(slideToIndex);
                            }, 0);
                        }
                        else {
                            s.slideTo(slideToIndex);
                        }
                    }
                }
                else {
                    s.slideTo(slideToIndex);
                }
            }
        };

        var isTouched,
            isMoved,
            allowTouchCallbacks,
            touchStartTime,
            isScrolling,
            currentTranslate,
            startTranslate,
            allowThresholdMove,
            // Form elements to match
            formElements = 'input, select, textarea, button',
            // Last click time
            lastClickTime = Date.now(), clickTimeout,
            //Velocities
            velocities = [],
            allowMomentumBounce;

        // Animating Flag
        s.animating = false;

        // Touches information
        s.touches = {
            startX: 0,
            startY: 0,
            currentX: 0,
            currentY: 0,
            diff: 0
        };

        // Touch handlers
        var isTouchEvent, startMoving;
        s.onTouchStart = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            isTouchEvent = e.type === 'touchstart';
            if (!isTouchEvent && 'which' in e && e.which === 3) return;
            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {
                s.allowClick = true;
                return;
            }
            if (s.params.swipeHandler) {
                if (!findElementInEvent(e, s.params.swipeHandler)) return;
            }

            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;

            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore
            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {
                return;
            }

            isTouched = true;
            isMoved = false;
            allowTouchCallbacks = true;
            isScrolling = undefined;
            startMoving = undefined;
            s.touches.startX = startX;
            s.touches.startY = startY;
            touchStartTime = Date.now();
            s.allowClick = true;
            s.updateContainerSize();
            s.swipeDirection = undefined;
            if (s.params.threshold > 0) allowThresholdMove = false;
            if (e.type !== 'touchstart') {
                var preventDefault = true;
                if ($(e.target).is(formElements)) preventDefault = false;
                if (document.activeElement && $(document.activeElement).is(formElements)) {
                    document.activeElement.blur();
                }
                if (preventDefault) {
                    e.preventDefault();
                }
            }
            s.emit('onTouchStart', s, e);
        };

        s.onTouchMove = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            if (isTouchEvent && e.type === 'mousemove') return;
            if (e.preventedByNestedSwiper) {
                s.touches.startX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                s.touches.startY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                return;
            }
            if (s.params.onlyExternal) {
                // isMoved = true;
                s.allowClick = false;
                if (isTouched) {
                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                    touchStartTime = Date.now();
                }
                return;
            }
            if (isTouchEvent && document.activeElement) {
                if (e.target === document.activeElement && $(e.target).is(formElements)) {
                    isMoved = true;
                    s.allowClick = false;
                    return;
                }
            }
            if (allowTouchCallbacks) {
                s.emit('onTouchMove', s, e);
            }
            if (e.targetTouches && e.targetTouches.length > 1) return;

            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

            if (typeof isScrolling === 'undefined') {
                var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;
                isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);
            }
            if (isScrolling) {
                s.emit('onTouchMoveOpposite', s, e);
            }
            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {
                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {
                    startMoving = true;
                }
            }
            if (!isTouched) return;
            if (isScrolling)  {
                isTouched = false;
                return;
            }
            if (!startMoving && s.browser.ieTouch) {
                return;
            }
            s.allowClick = false;
            s.emit('onSliderMove', s, e);
            e.preventDefault();
            if (s.params.touchMoveStopPropagation && !s.params.nested) {
                e.stopPropagation();
            }

            if (!isMoved) {
                if (params.loop) {
                    s.fixLoop();
                }
                startTranslate = s.getWrapperTranslate();
                s.setWrapperTransition(0);
                if (s.animating) {
                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');
                }
                if (s.params.autoplay && s.autoplaying) {
                    if (s.params.autoplayDisableOnInteraction) {
                        s.stopAutoplay();
                    }
                    else {
                        s.pauseAutoplay();
                    }
                }
                allowMomentumBounce = false;
                //Grab Cursor
                if (s.params.grabCursor) {
                    s.container[0].style.cursor = 'move';
                    s.container[0].style.cursor = '-webkit-grabbing';
                    s.container[0].style.cursor = '-moz-grabbin';
                    s.container[0].style.cursor = 'grabbing';
                }
            }
            isMoved = true;

            var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;

            diff = diff * s.params.touchRatio;
            if (s.rtl) diff = -diff;

            s.swipeDirection = diff > 0 ? 'prev' : 'next';
            currentTranslate = diff + startTranslate;

            var disableParentSwiper = true;
            if ((diff > 0 && currentTranslate > s.minTranslate())) {
                disableParentSwiper = false;
                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);
            }
            else if (diff < 0 && currentTranslate < s.maxTranslate()) {
                disableParentSwiper = false;
                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);
            }

            if (disableParentSwiper) {
                e.preventedByNestedSwiper = true;
            }

            // Directions locks
            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {
                currentTranslate = startTranslate;
            }
            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {
                currentTranslate = startTranslate;
            }

            if (!s.params.followFinger) return;

            // Threshold
            if (s.params.threshold > 0) {
                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {
                    if (!allowThresholdMove) {
                        allowThresholdMove = true;
                        s.touches.startX = s.touches.currentX;
                        s.touches.startY = s.touches.currentY;
                        currentTranslate = startTranslate;
                        s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
                        return;
                    }
                }
                else {
                    currentTranslate = startTranslate;
                    return;
                }
            }
            // Update active index in free mode
            if (s.params.freeMode || s.params.watchSlidesProgress) {
                s.updateActiveIndex();
            }
            if (s.params.freeMode) {
                //Velocity
                if (velocities.length === 0) {
                    velocities.push({
                        position: s.touches[s.isHorizontal() ? 'startX' : 'startY'],
                        time: touchStartTime
                    });
                }
                velocities.push({
                    position: s.touches[s.isHorizontal() ? 'currentX' : 'currentY'],
                    time: (new window.Date()).getTime()
                });
            }
            // Update progress
            s.updateProgress(currentTranslate);
            // Update translate
            s.setWrapperTranslate(currentTranslate);
        };
        s.onTouchEnd = function (e) {
            if (e.originalEvent) e = e.originalEvent;
            if (allowTouchCallbacks) {
                s.emit('onTouchEnd', s, e);
            }
            allowTouchCallbacks = false;
            if (!isTouched) return;
            //Return Grab Cursor
            if (s.params.grabCursor && isMoved && isTouched) {
                s.container[0].style.cursor = 'move';
                s.container[0].style.cursor = '-webkit-grab';
                s.container[0].style.cursor = '-moz-grab';
                s.container[0].style.cursor = 'grab';
            }

            // Time diff
            var touchEndTime = Date.now();
            var timeDiff = touchEndTime - touchStartTime;

            // Tap, doubleTap, Click
            if (s.allowClick) {
                s.updateClickedSlide(e);
                s.emit('onTap', s, e);
                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {
                    if (clickTimeout) clearTimeout(clickTimeout);
                    clickTimeout = setTimeout(function () {
                        if (!s) return;
                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {
                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);
                        }
                        s.emit('onClick', s, e);
                    }, 300);

                }
                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {
                    if (clickTimeout) clearTimeout(clickTimeout);
                    s.emit('onDoubleTap', s, e);
                }
            }

            lastClickTime = Date.now();
            setTimeout(function () {
                if (s) s.allowClick = true;
            }, 0);

            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {
                isTouched = isMoved = false;
                return;
            }
            isTouched = isMoved = false;

            var currentPos;
            if (s.params.followFinger) {
                currentPos = s.rtl ? s.translate : -s.translate;
            }
            else {
                currentPos = -currentTranslate;
            }
            if (s.params.freeMode) {
                if (currentPos < -s.minTranslate()) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                else if (currentPos > -s.maxTranslate()) {
                    if (s.slides.length < s.snapGrid.length) {
                        s.slideTo(s.snapGrid.length - 1);
                    }
                    else {
                        s.slideTo(s.slides.length - 1);
                    }
                    return;
                }

                if (s.params.freeModeMomentum) {
                    if (velocities.length > 1) {
                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();

                        var distance = lastMoveEvent.position - velocityEvent.position;
                        var time = lastMoveEvent.time - velocityEvent.time;
                        s.velocity = distance / time;
                        s.velocity = s.velocity / 2;
                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {
                            s.velocity = 0;
                        }
                        // this implies that the user stopped moving a finger then released.
                        // There would be no events with distance zero, so the last event is stale.
                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {
                            s.velocity = 0;
                        }
                    } else {
                        s.velocity = 0;
                    }

                    velocities.length = 0;
                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;
                    var momentumDistance = s.velocity * momentumDuration;

                    var newPosition = s.translate + momentumDistance;
                    if (s.rtl) newPosition = - newPosition;
                    var doBounce = false;
                    var afterBouncePosition;
                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;
                    if (newPosition < s.maxTranslate()) {
                        if (s.params.freeModeMomentumBounce) {
                            if (newPosition + s.maxTranslate() < -bounceAmount) {
                                newPosition = s.maxTranslate() - bounceAmount;
                            }
                            afterBouncePosition = s.maxTranslate();
                            doBounce = true;
                            allowMomentumBounce = true;
                        }
                        else {
                            newPosition = s.maxTranslate();
                        }
                    }
                    else if (newPosition > s.minTranslate()) {
                        if (s.params.freeModeMomentumBounce) {
                            if (newPosition - s.minTranslate() > bounceAmount) {
                                newPosition = s.minTranslate() + bounceAmount;
                            }
                            afterBouncePosition = s.minTranslate();
                            doBounce = true;
                            allowMomentumBounce = true;
                        }
                        else {
                            newPosition = s.minTranslate();
                        }
                    }
                    else if (s.params.freeModeSticky) {
                        var j = 0,
                            nextSlide;
                        for (j = 0; j < s.snapGrid.length; j += 1) {
                            if (s.snapGrid[j] > -newPosition) {
                                nextSlide = j;
                                break;
                            }

                        }
                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {
                            newPosition = s.snapGrid[nextSlide];
                        } else {
                            newPosition = s.snapGrid[nextSlide - 1];
                        }
                        if (!s.rtl) newPosition = - newPosition;
                    }
                    //Fix duration
                    if (s.velocity !== 0) {
                        if (s.rtl) {
                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);
                        }
                        else {
                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);
                        }
                    }
                    else if (s.params.freeModeSticky) {
                        s.slideReset();
                        return;
                    }

                    if (s.params.freeModeMomentumBounce && doBounce) {
                        s.updateProgress(afterBouncePosition);
                        s.setWrapperTransition(momentumDuration);
                        s.setWrapperTranslate(newPosition);
                        s.onTransitionStart();
                        s.animating = true;
                        s.wrapper.transitionEnd(function () {
                            if (!s || !allowMomentumBounce) return;
                            s.emit('onMomentumBounce', s);

                            s.setWrapperTransition(s.params.speed);
                            s.setWrapperTranslate(afterBouncePosition);
                            s.wrapper.transitionEnd(function () {
                                if (!s) return;
                                s.onTransitionEnd();
                            });
                        });
                    } else if (s.velocity) {
                        s.updateProgress(newPosition);
                        s.setWrapperTransition(momentumDuration);
                        s.setWrapperTranslate(newPosition);
                        s.onTransitionStart();
                        if (!s.animating) {
                            s.animating = true;
                            s.wrapper.transitionEnd(function () {
                                if (!s) return;
                                s.onTransitionEnd();
                            });
                        }

                    } else {
                        s.updateProgress(newPosition);
                    }

                    s.updateActiveIndex();
                }
                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {
                    s.updateProgress();
                    s.updateActiveIndex();
                }
                return;
            }

            // Find current slide
            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];
            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {
                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {
                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {
                        stopIndex = i;
                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];
                    }
                }
                else {
                    if (currentPos >= s.slidesGrid[i]) {
                        stopIndex = i;
                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];
                    }
                }
            }

            // Find current slide size
            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;

            if (timeDiff > s.params.longSwipesMs) {
                // Long touches
                if (!s.params.longSwipes) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                if (s.swipeDirection === 'next') {
                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);
                    else s.slideTo(stopIndex);

                }
                if (s.swipeDirection === 'prev') {
                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);
                    else s.slideTo(stopIndex);
                }
            }
            else {
                // Short swipes
                if (!s.params.shortSwipes) {
                    s.slideTo(s.activeIndex);
                    return;
                }
                if (s.swipeDirection === 'next') {
                    s.slideTo(stopIndex + s.params.slidesPerGroup);

                }
                if (s.swipeDirection === 'prev') {
                    s.slideTo(stopIndex);
                }
            }
        };
        /*=========================
          Transitions
          ===========================*/
        s._slideTo = function (slideIndex, speed) {
            return s.slideTo(slideIndex, speed, true, true);
        };
        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (typeof slideIndex === 'undefined') slideIndex = 0;
            if (slideIndex < 0) slideIndex = 0;
            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);
            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;

            var translate = - s.snapGrid[s.snapIndex];
            // Stop autoplay
            if (s.params.autoplay && s.autoplaying) {
                if (internal || !s.params.autoplayDisableOnInteraction) {
                    s.pauseAutoplay(speed);
                }
                else {
                    s.stopAutoplay();
                }
            }
            // Update progress
            s.updateProgress(translate);

            // Normalize slideIndex
            for (var i = 0; i < s.slidesGrid.length; i++) {
                if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {
                    slideIndex = i;
                }
            }

            // Directions locks
            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {
                return false;
            }
            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {
                if ((s.activeIndex || 0) !== slideIndex ) return false;
            }

            // Update Index
            if (typeof speed === 'undefined') speed = s.params.speed;
            s.previousIndex = s.activeIndex || 0;
            s.activeIndex = slideIndex;

            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {
                // Update Height
                if (s.params.autoHeight) {
                    s.updateAutoHeight();
                }
                s.updateClasses();
                if (s.params.effect !== 'slide') {
                    s.setWrapperTranslate(translate);
                }
                return false;
            }
            s.updateClasses();
            s.onTransitionStart(runCallbacks);

            if (speed === 0) {
                s.setWrapperTranslate(translate);
                s.setWrapperTransition(0);
                s.onTransitionEnd(runCallbacks);
            }
            else {
                s.setWrapperTranslate(translate);
                s.setWrapperTransition(speed);
                if (!s.animating) {
                    s.animating = true;
                    s.wrapper.transitionEnd(function () {
                        if (!s) return;
                        s.onTransitionEnd(runCallbacks);
                    });
                }

            }

            return true;
        };

        s.onTransitionStart = function (runCallbacks) {
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (s.params.autoHeight) {
                s.updateAutoHeight();
            }
            if (s.lazy) s.lazy.onTransitionStart();
            if (runCallbacks) {
                s.emit('onTransitionStart', s);
                if (s.activeIndex !== s.previousIndex) {
                    s.emit('onSlideChangeStart', s);
                    if (s.activeIndex > s.previousIndex) {
                        s.emit('onSlideNextStart', s);
                    }
                    else {
                        s.emit('onSlidePrevStart', s);
                    }
                }

            }
        };
        s.onTransitionEnd = function (runCallbacks) {
            s.animating = false;
            s.setWrapperTransition(0);
            if (typeof runCallbacks === 'undefined') runCallbacks = true;
            if (s.lazy) s.lazy.onTransitionEnd();
            if (runCallbacks) {
                s.emit('onTransitionEnd', s);
                if (s.activeIndex !== s.previousIndex) {
                    s.emit('onSlideChangeEnd', s);
                    if (s.activeIndex > s.previousIndex) {
                        s.emit('onSlideNextEnd', s);
                    }
                    else {
                        s.emit('onSlidePrevEnd', s);
                    }
                }
            }
            if (s.params.hashnav && s.hashnav) {
                s.hashnav.setHash();
            }

        };
        s.slideNext = function (runCallbacks, speed, internal) {
            if (s.params.loop) {
                if (s.animating) return false;
                s.fixLoop();
                var clientLeft = s.container[0].clientLeft;
                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
            }
            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
        };
        s._slideNext = function (speed) {
            return s.slideNext(true, speed, true);
        };
        s.slidePrev = function (runCallbacks, speed, internal) {
            if (s.params.loop) {
                if (s.animating) return false;
                s.fixLoop();
                var clientLeft = s.container[0].clientLeft;
                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
            }
            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
        };
        s._slidePrev = function (speed) {
            return s.slidePrev(true, speed, true);
        };
        s.slideReset = function (runCallbacks, speed, internal) {
            return s.slideTo(s.activeIndex, speed, runCallbacks);
        };

        /*=========================
          Translate/transition helpers
          ===========================*/
        s.setWrapperTransition = function (duration, byController) {
            s.wrapper.transition(duration);
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                s.effects[s.params.effect].setTransition(duration);
            }
            if (s.params.parallax && s.parallax) {
                s.parallax.setTransition(duration);
            }
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.setTransition(duration);
            }
            if (s.params.control && s.controller) {
                s.controller.setTransition(duration, byController);
            }
            s.emit('onSetTransition', s, duration);
        };
        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {
            var x = 0, y = 0, z = 0;
            if (s.isHorizontal()) {
                x = s.rtl ? -translate : translate;
            }
            else {
                y = translate;
            }

            if (s.params.roundLengths) {
                x = round(x);
                y = round(y);
            }

            if (!s.params.virtualTranslate) {
                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');
                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');
            }

            s.translate = s.isHorizontal() ? x : y;

            // Check if we need to update progress
            var progress;
            var translatesDiff = s.maxTranslate() - s.minTranslate();
            if (translatesDiff === 0) {
                progress = 0;
            }
            else {
                progress = (translate - s.minTranslate()) / (translatesDiff);
            }
            if (progress !== s.progress) {
                s.updateProgress(translate);
            }

            if (updateActiveIndex) s.updateActiveIndex();
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                s.effects[s.params.effect].setTranslate(s.translate);
            }
            if (s.params.parallax && s.parallax) {
                s.parallax.setTranslate(s.translate);
            }
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.setTranslate(s.translate);
            }
            if (s.params.control && s.controller) {
                s.controller.setTranslate(s.translate, byController);
            }
            s.emit('onSetTranslate', s, s.translate);
        };

        s.getTranslate = function (el, axis) {
            var matrix, curTransform, curStyle, transformMatrix;

            // automatic axis detection
            if (typeof axis === 'undefined') {
                axis = 'x';
            }

            if (s.params.virtualTranslate) {
                return s.rtl ? -s.translate : s.translate;
            }

            curStyle = window.getComputedStyle(el, null);
            if (window.WebKitCSSMatrix) {
                curTransform = curStyle.transform || curStyle.webkitTransform;
                if (curTransform.split(',').length > 6) {
                    curTransform = curTransform.split(', ').map(function(a){
                        return a.replace(',','.');
                    }).join(', ');
                }
                // Some old versions of Webkit choke when 'none' is passed; pass
                // empty string instead in this case
                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
            }
            else {
                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
                matrix = transformMatrix.toString().split(',');
            }

            if (axis === 'x') {
                //Latest Chrome and webkits Fix
                if (window.WebKitCSSMatrix)
                    curTransform = transformMatrix.m41;
                //Crazy IE10 Matrix
                else if (matrix.length === 16)
                    curTransform = parseFloat(matrix[12]);
                //Normal Browsers
                else
                    curTransform = parseFloat(matrix[4]);
            }
            if (axis === 'y') {
                //Latest Chrome and webkits Fix
                if (window.WebKitCSSMatrix)
                    curTransform = transformMatrix.m42;
                //Crazy IE10 Matrix
                else if (matrix.length === 16)
                    curTransform = parseFloat(matrix[13]);
                //Normal Browsers
                else
                    curTransform = parseFloat(matrix[5]);
            }
            if (s.rtl && curTransform) curTransform = -curTransform;
            return curTransform || 0;
        };
        s.getWrapperTranslate = function (axis) {
            if (typeof axis === 'undefined') {
                axis = s.isHorizontal() ? 'x' : 'y';
            }
            return s.getTranslate(s.wrapper[0], axis);
        };

        /*=========================
          Observer
          ===========================*/
        s.observers = [];
        function initObserver(target, options) {
            options = options || {};
            // create an observer instance
            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
            var observer = new ObserverFunc(function (mutations) {
                mutations.forEach(function (mutation) {
                    s.onResize(true);
                    s.emit('onObserverUpdate', s, mutation);
                });
            });

            observer.observe(target, {
                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
                childList: typeof options.childList === 'undefined' ? true : options.childList,
                characterData: typeof options.characterData === 'undefined' ? true : options.characterData
            });

            s.observers.push(observer);
        }
        s.initObservers = function () {
            if (s.params.observeParents) {
                var containerParents = s.container.parents();
                for (var i = 0; i < containerParents.length; i++) {
                    initObserver(containerParents[i]);
                }
            }

            // Observe container
            initObserver(s.container[0], {childList: false});

            // Observe wrapper
            initObserver(s.wrapper[0], {attributes: false});
        };
        s.disconnectObservers = function () {
            for (var i = 0; i < s.observers.length; i++) {
                s.observers[i].disconnect();
            }
            s.observers = [];
        };
        /*=========================
          Loop
          ===========================*/
        // Create looped slides
        s.createLoop = function () {
            // Remove duplicated slides
            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();

            var slides = s.wrapper.children('.' + s.params.slideClass);

            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;

            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);
            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;
            if (s.loopedSlides > slides.length) {
                s.loopedSlides = slides.length;
            }

            var prependSlides = [], appendSlides = [], i;
            slides.each(function (index, el) {
                var slide = $(this);
                if (index < s.loopedSlides) appendSlides.push(el);
                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);
                slide.attr('data-swiper-slide-index', index);
            });
            for (i = 0; i < appendSlides.length; i++) {
                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
            }
            for (i = prependSlides.length - 1; i >= 0; i--) {
                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
            }
        };
        s.destroyLoop = function () {
            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();
            s.slides.removeAttr('data-swiper-slide-index');
        };
        s.reLoop = function (updatePosition) {
            var oldIndex = s.activeIndex - s.loopedSlides;
            s.destroyLoop();
            s.createLoop();
            s.updateSlidesSize();
            if (updatePosition) {
                s.slideTo(oldIndex + s.loopedSlides, 0, false);
            }

        };
        s.fixLoop = function () {
            var newIndex;
            //Fix For Negative Oversliding
            if (s.activeIndex < s.loopedSlides) {
                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;
                newIndex = newIndex + s.loopedSlides;
                s.slideTo(newIndex, 0, false, true);
            }
            //Fix For Positive Oversliding
            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {
                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;
                newIndex = newIndex + s.loopedSlides;
                s.slideTo(newIndex, 0, false, true);
            }
        };
        /*=========================
          Append/Prepend/Remove Slides
          ===========================*/
        s.appendSlide = function (slides) {
            if (s.params.loop) {
                s.destroyLoop();
            }
            if (typeof slides === 'object' && slides.length) {
                for (var i = 0; i < slides.length; i++) {
                    if (slides[i]) s.wrapper.append(slides[i]);
                }
            }
            else {
                s.wrapper.append(slides);
            }
            if (s.params.loop) {
                s.createLoop();
            }
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
        };
        s.prependSlide = function (slides) {
            if (s.params.loop) {
                s.destroyLoop();
            }
            var newActiveIndex = s.activeIndex + 1;
            if (typeof slides === 'object' && slides.length) {
                for (var i = 0; i < slides.length; i++) {
                    if (slides[i]) s.wrapper.prepend(slides[i]);
                }
                newActiveIndex = s.activeIndex + slides.length;
            }
            else {
                s.wrapper.prepend(slides);
            }
            if (s.params.loop) {
                s.createLoop();
            }
            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
            s.slideTo(newActiveIndex, 0, false);
        };
        s.removeSlide = function (slidesIndexes) {
            if (s.params.loop) {
                s.destroyLoop();
                s.slides = s.wrapper.children('.' + s.params.slideClass);
            }
            var newActiveIndex = s.activeIndex,
                indexToRemove;
            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {
                for (var i = 0; i < slidesIndexes.length; i++) {
                    indexToRemove = slidesIndexes[i];
                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                    if (indexToRemove < newActiveIndex) newActiveIndex--;
                }
                newActiveIndex = Math.max(newActiveIndex, 0);
            }
            else {
                indexToRemove = slidesIndexes;
                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();
                if (indexToRemove < newActiveIndex) newActiveIndex--;
                newActiveIndex = Math.max(newActiveIndex, 0);
            }

            if (s.params.loop) {
                s.createLoop();
            }

            if (!(s.params.observer && s.support.observer)) {
                s.update(true);
            }
            if (s.params.loop) {
                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);
            }
            else {
                s.slideTo(newActiveIndex, 0, false);
            }

        };
        s.removeAllSlides = function () {
            var slidesIndexes = [];
            for (var i = 0; i < s.slides.length; i++) {
                slidesIndexes.push(i);
            }
            s.removeSlide(slidesIndexes);
        };


        /*=========================
          Effects
          ===========================*/
        s.effects = {
            fade: {
                setTranslate: function () {
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var offset = slide[0].swiperSlideOffset;
                        var tx = -offset;
                        if (!s.params.virtualTranslate) tx = tx - s.translate;
                        var ty = 0;
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                        }
                        var slideOpacity = s.params.fade.crossFade ?
                            Math.max(1 - Math.abs(slide[0].progress), 0) :
                            1 + Math.min(Math.max(slide[0].progress, -1), 0);
                        slide
                            .css({
                                opacity: slideOpacity
                            })
                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');

                    }

                },
                setTransition: function (duration) {
                    s.slides.transition(duration);
                    if (s.params.virtualTranslate && duration !== 0) {
                        var eventTriggered = false;
                        s.slides.transitionEnd(function () {
                            if (eventTriggered) return;
                            if (!s) return;
                            eventTriggered = true;
                            s.animating = false;
                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
                            for (var i = 0; i < triggerEvents.length; i++) {
                                s.wrapper.trigger(triggerEvents[i]);
                            }
                        });
                    }
                }
            },
            flip: {
                setTranslate: function () {
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var progress = slide[0].progress;
                        if (s.params.flip.limitRotation) {
                            progress = Math.max(Math.min(slide[0].progress, 1), -1);
                        }
                        var offset = slide[0].swiperSlideOffset;
                        var rotate = -180 * progress,
                            rotateY = rotate,
                            rotateX = 0,
                            tx = -offset,
                            ty = 0;
                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                            rotateX = -rotateY;
                            rotateY = 0;
                        }
                        else if (s.rtl) {
                            rotateY = -rotateY;
                        }

                        slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;

                        if (s.params.flip.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
                        }

                        slide
                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)');
                    }
                },
                setTransition: function (duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                    if (s.params.virtualTranslate && duration !== 0) {
                        var eventTriggered = false;
                        s.slides.eq(s.activeIndex).transitionEnd(function () {
                            if (eventTriggered) return;
                            if (!s) return;
                            if (!$(this).hasClass(s.params.slideActiveClass)) return;
                            eventTriggered = true;
                            s.animating = false;
                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
                            for (var i = 0; i < triggerEvents.length; i++) {
                                s.wrapper.trigger(triggerEvents[i]);
                            }
                        });
                    }
                }
            },
            cube: {
                setTranslate: function () {
                    var wrapperRotate = 0, cubeShadow;
                    if (s.params.cube.shadow) {
                        if (s.isHorizontal()) {
                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');
                            if (cubeShadow.length === 0) {
                                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                s.wrapper.append(cubeShadow);
                            }
                            cubeShadow.css({height: s.width + 'px'});
                        }
                        else {
                            cubeShadow = s.container.find('.swiper-cube-shadow');
                            if (cubeShadow.length === 0) {
                                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                                s.container.append(cubeShadow);
                            }
                        }
                    }
                    for (var i = 0; i < s.slides.length; i++) {
                        var slide = s.slides.eq(i);
                        var slideAngle = i * 90;
                        var round = Math.floor(slideAngle / 360);
                        if (s.rtl) {
                            slideAngle = -slideAngle;
                            round = Math.floor(-slideAngle / 360);
                        }
                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);
                        var tx = 0, ty = 0, tz = 0;
                        if (i % 4 === 0) {
                            tx = - round * 4 * s.size;
                            tz = 0;
                        }
                        else if ((i - 1) % 4 === 0) {
                            tx = 0;
                            tz = - round * 4 * s.size;
                        }
                        else if ((i - 2) % 4 === 0) {
                            tx = s.size + round * 4 * s.size;
                            tz = s.size;
                        }
                        else if ((i - 3) % 4 === 0) {
                            tx = - s.size;
                            tz = 3 * s.size + s.size * 4 * round;
                        }
                        if (s.rtl) {
                            tx = -tx;
                        }

                        if (!s.isHorizontal()) {
                            ty = tx;
                            tx = 0;
                        }

                        var transform = 'rotateX(' + (s.isHorizontal() ? 0 : -slideAngle) + 'deg) rotateY(' + (s.isHorizontal() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';
                        if (progress <= 1 && progress > -1) {
                            wrapperRotate = i * 90 + progress * 90;
                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;
                        }
                        slide.transform(transform);
                        if (s.params.cube.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);
                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);
                        }
                    }
                    s.wrapper.css({
                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',
                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',
                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',
                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'
                    });

                    if (s.params.cube.shadow) {
                        if (s.isHorizontal()) {
                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');
                        }
                        else {
                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
                            var scale1 = s.params.cube.shadowScale,
                                scale2 = s.params.cube.shadowScale / multiplier,
                                offset = s.params.cube.shadowOffset;
                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');
                        }
                    }
                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;
                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (s.isHorizontal() ? 0 : wrapperRotate) + 'deg) rotateY(' + (s.isHorizontal() ? -wrapperRotate : 0) + 'deg)');
                },
                setTransition: function (duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                    if (s.params.cube.shadow && !s.isHorizontal()) {
                        s.container.find('.swiper-cube-shadow').transition(duration);
                    }
                }
            },
            coverflow: {
                setTranslate: function () {
                    var transform = s.translate;
                    var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;
                    var rotate = s.isHorizontal() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;
                    var translate = s.params.coverflow.depth;
                    //Each slide offset from center
                    for (var i = 0, length = s.slides.length; i < length; i++) {
                        var slide = s.slides.eq(i);
                        var slideSize = s.slidesSizesGrid[i];
                        var slideOffset = slide[0].swiperSlideOffset;
                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;

                        var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;
                        var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;
                        // var rotateZ = 0
                        var translateZ = -translate * Math.abs(offsetMultiplier);

                        var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);
                        var translateX = s.isHorizontal() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;

                        //Fix for ultra small values
                        if (Math.abs(translateX) < 0.001) translateX = 0;
                        if (Math.abs(translateY) < 0.001) translateY = 0;
                        if (Math.abs(translateZ) < 0.001) translateZ = 0;
                        if (Math.abs(rotateY) < 0.001) rotateY = 0;
                        if (Math.abs(rotateX) < 0.001) rotateX = 0;

                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';

                        slide.transform(slideTransform);
                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
                        if (s.params.coverflow.slideShadows) {
                            //Set shadows
                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
                            if (shadowBefore.length === 0) {
                                shadowBefore = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '"></div>');
                                slide.append(shadowBefore);
                            }
                            if (shadowAfter.length === 0) {
                                shadowAfter = $('<div class="swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '"></div>');
                                slide.append(shadowAfter);
                            }
                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;
                        }
                    }

                    //Set correct perspective for IE10
                    if (s.browser.ie) {
                        var ws = s.wrapper[0].style;
                        ws.perspectiveOrigin = center + 'px 50%';
                    }
                },
                setTransition: function (duration) {
                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
                }
            }
        };

        /*=========================
          Images Lazy Loading
          ===========================*/
        s.lazy = {
            initialImageLoaded: false,
            loadImageInSlide: function (index, loadInDuplicate) {
                if (typeof index === 'undefined') return;
                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;
                if (s.slides.length === 0) return;

                var slide = s.slides.eq(index);
                var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');
                if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {
                    img = img.add(slide[0]);
                }
                if (img.length === 0) return;

                img.each(function () {
                    var _img = $(this);
                    _img.addClass('swiper-lazy-loading');
                    var background = _img.attr('data-background');
                    var src = _img.attr('data-src'),
                        srcset = _img.attr('data-srcset');
                    s.loadImage(_img[0], (src || background), srcset, false, function () {
                        if (background) {
                            _img.css('background-image', 'url("' + background + '")');
                            _img.removeAttr('data-background');
                        }
                        else {
                            if (srcset) {
                                _img.attr('srcset', srcset);
                                _img.removeAttr('data-srcset');
                            }
                            if (src) {
                                _img.attr('src', src);
                                _img.removeAttr('data-src');
                            }

                        }

                        _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');
                        slide.find('.swiper-lazy-preloader, .preloader').remove();
                        if (s.params.loop && loadInDuplicate) {
                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');
                            if (slide.hasClass(s.params.slideDuplicateClass)) {
                                var originalSlide = s.wrapper.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + s.params.slideDuplicateClass + ')');
                                s.lazy.loadImageInSlide(originalSlide.index(), false);
                            }
                            else {
                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);
                            }
                        }
                        s.emit('onLazyImageReady', s, slide[0], _img[0]);
                    });

                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);
                });

            },
            load: function () {
                var i;
                if (s.params.watchSlidesVisibility) {
                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {
                        s.lazy.loadImageInSlide($(this).index());
                    });
                }
                else {
                    if (s.params.slidesPerView > 1) {
                        for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView ; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                    }
                    else {
                        s.lazy.loadImageInSlide(s.activeIndex);
                    }
                }
                if (s.params.lazyLoadingInPrevNext) {
                    if (s.params.slidesPerView > 1 || (s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1)) {
                        var amount = s.params.lazyLoadingInPrevNextAmount;
                        var spv = s.params.slidesPerView;
                        var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);
                        var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);
                        // Next Slides
                        for (i = s.activeIndex + s.params.slidesPerView; i < maxIndex; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                        // Prev Slides
                        for (i = minIndex; i < s.activeIndex ; i++) {
                            if (s.slides[i]) s.lazy.loadImageInSlide(i);
                        }
                    }
                    else {
                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);
                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());

                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);
                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());
                    }
                }
            },
            onTransitionStart: function () {
                if (s.params.lazyLoading) {
                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {
                        s.lazy.load();
                    }
                }
            },
            onTransitionEnd: function () {
                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {
                    s.lazy.load();
                }
            }
        };


        /*=========================
          Scrollbar
          ===========================*/
        s.scrollbar = {
            isTouched: false,
            setDragPosition: function (e) {
                var sb = s.scrollbar;
                var x = 0, y = 0;
                var translate;
                var pointerPosition = s.isHorizontal() ?
                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :
                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;
                var position = (pointerPosition) - sb.track.offset()[s.isHorizontal() ? 'left' : 'top'] - sb.dragSize / 2;
                var positionMin = -s.minTranslate() * sb.moveDivider;
                var positionMax = -s.maxTranslate() * sb.moveDivider;
                if (position < positionMin) {
                    position = positionMin;
                }
                else if (position > positionMax) {
                    position = positionMax;
                }
                position = -position / sb.moveDivider;
                s.updateProgress(position);
                s.setWrapperTranslate(position, true);
            },
            dragStart: function (e) {
                var sb = s.scrollbar;
                sb.isTouched = true;
                e.preventDefault();
                e.stopPropagation();

                sb.setDragPosition(e);
                clearTimeout(sb.dragTimeout);

                sb.track.transition(0);
                if (s.params.scrollbarHide) {
                    sb.track.css('opacity', 1);
                }
                s.wrapper.transition(100);
                sb.drag.transition(100);
                s.emit('onScrollbarDragStart', s);
            },
            dragMove: function (e) {
                var sb = s.scrollbar;
                if (!sb.isTouched) return;
                if (e.preventDefault) e.preventDefault();
                else e.returnValue = false;
                sb.setDragPosition(e);
                s.wrapper.transition(0);
                sb.track.transition(0);
                sb.drag.transition(0);
                s.emit('onScrollbarDragMove', s);
            },
            dragEnd: function (e) {
                var sb = s.scrollbar;
                if (!sb.isTouched) return;
                sb.isTouched = false;
                if (s.params.scrollbarHide) {
                    clearTimeout(sb.dragTimeout);
                    sb.dragTimeout = setTimeout(function () {
                        sb.track.css('opacity', 0);
                        sb.track.transition(400);
                    }, 1000);

                }
                s.emit('onScrollbarDragEnd', s);
                if (s.params.scrollbarSnapOnRelease) {
                    s.slideReset();
                }
            },
            enableDraggable: function () {
                var sb = s.scrollbar;
                var target = s.support.touch ? sb.track : document;
                $(sb.track).on(s.touchEvents.start, sb.dragStart);
                $(target).on(s.touchEvents.move, sb.dragMove);
                $(target).on(s.touchEvents.end, sb.dragEnd);
            },
            disableDraggable: function () {
                var sb = s.scrollbar;
                var target = s.support.touch ? sb.track : document;
                $(sb.track).off(s.touchEvents.start, sb.dragStart);
                $(target).off(s.touchEvents.move, sb.dragMove);
                $(target).off(s.touchEvents.end, sb.dragEnd);
            },
            set: function () {
                if (!s.params.scrollbar) return;
                var sb = s.scrollbar;
                sb.track = $(s.params.scrollbar);
                if (s.params.uniqueNavElements && typeof s.params.scrollbar === 'string' && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {
                    sb.track = s.container.find(s.params.scrollbar);
                }
                sb.drag = sb.track.find('.swiper-scrollbar-drag');
                if (sb.drag.length === 0) {
                    sb.drag = $('<div class="swiper-scrollbar-drag"></div>');
                    sb.track.append(sb.drag);
                }
                sb.drag[0].style.width = '';
                sb.drag[0].style.height = '';
                sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;

                sb.divider = s.size / s.virtualSize;
                sb.moveDivider = sb.divider * (sb.trackSize / s.size);
                sb.dragSize = sb.trackSize * sb.divider;

                if (s.isHorizontal()) {
                    sb.drag[0].style.width = sb.dragSize + 'px';
                }
                else {
                    sb.drag[0].style.height = sb.dragSize + 'px';
                }

                if (sb.divider >= 1) {
                    sb.track[0].style.display = 'none';
                }
                else {
                    sb.track[0].style.display = '';
                }
                if (s.params.scrollbarHide) {
                    sb.track[0].style.opacity = 0;
                }
            },
            setTranslate: function () {
                if (!s.params.scrollbar) return;
                var diff;
                var sb = s.scrollbar;
                var translate = s.translate || 0;
                var newPos;

                var newSize = sb.dragSize;
                newPos = (sb.trackSize - sb.dragSize) * s.progress;
                if (s.rtl && s.isHorizontal()) {
                    newPos = -newPos;
                    if (newPos > 0) {
                        newSize = sb.dragSize - newPos;
                        newPos = 0;
                    }
                    else if (-newPos + sb.dragSize > sb.trackSize) {
                        newSize = sb.trackSize + newPos;
                    }
                }
                else {
                    if (newPos < 0) {
                        newSize = sb.dragSize + newPos;
                        newPos = 0;
                    }
                    else if (newPos + sb.dragSize > sb.trackSize) {
                        newSize = sb.trackSize - newPos;
                    }
                }
                if (s.isHorizontal()) {
                    if (s.support.transforms3d) {
                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');
                    }
                    else {
                        sb.drag.transform('translateX(' + (newPos) + 'px)');
                    }
                    sb.drag[0].style.width = newSize + 'px';
                }
                else {
                    if (s.support.transforms3d) {
                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');
                    }
                    else {
                        sb.drag.transform('translateY(' + (newPos) + 'px)');
                    }
                    sb.drag[0].style.height = newSize + 'px';
                }
                if (s.params.scrollbarHide) {
                    clearTimeout(sb.timeout);
                    sb.track[0].style.opacity = 1;
                    sb.timeout = setTimeout(function () {
                        sb.track[0].style.opacity = 0;
                        sb.track.transition(400);
                    }, 1000);
                }
            },
            setTransition: function (duration) {
                if (!s.params.scrollbar) return;
                s.scrollbar.drag.transition(duration);
            }
        };

        /*=========================
          Controller
          ===========================*/
        s.controller = {
            LinearSpline: function (x, y) {
                this.x = x;
                this.y = y;
                this.lastIndex = x.length - 1;
                // Given an x value (x2), return the expected y2 value:
                // (x1,y1) is the known point before given value,
                // (x3,y3) is the known point after given value.
                var i1, i3;
                var l = this.x.length;

                this.interpolate = function (x2) {
                    if (!x2) return 0;

                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):
                    i3 = binarySearch(this.x, x2);
                    i1 = i3 - 1;

                    // We have our indexes i1 & i3, so we can calculate already:
                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1
                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];
                };

                var binarySearch = (function() {
                    var maxIndex, minIndex, guess;
                    return function(array, val) {
                        minIndex = -1;
                        maxIndex = array.length;
                        while (maxIndex - minIndex > 1)
                            if (array[guess = maxIndex + minIndex >> 1] <= val) {
                                minIndex = guess;
                            } else {
                                maxIndex = guess;
                            }
                        return maxIndex;
                    };
                })();
            },
            //xxx: for now i will just save one spline function to to
            getInterpolateFunction: function(c){
                if(!s.controller.spline) s.controller.spline = s.params.loop ?
                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :
                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);
            },
            setTranslate: function (translate, byController) {
                var controlled = s.params.control;
                var multiplier, controlledTranslate;
                function setControlledTranslate(c) {
                    // this will create an Interpolate function based on the snapGrids
                    // x is the Grid of the scrolled scroller and y will be the controlled scroller
                    // it makes sense to create this only once and recall it for the interpolation
                    // the function does a lot of value caching for performance
                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;
                    if (s.params.controlBy === 'slide') {
                        s.controller.getInterpolateFunction(c);
                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
                        // but it did not work out
                        controlledTranslate = -s.controller.spline.interpolate(-translate);
                    }

                    if(!controlledTranslate || s.params.controlBy === 'container'){
                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());
                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();
                    }

                    if (s.params.controlInverse) {
                        controlledTranslate = c.maxTranslate() - controlledTranslate;
                    }
                    c.updateProgress(controlledTranslate);
                    c.setWrapperTranslate(controlledTranslate, false, s);
                    c.updateActiveIndex();
                }
                if (s.isArray(controlled)) {
                    for (var i = 0; i < controlled.length; i++) {
                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                            setControlledTranslate(controlled[i]);
                        }
                    }
                }
                else if (controlled instanceof Swiper && byController !== controlled) {

                    setControlledTranslate(controlled);
                }
            },
            setTransition: function (duration, byController) {
                var controlled = s.params.control;
                var i;
                function setControlledTransition(c) {
                    c.setWrapperTransition(duration, s);
                    if (duration !== 0) {
                        c.onTransitionStart();
                        c.wrapper.transitionEnd(function(){
                            if (!controlled) return;
                            if (c.params.loop && s.params.controlBy === 'slide') {
                                c.fixLoop();
                            }
                            c.onTransitionEnd();

                        });
                    }
                }
                if (s.isArray(controlled)) {
                    for (i = 0; i < controlled.length; i++) {
                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
                            setControlledTransition(controlled[i]);
                        }
                    }
                }
                else if (controlled instanceof Swiper && byController !== controlled) {
                    setControlledTransition(controlled);
                }
            }
        };

        /*=========================
          Hash Navigation
          ===========================*/
        s.hashnav = {
            init: function () {
                if (!s.params.hashnav) return;
                s.hashnav.initialized = true;
                var hash = document.location.hash.replace('#', '');
                if (!hash) return;
                var speed = 0;
                for (var i = 0, length = s.slides.length; i < length; i++) {
                    var slide = s.slides.eq(i);
                    var slideHash = slide.attr('data-hash');
                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {
                        var index = slide.index();
                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);
                    }
                }
            },
            setHash: function () {
                if (!s.hashnav.initialized || !s.params.hashnav) return;
                document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';
            }
        };

        /*=========================
          Keyboard Control
          ===========================*/
        function handleKeyboard(e) {
            if (e.originalEvent) e = e.originalEvent; //jquery fix
            var kc = e.keyCode || e.charCode;
            // Directions locks
            if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {
                return false;
            }
            if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {
                return false;
            }
            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
                return;
            }
            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {
                return;
            }
            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {
                var inView = false;
                //Check that swiper should be inside of visible area of window
                if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {
                    return;
                }
                var windowScroll = {
                    left: window.pageXOffset,
                    top: window.pageYOffset
                };
                var windowWidth = window.innerWidth;
                var windowHeight = window.innerHeight;
                var swiperOffset = s.container.offset();
                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;
                var swiperCoord = [
                    [swiperOffset.left, swiperOffset.top],
                    [swiperOffset.left + s.width, swiperOffset.top],
                    [swiperOffset.left, swiperOffset.top + s.height],
                    [swiperOffset.left + s.width, swiperOffset.top + s.height]
                ];
                for (var i = 0; i < swiperCoord.length; i++) {
                    var point = swiperCoord[i];
                    if (
                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&
                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight
                    ) {
                        inView = true;
                    }

                }
                if (!inView) return;
            }
            if (s.isHorizontal()) {
                if (kc === 37 || kc === 39) {
                    if (e.preventDefault) e.preventDefault();
                    else e.returnValue = false;
                }
                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();
                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();
            }
            else {
                if (kc === 38 || kc === 40) {
                    if (e.preventDefault) e.preventDefault();
                    else e.returnValue = false;
                }
                if (kc === 40) s.slideNext();
                if (kc === 38) s.slidePrev();
            }
        }
        s.disableKeyboardControl = function () {
            s.params.keyboardControl = false;
            $(document).off('keydown', handleKeyboard);
        };
        s.enableKeyboardControl = function () {
            s.params.keyboardControl = true;
            $(document).on('keydown', handleKeyboard);
        };


        /*=========================
          Mousewheel Control
          ===========================*/
        s.mousewheel = {
            event: false,
            lastScrollTime: (new window.Date()).getTime()
        };
        if (s.params.mousewheelControl) {
            try {
                new window.WheelEvent('wheel');
                s.mousewheel.event = 'wheel';
            } catch (e) {
                if (window.WheelEvent || (s.container[0] && 'wheel' in s.container[0])) {
                    s.mousewheel.event = 'wheel';
                }
            }
            if (!s.mousewheel.event && window.WheelEvent) {

            }
            if (!s.mousewheel.event && document.onmousewheel !== undefined) {
                s.mousewheel.event = 'mousewheel';
            }
            if (!s.mousewheel.event) {
                s.mousewheel.event = 'DOMMouseScroll';
            }
        }
        function handleMousewheel(e) {
            if (e.originalEvent) e = e.originalEvent; //jquery fix
            var we = s.mousewheel.event;
            var delta = 0;
            var rtlFactor = s.rtl ? -1 : 1;

            //WebKits
            if (we === 'mousewheel') {
                if (s.params.mousewheelForceToAxis) {
                    if (s.isHorizontal()) {
                        if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY)) delta = e.wheelDeltaX * rtlFactor;
                        else return;
                    }
                    else {
                        if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX)) delta = e.wheelDeltaY;
                        else return;
                    }
                }
                else {
                    delta = Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY) ? - e.wheelDeltaX * rtlFactor : - e.wheelDeltaY;
                }
            }
            //Old FireFox
            else if (we === 'DOMMouseScroll') delta = -e.detail;
            //New FireFox
            else if (we === 'wheel') {
                if (s.params.mousewheelForceToAxis) {
                    if (s.isHorizontal()) {
                        if (Math.abs(e.deltaX) > Math.abs(e.deltaY)) delta = -e.deltaX * rtlFactor;
                        else return;
                    }
                    else {
                        if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) delta = -e.deltaY;
                        else return;
                    }
                }
                else {
                    delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? - e.deltaX * rtlFactor : - e.deltaY;
                }
            }
            if (delta === 0) return;

            if (s.params.mousewheelInvert) delta = -delta;

            if (!s.params.freeMode) {
                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {
                    if (delta < 0) {
                        if ((!s.isEnd || s.params.loop) && !s.animating) s.slideNext();
                        else if (s.params.mousewheelReleaseOnEdges) return true;
                    }
                    else {
                        if ((!s.isBeginning || s.params.loop) && !s.animating) s.slidePrev();
                        else if (s.params.mousewheelReleaseOnEdges) return true;
                    }
                }
                s.mousewheel.lastScrollTime = (new window.Date()).getTime();

            }
            else {
                //Freemode or scrollContainer:
                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;
                var wasBeginning = s.isBeginning,
                    wasEnd = s.isEnd;

                if (position >= s.minTranslate()) position = s.minTranslate();
                if (position <= s.maxTranslate()) position = s.maxTranslate();

                s.setWrapperTransition(0);
                s.setWrapperTranslate(position);
                s.updateProgress();
                s.updateActiveIndex();

                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {
                    s.updateClasses();
                }

                if (s.params.freeModeSticky) {
                    clearTimeout(s.mousewheel.timeout);
                    s.mousewheel.timeout = setTimeout(function () {
                        s.slideReset();
                    }, 300);
                }
                else {
                    if (s.params.lazyLoading && s.lazy) {
                        s.lazy.load();
                    }
                }

                // Return page scroll on edge positions
                if (position === 0 || position === s.maxTranslate()) return;
            }
            if (s.params.autoplay) s.stopAutoplay();

            if (e.preventDefault) e.preventDefault();
            else e.returnValue = false;
            return false;
        }
        s.disableMousewheelControl = function () {
            if (!s.mousewheel.event) return false;
            s.container.off(s.mousewheel.event, handleMousewheel);
            return true;
        };

        s.enableMousewheelControl = function () {
            if (!s.mousewheel.event) return false;
            s.container.on(s.mousewheel.event, handleMousewheel);
            return true;
        };


        /*=========================
          Parallax
          ===========================*/
        function setParallaxTransform(el, progress) {
            el = $(el);
            var p, pX, pY;
            var rtlFactor = s.rtl ? -1 : 1;

            p = el.attr('data-swiper-parallax') || '0';
            pX = el.attr('data-swiper-parallax-x');
            pY = el.attr('data-swiper-parallax-y');
            if (pX || pY) {
                pX = pX || '0';
                pY = pY || '0';
            }
            else {
                if (s.isHorizontal()) {
                    pX = p;
                    pY = '0';
                }
                else {
                    pY = p;
                    pX = '0';
                }
            }

            if ((pX).indexOf('%') >= 0) {
                pX = parseInt(pX, 10) * progress * rtlFactor + '%';
            }
            else {
                pX = pX * progress * rtlFactor + 'px' ;
            }
            if ((pY).indexOf('%') >= 0) {
                pY = parseInt(pY, 10) * progress + '%';
            }
            else {
                pY = pY * progress + 'px' ;
            }

            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');
        }
        s.parallax = {
            setTranslate: function () {
                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){
                    setParallaxTransform(this, s.progress);

                });
                s.slides.each(function () {
                    var slide = $(this);
                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {
                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);
                        setParallaxTransform(this, progress);
                    });
                });
            },
            setTransition: function (duration) {
                if (typeof duration === 'undefined') duration = s.params.speed;
                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){
                    var el = $(this);
                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;
                    if (duration === 0) parallaxDuration = 0;
                    el.transition(parallaxDuration);
                });
            }
        };


        /*=========================
          Plugins API. Collect all and init all plugins
          ===========================*/
        s._plugins = [];
        for (var plugin in s.plugins) {
            var p = s.plugins[plugin](s, s.params[plugin]);
            if (p) s._plugins.push(p);
        }
        // Method to call all plugins event/method
        s.callPlugins = function (eventName) {
            for (var i = 0; i < s._plugins.length; i++) {
                if (eventName in s._plugins[i]) {
                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                }
            }
        };

        /*=========================
          Events/Callbacks/Plugins Emitter
          ===========================*/
        function normalizeEventName (eventName) {
            if (eventName.indexOf('on') !== 0) {
                if (eventName[0] !== eventName[0].toUpperCase()) {
                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);
                }
                else {
                    eventName = 'on' + eventName;
                }
            }
            return eventName;
        }
        s.emitterEventListeners = {

        };
        s.emit = function (eventName) {
            // Trigger callbacks
            if (s.params[eventName]) {
                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
            }
            var i;
            // Trigger events
            if (s.emitterEventListeners[eventName]) {
                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
                }
            }
            // Trigger plugins
            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        };
        s.on = function (eventName, handler) {
            eventName = normalizeEventName(eventName);
            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];
            s.emitterEventListeners[eventName].push(handler);
            return s;
        };
        s.off = function (eventName, handler) {
            var i;
            eventName = normalizeEventName(eventName);
            if (typeof handler === 'undefined') {
                // Remove all handlers for such event
                s.emitterEventListeners[eventName] = [];
                return s;
            }
            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;
            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);
            }
            return s;
        };
        s.once = function (eventName, handler) {
            eventName = normalizeEventName(eventName);
            var _handler = function () {
                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
                s.off(eventName, _handler);
            };
            s.on(eventName, _handler);
            return s;
        };

        // Accessibility tools
        s.a11y = {
            makeFocusable: function ($el) {
                $el.attr('tabIndex', '0');
                return $el;
            },
            addRole: function ($el, role) {
                $el.attr('role', role);
                return $el;
            },

            addLabel: function ($el, label) {
                $el.attr('aria-label', label);
                return $el;
            },

            disable: function ($el) {
                $el.attr('aria-disabled', true);
                return $el;
            },

            enable: function ($el) {
                $el.attr('aria-disabled', false);
                return $el;
            },

            onEnterKey: function (event) {
                if (event.keyCode !== 13) return;
                if ($(event.target).is(s.params.nextButton)) {
                    s.onClickNext(event);
                    if (s.isEnd) {
                        s.a11y.notify(s.params.lastSlideMessage);
                    }
                    else {
                        s.a11y.notify(s.params.nextSlideMessage);
                    }
                }
                else if ($(event.target).is(s.params.prevButton)) {
                    s.onClickPrev(event);
                    if (s.isBeginning) {
                        s.a11y.notify(s.params.firstSlideMessage);
                    }
                    else {
                        s.a11y.notify(s.params.prevSlideMessage);
                    }
                }
                if ($(event.target).is('.' + s.params.bulletClass)) {
                    $(event.target)[0].click();
                }
            },

            liveRegion: $('<span class="swiper-notification" aria-live="assertive" aria-atomic="true"></span>'),

            notify: function (message) {
                var notification = s.a11y.liveRegion;
                if (notification.length === 0) return;
                notification.html('');
                notification.html(message);
            },
            init: function () {
                // Setup accessibility
                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {
                    s.a11y.makeFocusable(s.nextButton);
                    s.a11y.addRole(s.nextButton, 'button');
                    s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage);
                }
                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {
                    s.a11y.makeFocusable(s.prevButton);
                    s.a11y.addRole(s.prevButton, 'button');
                    s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage);
                }

                $(s.container).append(s.a11y.liveRegion);
            },
            initPagination: function () {
                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {
                    s.bullets.each(function () {
                        var bullet = $(this);
                        s.a11y.makeFocusable(bullet);
                        s.a11y.addRole(bullet, 'button');
                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));
                    });
                }
            },
            destroy: function () {
                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();
            }
        };


        /*=========================
          Init/Destroy
          ===========================*/
        s.init = function () {
            if (s.params.loop) s.createLoop();
            s.updateContainerSize();
            s.updateSlidesSize();
            s.updatePagination();
            if (s.params.scrollbar && s.scrollbar) {
                s.scrollbar.set();
                if (s.params.scrollbarDraggable) {
                    s.scrollbar.enableDraggable();
                }
            }
            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
                if (!s.params.loop) s.updateProgress();
                s.effects[s.params.effect].setTranslate();
            }
            if (s.params.loop) {
                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);
            }
            else {
                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);
                if (s.params.initialSlide === 0) {
                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();
                    if (s.lazy && s.params.lazyLoading) {
                        s.lazy.load();
                        s.lazy.initialImageLoaded = true;
                    }
                }
            }
            s.attachEvents();
            if (s.params.observer && s.support.observer) {
                s.initObservers();
            }
            if (s.params.preloadImages && !s.params.lazyLoading) {
                s.preloadImages();
            }
            if (s.params.autoplay) {
                s.startAutoplay();
            }
            if (s.params.keyboardControl) {
                if (s.enableKeyboardControl) s.enableKeyboardControl();
            }
            if (s.params.mousewheelControl) {
                if (s.enableMousewheelControl) s.enableMousewheelControl();
            }
            if (s.params.hashnav) {
                if (s.hashnav) s.hashnav.init();
            }
            if (s.params.a11y && s.a11y) s.a11y.init();
            s.emit('onInit', s);
        };

        // Cleanup dynamic styles
        s.cleanupStyles = function () {
            // Container
            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');

            // Wrapper
            s.wrapper.removeAttr('style');

            // Slides
            if (s.slides && s.slides.length) {
                s.slides
                    .removeClass([
                        s.params.slideVisibleClass,
                        s.params.slideActiveClass,
                        s.params.slideNextClass,
                        s.params.slidePrevClass
                    ].join(' '))
                    .removeAttr('style')
                    .removeAttr('data-swiper-column')
                    .removeAttr('data-swiper-row');
            }

            // Pagination/Bullets
            if (s.paginationContainer && s.paginationContainer.length) {
                s.paginationContainer.removeClass(s.params.paginationHiddenClass);
            }
            if (s.bullets && s.bullets.length) {
                s.bullets.removeClass(s.params.bulletActiveClass);
            }

            // Buttons
            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);
            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);

            // Scrollbar
            if (s.params.scrollbar && s.scrollbar) {
                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');
                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');
            }
        };

        // Destroy
        s.destroy = function (deleteInstance, cleanupStyles) {
            // Detach evebts
            s.detachEvents();
            // Stop autoplay
            s.stopAutoplay();
            // Disable draggable
            if (s.params.scrollbar && s.scrollbar) {
                if (s.params.scrollbarDraggable) {
                    s.scrollbar.disableDraggable();
                }
            }
            // Destroy loop
            if (s.params.loop) {
                s.destroyLoop();
            }
            // Cleanup styles
            if (cleanupStyles) {
                s.cleanupStyles();
            }
            // Disconnect observer
            s.disconnectObservers();
            // Disable keyboard/mousewheel
            if (s.params.keyboardControl) {
                if (s.disableKeyboardControl) s.disableKeyboardControl();
            }
            if (s.params.mousewheelControl) {
                if (s.disableMousewheelControl) s.disableMousewheelControl();
            }
            // Disable a11y
            if (s.params.a11y && s.a11y) s.a11y.destroy();
            // Destroy callback
            s.emit('onDestroy');
            // Delete instance
            if (deleteInstance !== false) s = null;
        };

        s.init();



        // Return swiper instance
        return s;
    };


    /*==================================================
        Prototype
    ====================================================*/
    Swiper.prototype = {
        isSafari: (function () {
            var ua = navigator.userAgent.toLowerCase();
            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);
        })(),
        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),
        isArray: function (arr) {
            return Object.prototype.toString.apply(arr) === '[object Array]';
        },
        /*==================================================
        Browser
        ====================================================*/
        browser: {
            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1)
        },
        /*==================================================
        Devices
        ====================================================*/
        device: (function () {
            var ua = navigator.userAgent;
            var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
            var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
            var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
            var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);
            return {
                ios: ipad || iphone || ipod,
                android: android
            };
        })(),
        /*==================================================
        Feature Detection
        ====================================================*/
        support: {
            touch : (window.Modernizr && Modernizr.touch === true) || (function () {
                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);
            })(),

            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {
                var div = document.createElement('div').style;
                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);
            })(),

            flexbox: (function () {
                var div = document.createElement('div').style;
                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');
                for (var i = 0; i < styles.length; i++) {
                    if (styles[i] in div) return true;
                }
            })(),

            observer: (function () {
                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);
            })()
        },
        /*==================================================
        Plugins
        ====================================================*/
        plugins: {}
    };


    /*===========================
     Get Dom libraries
     ===========================*/
    var addLibraryPlugin = function (lib) {
        lib.fn.swiper = function (params) {
            var firstInstance;
            lib(this).each(function () {
                var s = new Swiper(this, params);
                if (!firstInstance) firstInstance = s;
            });
            return firstInstance;
        };
    };
    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];
    for (var i = 0; i < swiperDomPlugins.length; i++) {
        if (window[swiperDomPlugins[i]]) {
            addLibraryPlugin(window[swiperDomPlugins[i]]);
        }
    }
    // Required DOM Plugins
    var domLib;
    if (typeof Dom7 === 'undefined') {
        domLib = window.Dom7 || window.Zepto || window.jQuery;
    }
    else {
        domLib = Dom7;
    }


    if (domLib) {
        if (!('transitionEnd' in domLib.fn)) {
            domLib.fn.transitionEnd = function (callback) {
                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
                    i, j, dom = this;
                function fireCallBack(e) {
                    /*jshint validthis:true */
                    if (e.target !== this) return;
                    callback.call(this, e);
                    for (i = 0; i < events.length; i++) {
                        dom.off(events[i], fireCallBack);
                    }
                }
                if (callback) {
                    for (i = 0; i < events.length; i++) {
                        dom.on(events[i], fireCallBack);
                    }
                }
                return this;
            };
        }
        if (!('transform' in domLib.fn)) {
            domLib.fn.transform = function (transform) {
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;
                }
                return this;
            };
        }
        if (!('transition' in domLib.fn)) {
            domLib.fn.transition = function (duration) {
                if (typeof duration !== 'string') {
                    duration = duration + 'ms';
                }
                for (var i = 0; i < this.length; i++) {
                    var elStyle = this[i].style;
                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
                }
                return this;
            };
        }
    }

    $.Swiper = Swiper;
    $.Swiper.prototype.defaults = defaults;
})($);

/*===========================
Framework7 Swiper Additions
===========================*/
/* global $:true */
+function($){
    'use strict';
    $.Swiper.prototype.defaults.pagination = '.swiper-pagination';

    $.swiper = function (container, params) {
        return new $.Swiper(container, params);
    };
    $.fn.swiper = function (params) {
        return new $.Swiper(this, params);
    };
    $.initSwiper = function (pageContainer) {
        var page = $(pageContainer || document.body);
        var swipers = page.find('.swiper-container');
        if (swipers.length === 0) return;
        for (var i = 0; i < swipers.length; i++) {
            var swiper = swipers.eq(i);
            var params;
            if (swiper.data('swiper')) {
                swiper.data("swiper").update(true);
                continue;
            }
            else {
                params = swiper.dataset();
            }
            $.swiper(swiper[0], params);
        }
    };
    $.reinitSwiper = function (pageContainer) {
        var page = $(pageContainer);
        var sliders = page.find('.swiper-container');
        if (sliders.length === 0) return;
        for (var i = 0; i < sliders.length; i++) {
            var sliderInstance = sliders[0].swiper;
            if (sliderInstance) {
                sliderInstance.update(true);
            }
        }
    };

}($);

/*======================================================
************   Photo Browser   ************
======================================================*/
/* global $:true */
+function($){
    'use strict';
    var PhotoBrowser = function (params) {

        var pb = this, i;

        var defaults = this.defaults;

        params = params || {};
        for (var def in defaults) {
            if (typeof params[def] === 'undefined') {
                params[def] = defaults[def];
            }
        }

        pb.params = params;

        var navbarTemplate = pb.params.navbarTemplate ||
            '<header class="bar bar-nav">' +
            '<a class="icon icon-left pull-left photo-browser-close-link' + (pb.params.type === 'popup' ?  " close-popup" : "") + '"></a>' +
            '<h1 class="title"><div class="center sliding"><span class="photo-browser-current"></span> <span class="photo-browser-of">' + pb.params.ofText + '</span> <span class="photo-browser-total"></span></div></h1>' +
            '</header>';

        var toolbarTemplate = pb.params.toolbarTemplate ||
            '<nav class="bar bar-tab">' +
            '<a class="tab-item photo-browser-prev" href="#">' +
            '<i class="icon icon-prev"></i>' +
            '</a>' +
            '<a class="tab-item photo-browser-next" href="#">' +
            '<i class="icon icon-next"></i>' +
            '</a>' +
            '</nav>';

        var template = pb.params.template ||
            '<div class="photo-browser photo-browser-' + pb.params.theme + '">' +
            '{{navbar}}' +
            '{{toolbar}}' +
            '<div data-page="photo-browser-slides" class="content">' +
            '{{captions}}' +
            '<div class="photo-browser-swiper-container swiper-container">' +
            '<div class="photo-browser-swiper-wrapper swiper-wrapper">' +
            '{{photos}}' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</div>';

        var photoTemplate = !pb.params.lazyLoading ?
            (pb.params.photoTemplate || '<div class="photo-browser-slide swiper-slide"><span class="photo-browser-zoom-container"><img src="{{url}}"></span></div>') :
            (pb.params.photoLazyTemplate || '<div class="photo-browser-slide photo-browser-slide-lazy swiper-slide"><div class="preloader' + (pb.params.theme === 'dark' ? ' preloader-white' : '') + '"></div><span class="photo-browser-zoom-container"><img data-src="{{url}}" class="swiper-lazy"></span></div>');

        var captionsTheme = pb.params.captionsTheme || pb.params.theme;
        var captionsTemplate = pb.params.captionsTemplate || '<div class="photo-browser-captions photo-browser-captions-' + captionsTheme + '">{{captions}}</div>';
        var captionTemplate = pb.params.captionTemplate || '<div class="photo-browser-caption" data-caption-index="{{captionIndex}}">{{caption}}</div>';

        var objectTemplate = pb.params.objectTemplate || '<div class="photo-browser-slide photo-browser-object-slide swiper-slide">{{html}}</div>';
        var photosHtml = '';
        var captionsHtml = '';
        for (i = 0; i < pb.params.photos.length; i ++) {
            var photo = pb.params.photos[i];
            var thisTemplate = '';

            //check if photo is a string or string-like object, for backwards compatibility
            if (typeof(photo) === 'string' || photo instanceof String) {

                //check if "photo" is html object
                if (photo.indexOf('<') >= 0 || photo.indexOf('>') >= 0) {
                    thisTemplate = objectTemplate.replace(/{{html}}/g, photo);
                } else {
                    thisTemplate = photoTemplate.replace(/{{url}}/g, photo);
                }

                //photo is a string, thus has no caption, so remove the caption template placeholder
                //otherwise check if photo is an object with a url property
            } else if (typeof(photo) === 'object') {

                //check if "photo" is html object
                if (photo.hasOwnProperty('html') && photo.html.length > 0) {
                    thisTemplate = objectTemplate.replace(/{{html}}/g, photo.html);
                } else if (photo.hasOwnProperty('url') && photo.url.length > 0) {
                    thisTemplate = photoTemplate.replace(/{{url}}/g, photo.url);
                }

                //check if photo has a caption
                if (photo.hasOwnProperty('caption') && photo.caption.length > 0) {
                    captionsHtml += captionTemplate.replace(/{{caption}}/g, photo.caption).replace(/{{captionIndex}}/g, i);
                } else {
                    thisTemplate = thisTemplate.replace(/{{caption}}/g, '');
                }
            }

            photosHtml += thisTemplate;

        }

        var htmlTemplate = template
            .replace('{{navbar}}', (pb.params.navbar ? navbarTemplate : ''))
            .replace('{{noNavbar}}', (pb.params.navbar ? '' : 'no-navbar'))
            .replace('{{photos}}', photosHtml)
            .replace('{{captions}}', captionsTemplate.replace(/{{captions}}/g, captionsHtml))
            .replace('{{toolbar}}', (pb.params.toolbar ? toolbarTemplate : ''));

        pb.activeIndex = pb.params.initialSlide;
        pb.openIndex = pb.activeIndex;
        pb.opened = false;

        pb.open = function (index) {
            if (typeof index === 'undefined') index = pb.activeIndex;
            index = parseInt(index, 10);
            if (pb.opened && pb.swiper) {
                pb.swiper.slideTo(index);
                return;
            }
            pb.opened = true;
            pb.openIndex = index;
            // pb.initialLazyLoaded = false;
            if (pb.params.type === 'standalone') {
                $(pb.params.container).append(htmlTemplate);
            }
            if (pb.params.type === 'popup') {
                pb.popup = $.popup('<div class="popup photo-browser-popup">' + htmlTemplate + '</div>');
                $(pb.popup).on('closed', pb.onPopupClose);
            }
            if (pb.params.type === 'page') {
                $(document).on('pageBeforeInit', pb.onPageBeforeInit);
                $(document).on('pageBeforeRemove', pb.onPageBeforeRemove);
                if (!pb.params.view) pb.params.view = $.mainView;
                pb.params.view.loadContent(htmlTemplate);
                return;
            }
            pb.layout(pb.openIndex);
            if (pb.params.onOpen) {
                pb.params.onOpen(pb);
            }

        };
        pb.close = function () {
            pb.opened = false;
            if (!pb.swiperContainer || pb.swiperContainer.length === 0) {
                return;
            }
            if (pb.params.onClose) {
                pb.params.onClose(pb);
            }
            // Detach events
            pb.attachEvents(true);
            // Delete from DOM
            if (pb.params.type === 'standalone') {
                pb.container.removeClass('photo-browser-in').addClass('photo-browser-out').animationEnd(function () {
                    pb.container.remove();
                });
            }
            // Destroy slider
            pb.swiper.destroy();
            // Delete references
            pb.swiper = pb.swiperContainer = pb.swiperWrapper = pb.slides = gestureSlide = gestureImg = gestureImgWrap = undefined;
        };

        pb.onPopupClose = function () {
            pb.close();
            $(pb.popup).off('pageBeforeInit', pb.onPopupClose);
        };
        pb.onPageBeforeInit = function (e) {
            if (e.detail.page.name === 'photo-browser-slides') {
                pb.layout(pb.openIndex);
            }
            $(document).off('pageBeforeInit', pb.onPageBeforeInit);
        };
        pb.onPageBeforeRemove = function (e) {
            if (e.detail.page.name === 'photo-browser-slides') {
                pb.close();
            }
            $(document).off('pageBeforeRemove', pb.onPageBeforeRemove);
        };

        pb.onSliderTransitionStart = function (swiper) {
            pb.activeIndex = swiper.activeIndex;

            var current = swiper.activeIndex + 1;
            var total = swiper.slides.length;
            if (pb.params.loop) {
                total = total - 2;
                current = current - swiper.loopedSlides;
                if (current < 1) current = total + current;
                if (current > total) current = current - total;
            }
            pb.container.find('.photo-browser-current').text(current);
            pb.container.find('.photo-browser-total').text(total);

            $('.photo-browser-prev, .photo-browser-next').removeClass('photo-browser-link-inactive');

            if (swiper.isBeginning && !pb.params.loop) {
                $('.photo-browser-prev').addClass('photo-browser-link-inactive');
            }
            if (swiper.isEnd && !pb.params.loop) {
                $('.photo-browser-next').addClass('photo-browser-link-inactive');
            }

            // Update captions
            if (pb.captions.length > 0) {
                pb.captionsContainer.find('.photo-browser-caption-active').removeClass('photo-browser-caption-active');
                var captionIndex = pb.params.loop ? swiper.slides.eq(swiper.activeIndex).attr('data-swiper-slide-index') : pb.activeIndex;
                pb.captionsContainer.find('[data-caption-index="' + captionIndex + '"]').addClass('photo-browser-caption-active');
            }


            // Stop Video
            var previousSlideVideo = swiper.slides.eq(swiper.previousIndex).find('video');
            if (previousSlideVideo.length > 0) {
                if ('pause' in previousSlideVideo[0]) previousSlideVideo[0].pause();
            }
            // Callback
            if (pb.params.onSlideChangeStart) pb.params.onSlideChangeStart(swiper);
        };
        pb.onSliderTransitionEnd = function (swiper) {
            // Reset zoom
            if (pb.params.zoom && gestureSlide && swiper.previousIndex !== swiper.activeIndex) {
                gestureImg.transform('translate3d(0,0,0) scale(1)');
                gestureImgWrap.transform('translate3d(0,0,0)');
                gestureSlide = gestureImg = gestureImgWrap = undefined;
                scale = currentScale = 1;
            }
            if (pb.params.onSlideChangeEnd) pb.params.onSlideChangeEnd(swiper);
        };

        pb.layout = function (index) {
            if (pb.params.type === 'page') {
                pb.container = $('.photo-browser-swiper-container').parents('.view');
            }
            else {
                pb.container = $('.photo-browser');
            }
            if (pb.params.type === 'standalone') {
                pb.container.addClass('photo-browser-in');
                // $.sizeNavbars(pb.container);
            }
            pb.swiperContainer = pb.container.find('.photo-browser-swiper-container');
            pb.swiperWrapper = pb.container.find('.photo-browser-swiper-wrapper');
            pb.slides = pb.container.find('.photo-browser-slide');
            pb.captionsContainer = pb.container.find('.photo-browser-captions');
            pb.captions = pb.container.find('.photo-browser-caption');

            var sliderSettings = {
                nextButton: pb.params.nextButton || '.photo-browser-next',
                prevButton: pb.params.prevButton || '.photo-browser-prev',
                indexButton: pb.params.indexButton,
                initialSlide: index,
                spaceBetween: pb.params.spaceBetween,
                speed: pb.params.speed,
                loop: pb.params.loop,
                lazyLoading: pb.params.lazyLoading,
                lazyLoadingInPrevNext: pb.params.lazyLoadingInPrevNext,
                lazyLoadingOnTransitionStart: pb.params.lazyLoadingOnTransitionStart,
                preloadImages: pb.params.lazyLoading ? false : true,
                onTap: function (swiper, e) {
                    if (pb.params.onTap) pb.params.onTap(swiper, e);
                },
                onClick: function (swiper, e) {
                    if (pb.params.exposition) pb.toggleExposition();
                    if (pb.params.onClick) pb.params.onClick(swiper, e);
                },
                onDoubleTap: function (swiper, e) {
                    pb.toggleZoom($(e.target).parents('.photo-browser-slide'));
                    if (pb.params.onDoubleTap) pb.params.onDoubleTap(swiper, e);
                },
                onTransitionStart: function (swiper) {
                    pb.onSliderTransitionStart(swiper);
                },
                onTransitionEnd: function (swiper) {
                    pb.onSliderTransitionEnd(swiper);
                },
                onLazyImageLoad: function (swiper, slide, img) {
                    if (pb.params.onLazyImageLoad) pb.params.onLazyImageLoad(pb, slide, img);
                },
                onLazyImageReady: function (swiper, slide, img) {
                    $(slide).removeClass('photo-browser-slide-lazy');
                    if (pb.params.onLazyImageReady) pb.params.onLazyImageReady(pb, slide, img);
                }
            };

            if (pb.params.swipeToClose && pb.params.type !== 'page') {
                sliderSettings.onTouchStart = pb.swipeCloseTouchStart;
                sliderSettings.onTouchMoveOpposite = pb.swipeCloseTouchMove;
                sliderSettings.onTouchEnd = pb.swipeCloseTouchEnd;
            }

            pb.swiper = $.swiper(pb.swiperContainer, sliderSettings);
            if (index === 0) {
                pb.onSliderTransitionStart(pb.swiper);
            }
            pb.attachEvents();
        };
        pb.attachEvents = function (detach) {
            var action = detach ? 'off' : 'on';
            // Slide between photos

            if (pb.params.zoom) {
                var target = pb.params.loop ? pb.swiper.slides : pb.slides;
                // Scale image
                target[action]('gesturestart', pb.onSlideGestureStart);
                target[action]('gesturechange', pb.onSlideGestureChange);
                target[action]('gestureend', pb.onSlideGestureEnd);
                // Move image
                target[action]('touchstart', pb.onSlideTouchStart);
                target[action]('touchmove', pb.onSlideTouchMove);
                target[action]('touchend', pb.onSlideTouchEnd);
            }
            pb.container.find('.photo-browser-close-link')[action]('click', pb.close);
        };

        // Expose
        pb.exposed = false;
        pb.toggleExposition = function () {
            if (pb.container) pb.container.toggleClass('photo-browser-exposed');
            if (pb.params.expositionHideCaptions) pb.captionsContainer.toggleClass('photo-browser-captions-exposed');
            pb.exposed = !pb.exposed;
        };
        pb.enableExposition = function () {
            if (pb.container) pb.container.addClass('photo-browser-exposed');
            if (pb.params.expositionHideCaptions) pb.captionsContainer.addClass('photo-browser-captions-exposed');
            pb.exposed = true;
        };
        pb.disableExposition = function () {
            if (pb.container) pb.container.removeClass('photo-browser-exposed');
            if (pb.params.expositionHideCaptions) pb.captionsContainer.removeClass('photo-browser-captions-exposed');
            pb.exposed = false;
        };

        // Gestures
        var gestureSlide, gestureImg, gestureImgWrap, scale = 1, currentScale = 1, isScaling = false;
        pb.onSlideGestureStart = function () {
            if (!gestureSlide) {
                gestureSlide = $(this);
                gestureImg = gestureSlide.find('img, svg, canvas');
                gestureImgWrap = gestureImg.parent('.photo-browser-zoom-container');
                if (gestureImgWrap.length === 0) {
                    gestureImg = undefined;
                    return;
                }
            }
            gestureImg.transition(0);
            isScaling = true;
        };
        pb.onSlideGestureChange = function (e) {
            if (!gestureImg || gestureImg.length === 0) return;
            scale = (e.scale || e.originalEvent.scale) * currentScale;
            if (scale > pb.params.maxZoom) {
                scale = pb.params.maxZoom - 1 + Math.pow((scale - pb.params.maxZoom + 1), 0.5);
            }
            if (scale < pb.params.minZoom) {
                scale =  pb.params.minZoom + 1 - Math.pow((pb.params.minZoom - scale + 1), 0.5);
            }
            gestureImg.transform('translate3d(0,0,0) scale(' + scale + ')');
        };
        pb.onSlideGestureEnd = function () {
            if (!gestureImg || gestureImg.length === 0) return;
            scale = Math.max(Math.min(scale, pb.params.maxZoom), pb.params.minZoom);
            gestureImg.transition(pb.params.speed).transform('translate3d(0,0,0) scale(' + scale + ')');
            currentScale = scale;
            isScaling = false;
            if (scale === 1) gestureSlide = undefined;
        };
        pb.toggleZoom = function () {
            if (!gestureSlide) {
                gestureSlide = pb.swiper.slides.eq(pb.swiper.activeIndex);
                gestureImg = gestureSlide.find('img, svg, canvas');
                gestureImgWrap = gestureImg.parent('.photo-browser-zoom-container');
            }
            if (!gestureImg || gestureImg.length === 0) return;
            gestureImgWrap.transition(300).transform('translate3d(0,0,0)');
            if (scale && scale !== 1) {
                scale = currentScale = 1;
                gestureImg.transition(300).transform('translate3d(0,0,0) scale(1)');
                gestureSlide = undefined;
            }
            else {
                scale = currentScale = pb.params.maxZoom;
                gestureImg.transition(300).transform('translate3d(0,0,0) scale(' + scale + ')');
            }
        };

        var imageIsTouched, imageIsMoved, imageCurrentX, imageCurrentY, imageMinX, imageMinY, imageMaxX, imageMaxY, imageWidth, imageHeight, imageTouchesStart = {}, imageTouchesCurrent = {}, imageStartX, imageStartY, velocityPrevPositionX, velocityPrevTime, velocityX, velocityPrevPositionY, velocityY;

        pb.onSlideTouchStart = function (e) {
            if (!gestureImg || gestureImg.length === 0) return;
            if (imageIsTouched) return;
            if ($.device.os === 'android') e.preventDefault();
            imageIsTouched = true;
            imageTouchesStart = $.getTouchPosition(e);
        };
        pb.onSlideTouchMove = function (e) {
            if (!gestureImg || gestureImg.length === 0) return;
            pb.swiper.allowClick = false;
            if (!imageIsTouched || !gestureSlide) return;

            if (!imageIsMoved) {
                imageWidth = gestureImg[0].offsetWidth;
                imageHeight = gestureImg[0].offsetHeight;
                imageStartX = $.getTranslate(gestureImgWrap[0], 'x') || 0;
                imageStartY = $.getTranslate(gestureImgWrap[0], 'y') || 0;
                gestureImgWrap.transition(0);
            }
            // Define if we need image drag
            var scaledWidth = imageWidth * scale;
            var scaledHeight = imageHeight * scale;

            if (scaledWidth < pb.swiper.width && scaledHeight < pb.swiper.height) return;

            imageMinX = Math.min((pb.swiper.width / 2 - scaledWidth / 2), 0);
            imageMaxX = -imageMinX;
            imageMinY = Math.min((pb.swiper.height / 2 - scaledHeight / 2), 0);
            imageMaxY = -imageMinY;

            imageTouchesCurrent = $.getTouchPosition(e);

            if (!imageIsMoved && !isScaling) {
                if (
                    (Math.floor(imageMinX) === Math.floor(imageStartX) && imageTouchesCurrent.x < imageTouchesStart.x) ||
                    (Math.floor(imageMaxX) === Math.floor(imageStartX) && imageTouchesCurrent.x > imageTouchesStart.x)
                ) {
                    imageIsTouched = false;
                    return;
                }
            }
            e.preventDefault();
            e.stopPropagation();
            imageIsMoved = true;
            imageCurrentX = imageTouchesCurrent.x - imageTouchesStart.x + imageStartX;
            imageCurrentY = imageTouchesCurrent.y - imageTouchesStart.y + imageStartY;

            if (imageCurrentX < imageMinX) {
                imageCurrentX =  imageMinX + 1 - Math.pow((imageMinX - imageCurrentX + 1), 0.8);
            }
            if (imageCurrentX > imageMaxX) {
                imageCurrentX = imageMaxX - 1 + Math.pow((imageCurrentX - imageMaxX + 1), 0.8);
            }

            if (imageCurrentY < imageMinY) {
                imageCurrentY =  imageMinY + 1 - Math.pow((imageMinY - imageCurrentY + 1), 0.8);
            }
            if (imageCurrentY > imageMaxY) {
                imageCurrentY = imageMaxY - 1 + Math.pow((imageCurrentY - imageMaxY + 1), 0.8);
            }

            //Velocity
            if (!velocityPrevPositionX) velocityPrevPositionX = imageTouchesCurrent.x;
            if (!velocityPrevPositionY) velocityPrevPositionY = imageTouchesCurrent.y;
            if (!velocityPrevTime) velocityPrevTime = Date.now();
            velocityX = (imageTouchesCurrent.x - velocityPrevPositionX) / (Date.now() - velocityPrevTime) / 2;
            velocityY = (imageTouchesCurrent.y - velocityPrevPositionY) / (Date.now() - velocityPrevTime) / 2;
            if (Math.abs(imageTouchesCurrent.x - velocityPrevPositionX) < 2) velocityX = 0;
            if (Math.abs(imageTouchesCurrent.y - velocityPrevPositionY) < 2) velocityY = 0;
            velocityPrevPositionX = imageTouchesCurrent.x;
            velocityPrevPositionY = imageTouchesCurrent.y;
            velocityPrevTime = Date.now();

            gestureImgWrap.transform('translate3d(' + imageCurrentX + 'px, ' + imageCurrentY + 'px,0)');
        };
        pb.onSlideTouchEnd = function () {
            if (!gestureImg || gestureImg.length === 0) return;
            if (!imageIsTouched || !imageIsMoved) {
                imageIsTouched = false;
                imageIsMoved = false;
                return;
            }
            imageIsTouched = false;
            imageIsMoved = false;
            var momentumDurationX = 300;
            var momentumDurationY = 300;
            var momentumDistanceX = velocityX * momentumDurationX;
            var newPositionX = imageCurrentX + momentumDistanceX;
            var momentumDistanceY = velocityY * momentumDurationY;
            var newPositionY = imageCurrentY + momentumDistanceY;

            //Fix duration
            if (velocityX !== 0) momentumDurationX = Math.abs((newPositionX - imageCurrentX) / velocityX);
            if (velocityY !== 0) momentumDurationY = Math.abs((newPositionY - imageCurrentY) / velocityY);
            var momentumDuration = Math.max(momentumDurationX, momentumDurationY);

            imageCurrentX = newPositionX;
            imageCurrentY = newPositionY;

            // Define if we need image drag
            var scaledWidth = imageWidth * scale;
            var scaledHeight = imageHeight * scale;
            imageMinX = Math.min((pb.swiper.width / 2 - scaledWidth / 2), 0);
            imageMaxX = -imageMinX;
            imageMinY = Math.min((pb.swiper.height / 2 - scaledHeight / 2), 0);
            imageMaxY = -imageMinY;
            imageCurrentX = Math.max(Math.min(imageCurrentX, imageMaxX), imageMinX);
            imageCurrentY = Math.max(Math.min(imageCurrentY, imageMaxY), imageMinY);

            gestureImgWrap.transition(momentumDuration).transform('translate3d(' + imageCurrentX + 'px, ' + imageCurrentY + 'px,0)');
        };

        // Swipe Up To Close
        var swipeToCloseIsTouched = false;
        var allowSwipeToClose = true;
        var swipeToCloseDiff, swipeToCloseStart, swipeToCloseCurrent, swipeToCloseStarted = false, swipeToCloseActiveSlide, swipeToCloseTimeStart;
        pb.swipeCloseTouchStart = function () {
            if (!allowSwipeToClose) return;
            swipeToCloseIsTouched = true;
        };
        pb.swipeCloseTouchMove = function (swiper, e) {
            if (!swipeToCloseIsTouched) return;
            if (!swipeToCloseStarted) {
                swipeToCloseStarted = true;
                swipeToCloseStart = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
                swipeToCloseActiveSlide = pb.swiper.slides.eq(pb.swiper.activeIndex);
                swipeToCloseTimeStart = (new Date()).getTime();
            }
            e.preventDefault();
            swipeToCloseCurrent = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
            swipeToCloseDiff = swipeToCloseStart - swipeToCloseCurrent;
            var opacity = 1 - Math.abs(swipeToCloseDiff) / 300;
            swipeToCloseActiveSlide.transform('translate3d(0,' + (-swipeToCloseDiff) + 'px,0)');
            pb.swiper.container.css('opacity', opacity).transition(0);
        };
        pb.swipeCloseTouchEnd = function () {
            swipeToCloseIsTouched = false;
            if (!swipeToCloseStarted) {
                swipeToCloseStarted = false;
                return;
            }
            swipeToCloseStarted = false;
            allowSwipeToClose = false;
            var diff = Math.abs(swipeToCloseDiff);
            var timeDiff = (new Date()).getTime() - swipeToCloseTimeStart;
            if ((timeDiff < 300 && diff > 20) || (timeDiff >= 300 && diff > 100)) {
                setTimeout(function () {
                    if (pb.params.type === 'standalone') {
                        pb.close();
                    }
                    if (pb.params.type === 'popup') {
                        $.closeModal(pb.popup);
                    }
                    if (pb.params.onSwipeToClose) {
                        pb.params.onSwipeToClose(pb);
                    }
                    allowSwipeToClose = true;
                }, 0);
                return;
            }
            if (diff !== 0) {
                swipeToCloseActiveSlide.addClass('transitioning').transitionEnd(function () {
                    allowSwipeToClose = true;
                    swipeToCloseActiveSlide.removeClass('transitioning');
                });
            }
            else {
                allowSwipeToClose = true;
            }
            pb.swiper.container.css('opacity', '').transition('');
            swipeToCloseActiveSlide.transform('');
        };

        return pb;
    };

    PhotoBrowser.prototype = {
        defaults: {
            photos : [],
            container: 'body',
            initialSlide: 0,
            spaceBetween: 20,
            speed: 300,
            zoom: true,
            maxZoom: 3,
            minZoom: 1,
            exposition: true,
            expositionHideCaptions: false,
            type: 'standalone',
            navbar: true,
            toolbar: true,
            theme: 'light',
            swipeToClose: true,
            backLinkText: 'Close',
            ofText: 'of',
            loop: false,
            lazyLoading: false,
            lazyLoadingInPrevNext: false,
            lazyLoadingOnTransitionStart: false,
            /*
            Callbacks:
            onLazyImageLoad(pb, slide, img)
            onLazyImageReady(pb, slide, img)
            onOpen(pb)
            onClose(pb)
            onSlideChangeStart(swiper)
            onSlideChangeEnd(swiper)
            onTap(swiper, e)
            onClick(swiper, e)
            onDoubleTap(swiper, e)
            onSwipeToClose(pb)
            */
        }
    };

    $.photoBrowser = function (params) {
        $.extend(params, $.photoBrowser.prototype.defaults);
        return new PhotoBrowser(params);
    };

    $.photoBrowser.prototype = {
        defaults: {}
    };

}(jQuery);
/*!
 * =====================================================
 * SUI Mobile - http://m.sui.taobao.org/
 *
 * =====================================================
 */
// jshint ignore: start
+function($){

$.smConfig.rawCitiesData = [
    {
        "name":"北京",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"东城区"
            },
            {
                "name":"西城区"
            },
            {
                "name":"崇文区"
            },
            {
                "name":"宣武区"
            },
            {
                "name":"朝阳区"
            },
            {
                "name":"海淀区"
            },
            {
                "name":"丰台区"
            },
            {
                "name":"石景山区"
            },
            {
                "name":"房山区"
            },
            {
                "name":"通州区"
            },
            {
                "name":"顺义区"
            },
            {
                "name":"昌平区"
            },
            {
                "name":"大兴区"
            },
            {
                "name":"怀柔区"
            },
            {
                "name":"平谷区"
            },
            {
                "name":"门头沟区"
            },
            {
                "name":"密云县"
            },
            {
                "name":"延庆县"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"广东",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"广州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"越秀区"
                    },
                    {
                        "name":"荔湾区"
                    },
                    {
                        "name":"海珠区"
                    },
                    {
                        "name":"天河区"
                    },
                    {
                        "name":"白云区"
                    },
                    {
                        "name":"黄埔区"
                    },
                    {
                        "name":"番禺区"
                    },
                    {
                        "name":"花都区"
                    },
                    {
                        "name":"南沙区"
                    },
                    {
                        "name":"萝岗区"
                    },
                    {
                        "name":"增城市"
                    },
                    {
                        "name":"从化市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"深圳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"福田区"
                    },
                    {
                        "name":"罗湖区"
                    },
                    {
                        "name":"南山区"
                    },
                    {
                        "name":"宝安区"
                    },
                    {
                        "name":"龙岗区"
                    },
                    {
                        "name":"盐田区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"珠海",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"香洲区"
                    },
                    {
                        "name":"斗门区"
                    },
                    {
                        "name":"金湾区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"汕头",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"金平区"
                    },
                    {
                        "name":"濠江区"
                    },
                    {
                        "name":"龙湖区"
                    },
                    {
                        "name":"潮阳区"
                    },
                    {
                        "name":"潮南区"
                    },
                    {
                        "name":"澄海区"
                    },
                    {
                        "name":"南澳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"韶关",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"浈江区"
                    },
                    {
                        "name":"武江区"
                    },
                    {
                        "name":"曲江区"
                    },
                    {
                        "name":"乐昌市"
                    },
                    {
                        "name":"南雄市"
                    },
                    {
                        "name":"始兴县"
                    },
                    {
                        "name":"仁化县"
                    },
                    {
                        "name":"翁源县"
                    },
                    {
                        "name":"新丰县"
                    },
                    {
                        "name":"乳源瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"佛山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"禅城区"
                    },
                    {
                        "name":"南海区"
                    },
                    {
                        "name":"顺德区"
                    },
                    {
                        "name":"三水区"
                    },
                    {
                        "name":"高明区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"江门",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"蓬江区"
                    },
                    {
                        "name":"江海区"
                    },
                    {
                        "name":"新会区"
                    },
                    {
                        "name":"恩平市"
                    },
                    {
                        "name":"台山市"
                    },
                    {
                        "name":"开平市"
                    },
                    {
                        "name":"鹤山市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"湛江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"赤坎区"
                    },
                    {
                        "name":"霞山区"
                    },
                    {
                        "name":"坡头区"
                    },
                    {
                        "name":"麻章区"
                    },
                    {
                        "name":"吴川市"
                    },
                    {
                        "name":"廉江市"
                    },
                    {
                        "name":"雷州市"
                    },
                    {
                        "name":"遂溪县"
                    },
                    {
                        "name":"徐闻县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"茂名",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"茂南区"
                    },
                    {
                        "name":"茂港区"
                    },
                    {
                        "name":"化州市"
                    },
                    {
                        "name":"信宜市"
                    },
                    {
                        "name":"高州市"
                    },
                    {
                        "name":"电白县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"肇庆",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"端州区"
                    },
                    {
                        "name":"鼎湖区"
                    },
                    {
                        "name":"高要市"
                    },
                    {
                        "name":"四会市"
                    },
                    {
                        "name":"广宁县"
                    },
                    {
                        "name":"怀集县"
                    },
                    {
                        "name":"封开县"
                    },
                    {
                        "name":"德庆县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"惠州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"惠城区"
                    },
                    {
                        "name":"惠阳区"
                    },
                    {
                        "name":"博罗县"
                    },
                    {
                        "name":"惠东县"
                    },
                    {
                        "name":"龙门县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"梅州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"梅江区"
                    },
                    {
                        "name":"兴宁市"
                    },
                    {
                        "name":"梅县"
                    },
                    {
                        "name":"大埔县"
                    },
                    {
                        "name":"丰顺县"
                    },
                    {
                        "name":"五华县"
                    },
                    {
                        "name":"平远县"
                    },
                    {
                        "name":"蕉岭县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"汕尾",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城区"
                    },
                    {
                        "name":"陆丰市"
                    },
                    {
                        "name":"海丰县"
                    },
                    {
                        "name":"陆河县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"河源",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"源城区"
                    },
                    {
                        "name":"紫金县"
                    },
                    {
                        "name":"龙川县"
                    },
                    {
                        "name":"连平县"
                    },
                    {
                        "name":"和平县"
                    },
                    {
                        "name":"东源县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阳江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"江城区"
                    },
                    {
                        "name":"阳春市"
                    },
                    {
                        "name":"阳西县"
                    },
                    {
                        "name":"阳东县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"清远",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"清城区"
                    },
                    {
                        "name":"英德市"
                    },
                    {
                        "name":"连州市"
                    },
                    {
                        "name":"佛冈县"
                    },
                    {
                        "name":"阳山县"
                    },
                    {
                        "name":"清新县"
                    },
                    {
                        "name":"连山壮族瑶族自治县"
                    },
                    {
                        "name":"连南瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"东莞",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"中山",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"潮州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"湘桥区"
                    },
                    {
                        "name":"潮安县"
                    },
                    {
                        "name":"饶平县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"揭阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"榕城区"
                    },
                    {
                        "name":"普宁市"
                    },
                    {
                        "name":"揭东县"
                    },
                    {
                        "name":"揭西县"
                    },
                    {
                        "name":"惠来县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"云浮",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"云城区"
                    },
                    {
                        "name":"罗定市"
                    },
                    {
                        "name":"云安县"
                    },
                    {
                        "name":"新兴县"
                    },
                    {
                        "name":"郁南县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"上海",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"黄浦区"
            },
            {
                "name":"卢湾区"
            },
            {
                "name":"徐汇区"
            },
            {
                "name":"长宁区"
            },
            {
                "name":"静安区"
            },
            {
                "name":"普陀区"
            },
            {
                "name":"闸北区"
            },
            {
                "name":"虹口区"
            },
            {
                "name":"杨浦区"
            },
            {
                "name":"宝山区"
            },
            {
                "name":"闵行区"
            },
            {
                "name":"嘉定区"
            },
            {
                "name":"松江区"
            },
            {
                "name":"金山区"
            },
            {
                "name":"青浦区"
            },
            {
                "name":"南汇区"
            },
            {
                "name":"奉贤区"
            },
            {
                "name":"浦东新区"
            },
            {
                "name":"崇明县"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"天津",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"和平区"
            },
            {
                "name":"河东区"
            },
            {
                "name":"河西区"
            },
            {
                "name":"南开区"
            },
            {
                "name":"河北区"
            },
            {
                "name":"红桥区"
            },
            {
                "name":"塘沽区"
            },
            {
                "name":"汉沽区"
            },
            {
                "name":"大港区"
            },
            {
                "name":"东丽区"
            },
            {
                "name":"西青区"
            },
            {
                "name":"北辰区"
            },
            {
                "name":"津南区"
            },
            {
                "name":"武清区"
            },
            {
                "name":"宝坻区"
            },
            {
                "name":"静海县"
            },
            {
                "name":"宁河县"
            },
            {
                "name":"蓟县"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"重庆",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"渝中区"
            },
            {
                "name":"大渡口区"
            },
            {
                "name":"江北区"
            },
            {
                "name":"南岸区"
            },
            {
                "name":"北碚区"
            },
            {
                "name":"渝北区"
            },
            {
                "name":"巴南区"
            },
            {
                "name":"长寿区"
            },
            {
                "name":"双桥区"
            },
            {
                "name":"沙坪坝区"
            },
            {
                "name":"万盛区"
            },
            {
                "name":"万州区"
            },
            {
                "name":"涪陵区"
            },
            {
                "name":"黔江区"
            },
            {
                "name":"永川区"
            },
            {
                "name":"合川区"
            },
            {
                "name":"江津区"
            },
            {
                "name":"九龙坡区"
            },
            {
                "name":"南川区"
            },
            {
                "name":"綦江县"
            },
            {
                "name":"潼南县"
            },
            {
                "name":"荣昌县"
            },
            {
                "name":"璧山县"
            },
            {
                "name":"大足县"
            },
            {
                "name":"铜梁县"
            },
            {
                "name":"梁平县"
            },
            {
                "name":"开县"
            },
            {
                "name":"忠县"
            },
            {
                "name":"城口县"
            },
            {
                "name":"垫江县"
            },
            {
                "name":"武隆县"
            },
            {
                "name":"丰都县"
            },
            {
                "name":"奉节县"
            },
            {
                "name":"云阳县"
            },
            {
                "name":"巫溪县"
            },
            {
                "name":"巫山县"
            },
            {
                "name":"石柱土家族自治县"
            },
            {
                "name":"秀山土家族苗族自治县"
            },
            {
                "name":"酉阳土家族苗族自治县"
            },
            {
                "name":"彭水苗族土家族自治县"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"辽宁",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"沈阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"沈河区"
                    },
                    {
                        "name":"皇姑区"
                    },
                    {
                        "name":"和平区"
                    },
                    {
                        "name":"大东区"
                    },
                    {
                        "name":"铁西区"
                    },
                    {
                        "name":"苏家屯区"
                    },
                    {
                        "name":"东陵区"
                    },
                    {
                        "name":"于洪区"
                    },
                    {
                        "name":"新民市"
                    },
                    {
                        "name":"法库县"
                    },
                    {
                        "name":"辽中县"
                    },
                    {
                        "name":"康平县"
                    },
                    {
                        "name":"新城子区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"大连",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"西岗区"
                    },
                    {
                        "name":"中山区"
                    },
                    {
                        "name":"沙河口区"
                    },
                    {
                        "name":"甘井子区"
                    },
                    {
                        "name":"旅顺口区"
                    },
                    {
                        "name":"金州区"
                    },
                    {
                        "name":"瓦房店市"
                    },
                    {
                        "name":"普兰店市"
                    },
                    {
                        "name":"庄河市"
                    },
                    {
                        "name":"长海县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鞍山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"铁东区"
                    },
                    {
                        "name":"铁西区"
                    },
                    {
                        "name":"立山区"
                    },
                    {
                        "name":"千山区"
                    },
                    {
                        "name":"海城市"
                    },
                    {
                        "name":"台安县"
                    },
                    {
                        "name":"岫岩满族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"抚顺",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"顺城区"
                    },
                    {
                        "name":"新抚区"
                    },
                    {
                        "name":"东洲区"
                    },
                    {
                        "name":"望花区"
                    },
                    {
                        "name":"抚顺县"
                    },
                    {
                        "name":"清原满族自治县"
                    },
                    {
                        "name":"新宾满族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"本溪",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"平山区"
                    },
                    {
                        "name":"明山区"
                    },
                    {
                        "name":"溪湖区"
                    },
                    {
                        "name":"南芬区"
                    },
                    {
                        "name":"本溪满族自治县"
                    },
                    {
                        "name":"桓仁满族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"丹东",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"振兴区"
                    },
                    {
                        "name":"元宝区"
                    },
                    {
                        "name":"振安区"
                    },
                    {
                        "name":"东港市"
                    },
                    {
                        "name":"凤城市"
                    },
                    {
                        "name":"宽甸满族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"锦州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"太和区"
                    },
                    {
                        "name":"古塔区"
                    },
                    {
                        "name":"凌河区"
                    },
                    {
                        "name":"凌海市"
                    },
                    {
                        "name":"黑山县"
                    },
                    {
                        "name":"义县"
                    },
                    {
                        "name":"北宁市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"营口",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"站前区"
                    },
                    {
                        "name":"西市区"
                    },
                    {
                        "name":"鲅鱼圈区"
                    },
                    {
                        "name":"老边区"
                    },
                    {
                        "name":"大石桥市"
                    },
                    {
                        "name":"盖州市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阜新",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海州区"
                    },
                    {
                        "name":"新邱区"
                    },
                    {
                        "name":"太平区"
                    },
                    {
                        "name":"清河门区"
                    },
                    {
                        "name":"细河区"
                    },
                    {
                        "name":"彰武县"
                    },
                    {
                        "name":"阜新蒙古族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"辽阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"白塔区"
                    },
                    {
                        "name":"文圣区"
                    },
                    {
                        "name":"宏伟区"
                    },
                    {
                        "name":"太子河区"
                    },
                    {
                        "name":"弓长岭区"
                    },
                    {
                        "name":"灯塔市"
                    },
                    {
                        "name":"辽阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"盘锦",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"双台子区"
                    },
                    {
                        "name":"兴隆台区"
                    },
                    {
                        "name":"盘山县"
                    },
                    {
                        "name":"大洼县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"铁岭",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"银州区"
                    },
                    {
                        "name":"清河区"
                    },
                    {
                        "name":"调兵山市"
                    },
                    {
                        "name":"开原市"
                    },
                    {
                        "name":"铁岭县"
                    },
                    {
                        "name":"昌图县"
                    },
                    {
                        "name":"西丰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"朝阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"双塔区"
                    },
                    {
                        "name":"龙城区"
                    },
                    {
                        "name":"凌源市"
                    },
                    {
                        "name":"北票市"
                    },
                    {
                        "name":"朝阳县"
                    },
                    {
                        "name":"建平县"
                    },
                    {
                        "name":"喀喇沁左翼蒙古族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"葫芦岛",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"龙港区"
                    },
                    {
                        "name":"南票区"
                    },
                    {
                        "name":"连山区"
                    },
                    {
                        "name":"兴城市"
                    },
                    {
                        "name":"绥中县"
                    },
                    {
                        "name":"建昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"江苏",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"南京",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"玄武区"
                    },
                    {
                        "name":"白下区"
                    },
                    {
                        "name":"秦淮区"
                    },
                    {
                        "name":"建邺区"
                    },
                    {
                        "name":"鼓楼区"
                    },
                    {
                        "name":"下关区"
                    },
                    {
                        "name":"栖霞区"
                    },
                    {
                        "name":"雨花台区"
                    },
                    {
                        "name":"浦口区"
                    },
                    {
                        "name":"江宁区"
                    },
                    {
                        "name":"六合区"
                    },
                    {
                        "name":"溧水县"
                    },
                    {
                        "name":"高淳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"苏州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"金阊区"
                    },
                    {
                        "name":"平江区"
                    },
                    {
                        "name":"沧浪区"
                    },
                    {
                        "name":"虎丘区"
                    },
                    {
                        "name":"吴中区"
                    },
                    {
                        "name":"相城区"
                    },
                    {
                        "name":"常熟市"
                    },
                    {
                        "name":"张家港市"
                    },
                    {
                        "name":"昆山市"
                    },
                    {
                        "name":"吴江市"
                    },
                    {
                        "name":"太仓市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"无锡",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"崇安区"
                    },
                    {
                        "name":"南长区"
                    },
                    {
                        "name":"北塘区"
                    },
                    {
                        "name":"滨湖区"
                    },
                    {
                        "name":"锡山区"
                    },
                    {
                        "name":"惠山区"
                    },
                    {
                        "name":"江阴市"
                    },
                    {
                        "name":"宜兴市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"常州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"钟楼区"
                    },
                    {
                        "name":"天宁区"
                    },
                    {
                        "name":"戚墅堰区"
                    },
                    {
                        "name":"新北区"
                    },
                    {
                        "name":"武进区"
                    },
                    {
                        "name":"金坛市"
                    },
                    {
                        "name":"溧阳市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"镇江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"京口区"
                    },
                    {
                        "name":"润州区"
                    },
                    {
                        "name":"丹徒区"
                    },
                    {
                        "name":"丹阳市"
                    },
                    {
                        "name":"扬中市"
                    },
                    {
                        "name":"句容市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"南通",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"崇川区"
                    },
                    {
                        "name":"港闸区"
                    },
                    {
                        "name":"通州市"
                    },
                    {
                        "name":"如皋市"
                    },
                    {
                        "name":"海门市"
                    },
                    {
                        "name":"启东市"
                    },
                    {
                        "name":"海安县"
                    },
                    {
                        "name":"如东县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"泰州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海陵区"
                    },
                    {
                        "name":"高港区"
                    },
                    {
                        "name":"姜堰市"
                    },
                    {
                        "name":"泰兴市"
                    },
                    {
                        "name":"靖江市"
                    },
                    {
                        "name":"兴化市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"扬州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"广陵区"
                    },
                    {
                        "name":"维扬区"
                    },
                    {
                        "name":"邗江区"
                    },
                    {
                        "name":"江都市"
                    },
                    {
                        "name":"仪征市"
                    },
                    {
                        "name":"高邮市"
                    },
                    {
                        "name":"宝应县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"盐城",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"亭湖区"
                    },
                    {
                        "name":"盐都区"
                    },
                    {
                        "name":"大丰市"
                    },
                    {
                        "name":"东台市"
                    },
                    {
                        "name":"建湖县"
                    },
                    {
                        "name":"射阳县"
                    },
                    {
                        "name":"阜宁县"
                    },
                    {
                        "name":"滨海县"
                    },
                    {
                        "name":"响水县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"连云港",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"新浦区"
                    },
                    {
                        "name":"海州区"
                    },
                    {
                        "name":"连云区"
                    },
                    {
                        "name":"东海县"
                    },
                    {
                        "name":"灌云县"
                    },
                    {
                        "name":"赣榆县"
                    },
                    {
                        "name":"灌南县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"徐州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"云龙区"
                    },
                    {
                        "name":"鼓楼区"
                    },
                    {
                        "name":"九里区"
                    },
                    {
                        "name":"泉山区"
                    },
                    {
                        "name":"贾汪区"
                    },
                    {
                        "name":"邳州市"
                    },
                    {
                        "name":"新沂市"
                    },
                    {
                        "name":"铜山县"
                    },
                    {
                        "name":"睢宁县"
                    },
                    {
                        "name":"沛县"
                    },
                    {
                        "name":"丰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"淮安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"清河区"
                    },
                    {
                        "name":"清浦区"
                    },
                    {
                        "name":"楚州区"
                    },
                    {
                        "name":"淮阴区"
                    },
                    {
                        "name":"涟水县"
                    },
                    {
                        "name":"洪泽县"
                    },
                    {
                        "name":"金湖县"
                    },
                    {
                        "name":"盱眙县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宿迁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"宿城区"
                    },
                    {
                        "name":"宿豫区"
                    },
                    {
                        "name":"沭阳县"
                    },
                    {
                        "name":"泗阳县"
                    },
                    {
                        "name":"泗洪县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"湖北",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"武汉",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"江岸区"
                    },
                    {
                        "name":"武昌区"
                    },
                    {
                        "name":"江汉区"
                    },
                    {
                        "name":"硚口区"
                    },
                    {
                        "name":"汉阳区"
                    },
                    {
                        "name":"青山区"
                    },
                    {
                        "name":"洪山区"
                    },
                    {
                        "name":"东西湖区"
                    },
                    {
                        "name":"汉南区"
                    },
                    {
                        "name":"蔡甸区"
                    },
                    {
                        "name":"江夏区"
                    },
                    {
                        "name":"黄陂区"
                    },
                    {
                        "name":"新洲区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黄石",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"黄石港区"
                    },
                    {
                        "name":"西塞山区"
                    },
                    {
                        "name":"下陆区"
                    },
                    {
                        "name":"铁山区"
                    },
                    {
                        "name":"大冶市"
                    },
                    {
                        "name":"阳新县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"十堰",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"张湾区"
                    },
                    {
                        "name":"茅箭区"
                    },
                    {
                        "name":"丹江口市"
                    },
                    {
                        "name":"郧县"
                    },
                    {
                        "name":"竹山县"
                    },
                    {
                        "name":"房县"
                    },
                    {
                        "name":"郧西县"
                    },
                    {
                        "name":"竹溪县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"荆州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"沙市区"
                    },
                    {
                        "name":"荆州区"
                    },
                    {
                        "name":"洪湖市"
                    },
                    {
                        "name":"石首市"
                    },
                    {
                        "name":"松滋市"
                    },
                    {
                        "name":"监利县"
                    },
                    {
                        "name":"公安县"
                    },
                    {
                        "name":"江陵县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宜昌",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"西陵区"
                    },
                    {
                        "name":"伍家岗区"
                    },
                    {
                        "name":"点军区"
                    },
                    {
                        "name":"猇亭区"
                    },
                    {
                        "name":"夷陵区"
                    },
                    {
                        "name":"宜都市"
                    },
                    {
                        "name":"当阳市"
                    },
                    {
                        "name":"枝江市"
                    },
                    {
                        "name":"秭归县"
                    },
                    {
                        "name":"远安县"
                    },
                    {
                        "name":"兴山县"
                    },
                    {
                        "name":"五峰土家族自治县"
                    },
                    {
                        "name":"长阳土家族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"襄樊",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"襄城区"
                    },
                    {
                        "name":"樊城区"
                    },
                    {
                        "name":"襄阳区"
                    },
                    {
                        "name":"老河口市"
                    },
                    {
                        "name":"枣阳市"
                    },
                    {
                        "name":"宜城市"
                    },
                    {
                        "name":"南漳县"
                    },
                    {
                        "name":"谷城县"
                    },
                    {
                        "name":"保康县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鄂州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鄂城区"
                    },
                    {
                        "name":"华容区"
                    },
                    {
                        "name":"梁子湖区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"荆门",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东宝区"
                    },
                    {
                        "name":"掇刀区"
                    },
                    {
                        "name":"钟祥市"
                    },
                    {
                        "name":"京山县"
                    },
                    {
                        "name":"沙洋县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"孝感",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"孝南区"
                    },
                    {
                        "name":"应城市"
                    },
                    {
                        "name":"安陆市"
                    },
                    {
                        "name":"汉川市"
                    },
                    {
                        "name":"云梦县"
                    },
                    {
                        "name":"大悟县"
                    },
                    {
                        "name":"孝昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黄冈",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"黄州区"
                    },
                    {
                        "name":"麻城市"
                    },
                    {
                        "name":"武穴市"
                    },
                    {
                        "name":"红安县"
                    },
                    {
                        "name":"罗田县"
                    },
                    {
                        "name":"浠水县"
                    },
                    {
                        "name":"蕲春县"
                    },
                    {
                        "name":"黄梅县"
                    },
                    {
                        "name":"英山县"
                    },
                    {
                        "name":"团风县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"咸宁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"咸安区"
                    },
                    {
                        "name":"赤壁市"
                    },
                    {
                        "name":"嘉鱼县"
                    },
                    {
                        "name":"通山县"
                    },
                    {
                        "name":"崇阳县"
                    },
                    {
                        "name":"通城县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"随州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"曾都区"
                    },
                    {
                        "name":"广水市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"恩施土家族苗族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"恩施市"
                    },
                    {
                        "name":"利川市"
                    },
                    {
                        "name":"建始县"
                    },
                    {
                        "name":"来凤县"
                    },
                    {
                        "name":"巴东县"
                    },
                    {
                        "name":"鹤峰县"
                    },
                    {
                        "name":"宣恩县"
                    },
                    {
                        "name":"咸丰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"仙桃",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"天门",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"潜江",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"神农架林区",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"四川",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"成都",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"青羊区"
                    },
                    {
                        "name":"锦江区"
                    },
                    {
                        "name":"金牛区"
                    },
                    {
                        "name":"武侯区"
                    },
                    {
                        "name":"成华区"
                    },
                    {
                        "name":"龙泉驿区"
                    },
                    {
                        "name":"青白江区"
                    },
                    {
                        "name":"新都区"
                    },
                    {
                        "name":"温江区"
                    },
                    {
                        "name":"都江堰市"
                    },
                    {
                        "name":"彭州市"
                    },
                    {
                        "name":"邛崃市"
                    },
                    {
                        "name":"崇州市"
                    },
                    {
                        "name":"金堂县"
                    },
                    {
                        "name":"郫县"
                    },
                    {
                        "name":"新津县"
                    },
                    {
                        "name":"双流县"
                    },
                    {
                        "name":"蒲江县"
                    },
                    {
                        "name":"大邑县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"自贡",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"大安区"
                    },
                    {
                        "name":"自流井区"
                    },
                    {
                        "name":"贡井区"
                    },
                    {
                        "name":"沿滩区"
                    },
                    {
                        "name":"荣县"
                    },
                    {
                        "name":"富顺县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"攀枝花",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"仁和区"
                    },
                    {
                        "name":"米易县"
                    },
                    {
                        "name":"盐边县"
                    },
                    {
                        "name":"东区"
                    },
                    {
                        "name":"西区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"泸州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"江阳区"
                    },
                    {
                        "name":"纳溪区"
                    },
                    {
                        "name":"龙马潭区"
                    },
                    {
                        "name":"泸县"
                    },
                    {
                        "name":"合江县"
                    },
                    {
                        "name":"叙永县"
                    },
                    {
                        "name":"古蔺县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"德阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"旌阳区"
                    },
                    {
                        "name":"广汉市"
                    },
                    {
                        "name":"什邡市"
                    },
                    {
                        "name":"绵竹市"
                    },
                    {
                        "name":"罗江县"
                    },
                    {
                        "name":"中江县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"绵阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"涪城区"
                    },
                    {
                        "name":"游仙区"
                    },
                    {
                        "name":"江油市"
                    },
                    {
                        "name":"盐亭县"
                    },
                    {
                        "name":"三台县"
                    },
                    {
                        "name":"平武县"
                    },
                    {
                        "name":"安县"
                    },
                    {
                        "name":"梓潼县"
                    },
                    {
                        "name":"北川羌族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"广元",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"元坝区"
                    },
                    {
                        "name":"朝天区"
                    },
                    {
                        "name":"青川县"
                    },
                    {
                        "name":"旺苍县"
                    },
                    {
                        "name":"剑阁县"
                    },
                    {
                        "name":"苍溪县"
                    },
                    {
                        "name":"市中区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"遂宁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"船山区"
                    },
                    {
                        "name":"安居区"
                    },
                    {
                        "name":"射洪县"
                    },
                    {
                        "name":"蓬溪县"
                    },
                    {
                        "name":"大英县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"内江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"市中区"
                    },
                    {
                        "name":"东兴区"
                    },
                    {
                        "name":"资中县"
                    },
                    {
                        "name":"隆昌县"
                    },
                    {
                        "name":"威远县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"乐山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"市中区"
                    },
                    {
                        "name":"五通桥区"
                    },
                    {
                        "name":"沙湾区"
                    },
                    {
                        "name":"金口河区"
                    },
                    {
                        "name":"峨眉山市"
                    },
                    {
                        "name":"夹江县"
                    },
                    {
                        "name":"井研县"
                    },
                    {
                        "name":"犍为县"
                    },
                    {
                        "name":"沐川县"
                    },
                    {
                        "name":"马边彝族自治县"
                    },
                    {
                        "name":"峨边彝族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"南充",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"顺庆区"
                    },
                    {
                        "name":"高坪区"
                    },
                    {
                        "name":"嘉陵区"
                    },
                    {
                        "name":"阆中市"
                    },
                    {
                        "name":"营山县"
                    },
                    {
                        "name":"蓬安县"
                    },
                    {
                        "name":"仪陇县"
                    },
                    {
                        "name":"南部县"
                    },
                    {
                        "name":"西充县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"眉山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东坡区"
                    },
                    {
                        "name":"仁寿县"
                    },
                    {
                        "name":"彭山县"
                    },
                    {
                        "name":"洪雅县"
                    },
                    {
                        "name":"丹棱县"
                    },
                    {
                        "name":"青神县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宜宾",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"翠屏区"
                    },
                    {
                        "name":"宜宾县"
                    },
                    {
                        "name":"兴文县"
                    },
                    {
                        "name":"南溪县"
                    },
                    {
                        "name":"珙县"
                    },
                    {
                        "name":"长宁县"
                    },
                    {
                        "name":"高县"
                    },
                    {
                        "name":"江安县"
                    },
                    {
                        "name":"筠连县"
                    },
                    {
                        "name":"屏山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"广安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"广安区"
                    },
                    {
                        "name":"华蓥市"
                    },
                    {
                        "name":"岳池县"
                    },
                    {
                        "name":"邻水县"
                    },
                    {
                        "name":"武胜县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"达州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"通川区"
                    },
                    {
                        "name":"万源市"
                    },
                    {
                        "name":"达县"
                    },
                    {
                        "name":"渠县"
                    },
                    {
                        "name":"宣汉县"
                    },
                    {
                        "name":"开江县"
                    },
                    {
                        "name":"大竹县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"雅安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"雨城区"
                    },
                    {
                        "name":"芦山县"
                    },
                    {
                        "name":"石棉县"
                    },
                    {
                        "name":"名山县"
                    },
                    {
                        "name":"天全县"
                    },
                    {
                        "name":"荥经县"
                    },
                    {
                        "name":"宝兴县"
                    },
                    {
                        "name":"汉源县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"巴中",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"巴州区"
                    },
                    {
                        "name":"南江县"
                    },
                    {
                        "name":"平昌县"
                    },
                    {
                        "name":"通江县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"资阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"雁江区"
                    },
                    {
                        "name":"简阳市"
                    },
                    {
                        "name":"安岳县"
                    },
                    {
                        "name":"乐至县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阿坝藏族羌族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"马尔康县"
                    },
                    {
                        "name":"九寨沟县"
                    },
                    {
                        "name":"红原县"
                    },
                    {
                        "name":"汶川县"
                    },
                    {
                        "name":"阿坝县"
                    },
                    {
                        "name":"理县"
                    },
                    {
                        "name":"若尔盖县"
                    },
                    {
                        "name":"小金县"
                    },
                    {
                        "name":"黑水县"
                    },
                    {
                        "name":"金川县"
                    },
                    {
                        "name":"松潘县"
                    },
                    {
                        "name":"壤塘县"
                    },
                    {
                        "name":"茂县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"甘孜藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"康定县"
                    },
                    {
                        "name":"丹巴县"
                    },
                    {
                        "name":"炉霍县"
                    },
                    {
                        "name":"九龙县"
                    },
                    {
                        "name":"甘孜县"
                    },
                    {
                        "name":"雅江县"
                    },
                    {
                        "name":"新龙县"
                    },
                    {
                        "name":"道孚县"
                    },
                    {
                        "name":"白玉县"
                    },
                    {
                        "name":"理塘县"
                    },
                    {
                        "name":"德格县"
                    },
                    {
                        "name":"乡城县"
                    },
                    {
                        "name":"石渠县"
                    },
                    {
                        "name":"稻城县"
                    },
                    {
                        "name":"色达县"
                    },
                    {
                        "name":"巴塘县"
                    },
                    {
                        "name":"泸定县"
                    },
                    {
                        "name":"得荣县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"凉山彝族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"西昌市"
                    },
                    {
                        "name":"美姑县"
                    },
                    {
                        "name":"昭觉县"
                    },
                    {
                        "name":"金阳县"
                    },
                    {
                        "name":"甘洛县"
                    },
                    {
                        "name":"布拖县"
                    },
                    {
                        "name":"雷波县"
                    },
                    {
                        "name":"普格县"
                    },
                    {
                        "name":"宁南县"
                    },
                    {
                        "name":"喜德县"
                    },
                    {
                        "name":"会东县"
                    },
                    {
                        "name":"越西县"
                    },
                    {
                        "name":"会理县"
                    },
                    {
                        "name":"盐源县"
                    },
                    {
                        "name":"德昌县"
                    },
                    {
                        "name":"冕宁县"
                    },
                    {
                        "name":"木里藏族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"陕西",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"西安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"莲湖区"
                    },
                    {
                        "name":"新城区"
                    },
                    {
                        "name":"碑林区"
                    },
                    {
                        "name":"雁塔区"
                    },
                    {
                        "name":"灞桥区"
                    },
                    {
                        "name":"未央区"
                    },
                    {
                        "name":"阎良区"
                    },
                    {
                        "name":"临潼区"
                    },
                    {
                        "name":"长安区"
                    },
                    {
                        "name":"高陵县"
                    },
                    {
                        "name":"蓝田县"
                    },
                    {
                        "name":"户县"
                    },
                    {
                        "name":"周至县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"铜川",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"耀州区"
                    },
                    {
                        "name":"王益区"
                    },
                    {
                        "name":"印台区"
                    },
                    {
                        "name":"宜君县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宝鸡",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"渭滨区"
                    },
                    {
                        "name":"金台区"
                    },
                    {
                        "name":"陈仓区"
                    },
                    {
                        "name":"岐山县"
                    },
                    {
                        "name":"凤翔县"
                    },
                    {
                        "name":"陇县"
                    },
                    {
                        "name":"太白县"
                    },
                    {
                        "name":"麟游县"
                    },
                    {
                        "name":"扶风县"
                    },
                    {
                        "name":"千阳县"
                    },
                    {
                        "name":"眉县"
                    },
                    {
                        "name":"凤县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"咸阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"秦都区"
                    },
                    {
                        "name":"渭城区"
                    },
                    {
                        "name":"杨陵区"
                    },
                    {
                        "name":"兴平市"
                    },
                    {
                        "name":"礼泉县"
                    },
                    {
                        "name":"泾阳县"
                    },
                    {
                        "name":"永寿县"
                    },
                    {
                        "name":"三原县"
                    },
                    {
                        "name":"彬县"
                    },
                    {
                        "name":"旬邑县"
                    },
                    {
                        "name":"长武县"
                    },
                    {
                        "name":"乾县"
                    },
                    {
                        "name":"武功县"
                    },
                    {
                        "name":"淳化县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"渭南",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"临渭区"
                    },
                    {
                        "name":"韩城市"
                    },
                    {
                        "name":"华阴市"
                    },
                    {
                        "name":"蒲城县"
                    },
                    {
                        "name":"潼关县"
                    },
                    {
                        "name":"白水县"
                    },
                    {
                        "name":"澄城县"
                    },
                    {
                        "name":"华县"
                    },
                    {
                        "name":"合阳县"
                    },
                    {
                        "name":"富平县"
                    },
                    {
                        "name":"大荔县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"延安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"宝塔区"
                    },
                    {
                        "name":"安塞县"
                    },
                    {
                        "name":"洛川县"
                    },
                    {
                        "name":"子长县"
                    },
                    {
                        "name":"黄陵县"
                    },
                    {
                        "name":"延川县"
                    },
                    {
                        "name":"富县"
                    },
                    {
                        "name":"延长县"
                    },
                    {
                        "name":"甘泉县"
                    },
                    {
                        "name":"宜川县"
                    },
                    {
                        "name":"志丹县"
                    },
                    {
                        "name":"黄龙县"
                    },
                    {
                        "name":"吴起县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"汉中",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"汉台区"
                    },
                    {
                        "name":"留坝县"
                    },
                    {
                        "name":"镇巴县"
                    },
                    {
                        "name":"城固县"
                    },
                    {
                        "name":"南郑县"
                    },
                    {
                        "name":"洋县"
                    },
                    {
                        "name":"宁强县"
                    },
                    {
                        "name":"佛坪县"
                    },
                    {
                        "name":"勉县"
                    },
                    {
                        "name":"西乡县"
                    },
                    {
                        "name":"略阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"榆林",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"榆阳区"
                    },
                    {
                        "name":"清涧县"
                    },
                    {
                        "name":"绥德县"
                    },
                    {
                        "name":"神木县"
                    },
                    {
                        "name":"佳县"
                    },
                    {
                        "name":"府谷县"
                    },
                    {
                        "name":"子洲县"
                    },
                    {
                        "name":"靖边县"
                    },
                    {
                        "name":"横山县"
                    },
                    {
                        "name":"米脂县"
                    },
                    {
                        "name":"吴堡县"
                    },
                    {
                        "name":"定边县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"安康",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"汉滨区"
                    },
                    {
                        "name":"紫阳县"
                    },
                    {
                        "name":"岚皋县"
                    },
                    {
                        "name":"旬阳县"
                    },
                    {
                        "name":"镇坪县"
                    },
                    {
                        "name":"平利县"
                    },
                    {
                        "name":"石泉县"
                    },
                    {
                        "name":"宁陕县"
                    },
                    {
                        "name":"白河县"
                    },
                    {
                        "name":"汉阴县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"商洛",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"商州区"
                    },
                    {
                        "name":"镇安县"
                    },
                    {
                        "name":"山阳县"
                    },
                    {
                        "name":"洛南县"
                    },
                    {
                        "name":"商南县"
                    },
                    {
                        "name":"丹凤县"
                    },
                    {
                        "name":"柞水县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"河北",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"石家庄",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"长安区"
                    },
                    {
                        "name":"桥东区"
                    },
                    {
                        "name":"桥西区"
                    },
                    {
                        "name":"新华区"
                    },
                    {
                        "name":"裕华区"
                    },
                    {
                        "name":"井陉矿区"
                    },
                    {
                        "name":"鹿泉市"
                    },
                    {
                        "name":"辛集市"
                    },
                    {
                        "name":"藁城市"
                    },
                    {
                        "name":"晋州市"
                    },
                    {
                        "name":"新乐市"
                    },
                    {
                        "name":"深泽县"
                    },
                    {
                        "name":"无极县"
                    },
                    {
                        "name":"赵县"
                    },
                    {
                        "name":"灵寿县"
                    },
                    {
                        "name":"高邑县"
                    },
                    {
                        "name":"元氏县"
                    },
                    {
                        "name":"赞皇县"
                    },
                    {
                        "name":"平山县"
                    },
                    {
                        "name":"井陉县"
                    },
                    {
                        "name":"栾城县"
                    },
                    {
                        "name":"正定县"
                    },
                    {
                        "name":"行唐县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"唐山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"路北区"
                    },
                    {
                        "name":"路南区"
                    },
                    {
                        "name":"古冶区"
                    },
                    {
                        "name":"开平区"
                    },
                    {
                        "name":"丰南区"
                    },
                    {
                        "name":"丰润区"
                    },
                    {
                        "name":"遵化市"
                    },
                    {
                        "name":"迁安市"
                    },
                    {
                        "name":"迁西县"
                    },
                    {
                        "name":"滦南县"
                    },
                    {
                        "name":"玉田县"
                    },
                    {
                        "name":"唐海县"
                    },
                    {
                        "name":"乐亭县"
                    },
                    {
                        "name":"滦县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"秦皇岛",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海港区"
                    },
                    {
                        "name":"山海关区"
                    },
                    {
                        "name":"北戴河区"
                    },
                    {
                        "name":"昌黎县"
                    },
                    {
                        "name":"抚宁县"
                    },
                    {
                        "name":"卢龙县"
                    },
                    {
                        "name":"青龙满族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"邯郸",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"邯山区"
                    },
                    {
                        "name":"丛台区"
                    },
                    {
                        "name":"复兴区"
                    },
                    {
                        "name":"峰峰矿区"
                    },
                    {
                        "name":"武安市"
                    },
                    {
                        "name":"邱县"
                    },
                    {
                        "name":"大名县"
                    },
                    {
                        "name":"魏县"
                    },
                    {
                        "name":"曲周县"
                    },
                    {
                        "name":"鸡泽县"
                    },
                    {
                        "name":"肥乡县"
                    },
                    {
                        "name":"广平县"
                    },
                    {
                        "name":"成安县"
                    },
                    {
                        "name":"临漳县"
                    },
                    {
                        "name":"磁县"
                    },
                    {
                        "name":"涉县"
                    },
                    {
                        "name":"永年县"
                    },
                    {
                        "name":"馆陶县"
                    },
                    {
                        "name":"邯郸县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"邢台",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"桥东区"
                    },
                    {
                        "name":"桥西区"
                    },
                    {
                        "name":"南宫市"
                    },
                    {
                        "name":"沙河市"
                    },
                    {
                        "name":"临城县"
                    },
                    {
                        "name":"内丘县"
                    },
                    {
                        "name":"柏乡县"
                    },
                    {
                        "name":"隆尧县"
                    },
                    {
                        "name":"任县"
                    },
                    {
                        "name":"南和县"
                    },
                    {
                        "name":"宁晋县"
                    },
                    {
                        "name":"巨鹿县"
                    },
                    {
                        "name":"新河县"
                    },
                    {
                        "name":"广宗县"
                    },
                    {
                        "name":"平乡县"
                    },
                    {
                        "name":"威县"
                    },
                    {
                        "name":"清河县"
                    },
                    {
                        "name":"临西县"
                    },
                    {
                        "name":"邢台县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"保定",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"新市区"
                    },
                    {
                        "name":"北市区"
                    },
                    {
                        "name":"南市区"
                    },
                    {
                        "name":"定州市"
                    },
                    {
                        "name":"涿州市"
                    },
                    {
                        "name":"安国市"
                    },
                    {
                        "name":"高碑店市"
                    },
                    {
                        "name":"易县"
                    },
                    {
                        "name":"徐水县"
                    },
                    {
                        "name":"涞源县"
                    },
                    {
                        "name":"顺平县"
                    },
                    {
                        "name":"唐县"
                    },
                    {
                        "name":"望都县"
                    },
                    {
                        "name":"涞水县"
                    },
                    {
                        "name":"高阳县"
                    },
                    {
                        "name":"安新县"
                    },
                    {
                        "name":"雄县"
                    },
                    {
                        "name":"容城县"
                    },
                    {
                        "name":"蠡县"
                    },
                    {
                        "name":"曲阳县"
                    },
                    {
                        "name":"阜平县"
                    },
                    {
                        "name":"博野县"
                    },
                    {
                        "name":"满城县"
                    },
                    {
                        "name":"清苑县"
                    },
                    {
                        "name":"定兴县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"张家口",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"桥东区"
                    },
                    {
                        "name":"桥西区"
                    },
                    {
                        "name":"宣化区"
                    },
                    {
                        "name":"下花园区"
                    },
                    {
                        "name":"张北县"
                    },
                    {
                        "name":"康保县"
                    },
                    {
                        "name":"沽源县"
                    },
                    {
                        "name":"尚义县"
                    },
                    {
                        "name":"蔚县"
                    },
                    {
                        "name":"阳原县"
                    },
                    {
                        "name":"怀安县"
                    },
                    {
                        "name":"万全县"
                    },
                    {
                        "name":"怀来县"
                    },
                    {
                        "name":"赤城县"
                    },
                    {
                        "name":"崇礼县"
                    },
                    {
                        "name":"宣化县"
                    },
                    {
                        "name":"涿鹿县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"承德",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"双桥区"
                    },
                    {
                        "name":"双滦区"
                    },
                    {
                        "name":"鹰手营子矿区"
                    },
                    {
                        "name":"兴隆县"
                    },
                    {
                        "name":"平泉县"
                    },
                    {
                        "name":"滦平县"
                    },
                    {
                        "name":"隆化县"
                    },
                    {
                        "name":"承德县"
                    },
                    {
                        "name":"丰宁满族自治县"
                    },
                    {
                        "name":"宽城满族自治县"
                    },
                    {
                        "name":"围场满族蒙古族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"沧州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"新华区"
                    },
                    {
                        "name":"运河区"
                    },
                    {
                        "name":"泊头市"
                    },
                    {
                        "name":"任丘市"
                    },
                    {
                        "name":"黄骅市"
                    },
                    {
                        "name":"河间市"
                    },
                    {
                        "name":"献县"
                    },
                    {
                        "name":"吴桥县"
                    },
                    {
                        "name":"沧县"
                    },
                    {
                        "name":"东光县"
                    },
                    {
                        "name":"肃宁县"
                    },
                    {
                        "name":"南皮县"
                    },
                    {
                        "name":"盐山县"
                    },
                    {
                        "name":"青县"
                    },
                    {
                        "name":"海兴县"
                    },
                    {
                        "name":"孟村回族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"廊坊",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"安次区"
                    },
                    {
                        "name":"广阳区"
                    },
                    {
                        "name":"霸州市"
                    },
                    {
                        "name":"三河市"
                    },
                    {
                        "name":"香河县"
                    },
                    {
                        "name":"永清县"
                    },
                    {
                        "name":"固安县"
                    },
                    {
                        "name":"文安县"
                    },
                    {
                        "name":"大城县"
                    },
                    {
                        "name":"大厂回族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"衡水",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"桃城区"
                    },
                    {
                        "name":"冀州市"
                    },
                    {
                        "name":"深州市"
                    },
                    {
                        "name":"枣强县"
                    },
                    {
                        "name":"武邑县"
                    },
                    {
                        "name":"武强县"
                    },
                    {
                        "name":"饶阳县"
                    },
                    {
                        "name":"安平县"
                    },
                    {
                        "name":"故城县"
                    },
                    {
                        "name":"景县"
                    },
                    {
                        "name":"阜城县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"山西",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"太原",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"杏花岭区"
                    },
                    {
                        "name":"小店区"
                    },
                    {
                        "name":"迎泽区"
                    },
                    {
                        "name":"尖草坪区"
                    },
                    {
                        "name":"万柏林区"
                    },
                    {
                        "name":"晋源区"
                    },
                    {
                        "name":"古交市"
                    },
                    {
                        "name":"阳曲县"
                    },
                    {
                        "name":"清徐县"
                    },
                    {
                        "name":"娄烦县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"大同",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城区"
                    },
                    {
                        "name":"矿区"
                    },
                    {
                        "name":"南郊区"
                    },
                    {
                        "name":"新荣区"
                    },
                    {
                        "name":"大同县"
                    },
                    {
                        "name":"天镇县"
                    },
                    {
                        "name":"灵丘县"
                    },
                    {
                        "name":"阳高县"
                    },
                    {
                        "name":"左云县"
                    },
                    {
                        "name":"广灵县"
                    },
                    {
                        "name":"浑源县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阳泉",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城区"
                    },
                    {
                        "name":"矿区"
                    },
                    {
                        "name":"郊区"
                    },
                    {
                        "name":"平定县"
                    },
                    {
                        "name":"盂县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"长治",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城区"
                    },
                    {
                        "name":"郊区"
                    },
                    {
                        "name":"潞城市"
                    },
                    {
                        "name":"长治县"
                    },
                    {
                        "name":"长子县"
                    },
                    {
                        "name":"平顺县"
                    },
                    {
                        "name":"襄垣县"
                    },
                    {
                        "name":"沁源县"
                    },
                    {
                        "name":"屯留县"
                    },
                    {
                        "name":"黎城县"
                    },
                    {
                        "name":"武乡县"
                    },
                    {
                        "name":"沁县"
                    },
                    {
                        "name":"壶关县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"晋城",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城区"
                    },
                    {
                        "name":"高平市"
                    },
                    {
                        "name":"泽州县"
                    },
                    {
                        "name":"陵川县"
                    },
                    {
                        "name":"阳城县"
                    },
                    {
                        "name":"沁水县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"朔州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"朔城区"
                    },
                    {
                        "name":"平鲁区"
                    },
                    {
                        "name":"山阴县"
                    },
                    {
                        "name":"右玉县"
                    },
                    {
                        "name":"应县"
                    },
                    {
                        "name":"怀仁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"晋中",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"榆次区"
                    },
                    {
                        "name":"介休市"
                    },
                    {
                        "name":"昔阳县"
                    },
                    {
                        "name":"灵石县"
                    },
                    {
                        "name":"祁县"
                    },
                    {
                        "name":"左权县"
                    },
                    {
                        "name":"寿阳县"
                    },
                    {
                        "name":"太谷县"
                    },
                    {
                        "name":"和顺县"
                    },
                    {
                        "name":"平遥县"
                    },
                    {
                        "name":"榆社县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"运城",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"盐湖区"
                    },
                    {
                        "name":"河津市"
                    },
                    {
                        "name":"永济市"
                    },
                    {
                        "name":"闻喜县"
                    },
                    {
                        "name":"新绛县"
                    },
                    {
                        "name":"平陆县"
                    },
                    {
                        "name":"垣曲县"
                    },
                    {
                        "name":"绛县"
                    },
                    {
                        "name":"稷山县"
                    },
                    {
                        "name":"芮城县"
                    },
                    {
                        "name":"夏县"
                    },
                    {
                        "name":"万荣县"
                    },
                    {
                        "name":"临猗县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"忻州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"忻府区"
                    },
                    {
                        "name":"原平市"
                    },
                    {
                        "name":"代县"
                    },
                    {
                        "name":"神池县"
                    },
                    {
                        "name":"五寨县"
                    },
                    {
                        "name":"五台县"
                    },
                    {
                        "name":"偏关县"
                    },
                    {
                        "name":"宁武县"
                    },
                    {
                        "name":"静乐县"
                    },
                    {
                        "name":"繁峙县"
                    },
                    {
                        "name":"河曲县"
                    },
                    {
                        "name":"保德县"
                    },
                    {
                        "name":"定襄县"
                    },
                    {
                        "name":"岢岚县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"临汾",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"尧都区"
                    },
                    {
                        "name":"侯马市"
                    },
                    {
                        "name":"霍州市"
                    },
                    {
                        "name":"汾西县"
                    },
                    {
                        "name":"吉县"
                    },
                    {
                        "name":"安泽县"
                    },
                    {
                        "name":"大宁县"
                    },
                    {
                        "name":"浮山县"
                    },
                    {
                        "name":"古县"
                    },
                    {
                        "name":"隰县"
                    },
                    {
                        "name":"襄汾县"
                    },
                    {
                        "name":"翼城县"
                    },
                    {
                        "name":"永和县"
                    },
                    {
                        "name":"乡宁县"
                    },
                    {
                        "name":"曲沃县"
                    },
                    {
                        "name":"洪洞县"
                    },
                    {
                        "name":"蒲县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"吕梁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"离石区"
                    },
                    {
                        "name":"孝义市"
                    },
                    {
                        "name":"汾阳市"
                    },
                    {
                        "name":"文水县"
                    },
                    {
                        "name":"中阳县"
                    },
                    {
                        "name":"兴县"
                    },
                    {
                        "name":"临县"
                    },
                    {
                        "name":"方山县"
                    },
                    {
                        "name":"柳林县"
                    },
                    {
                        "name":"岚县"
                    },
                    {
                        "name":"交口县"
                    },
                    {
                        "name":"交城县"
                    },
                    {
                        "name":"石楼县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"河南",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"郑州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"中原区"
                    },
                    {
                        "name":"金水区"
                    },
                    {
                        "name":"二七区"
                    },
                    {
                        "name":"管城回族区"
                    },
                    {
                        "name":"上街区"
                    },
                    {
                        "name":"惠济区"
                    },
                    {
                        "name":"巩义市"
                    },
                    {
                        "name":"新郑市"
                    },
                    {
                        "name":"新密市"
                    },
                    {
                        "name":"登封市"
                    },
                    {
                        "name":"荥阳市"
                    },
                    {
                        "name":"中牟县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"开封",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鼓楼区"
                    },
                    {
                        "name":"龙亭区"
                    },
                    {
                        "name":"顺河回族区"
                    },
                    {
                        "name":"禹王台区"
                    },
                    {
                        "name":"金明区"
                    },
                    {
                        "name":"开封县"
                    },
                    {
                        "name":"尉氏县"
                    },
                    {
                        "name":"兰考县"
                    },
                    {
                        "name":"杞县"
                    },
                    {
                        "name":"通许县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"洛阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"西工区"
                    },
                    {
                        "name":"老城区"
                    },
                    {
                        "name":"涧西区"
                    },
                    {
                        "name":"瀍河回族区"
                    },
                    {
                        "name":"洛龙区"
                    },
                    {
                        "name":"吉利区"
                    },
                    {
                        "name":"偃师市"
                    },
                    {
                        "name":"孟津县"
                    },
                    {
                        "name":"汝阳县"
                    },
                    {
                        "name":"伊川县"
                    },
                    {
                        "name":"洛宁县"
                    },
                    {
                        "name":"嵩县"
                    },
                    {
                        "name":"宜阳县"
                    },
                    {
                        "name":"新安县"
                    },
                    {
                        "name":"栾川县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"平顶山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"新华区"
                    },
                    {
                        "name":"卫东区"
                    },
                    {
                        "name":"湛河区"
                    },
                    {
                        "name":"石龙区"
                    },
                    {
                        "name":"汝州市"
                    },
                    {
                        "name":"舞钢市"
                    },
                    {
                        "name":"宝丰县"
                    },
                    {
                        "name":"叶县"
                    },
                    {
                        "name":"郏县"
                    },
                    {
                        "name":"鲁山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"安阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"北关区"
                    },
                    {
                        "name":"文峰区"
                    },
                    {
                        "name":"殷都区"
                    },
                    {
                        "name":"龙安区"
                    },
                    {
                        "name":"林州市"
                    },
                    {
                        "name":"安阳县"
                    },
                    {
                        "name":"滑县"
                    },
                    {
                        "name":"内黄县"
                    },
                    {
                        "name":"汤阴县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鹤壁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"淇滨区"
                    },
                    {
                        "name":"山城区"
                    },
                    {
                        "name":"鹤山区"
                    },
                    {
                        "name":"浚县"
                    },
                    {
                        "name":"淇县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"新乡",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"卫滨区"
                    },
                    {
                        "name":"红旗区"
                    },
                    {
                        "name":"凤泉区"
                    },
                    {
                        "name":"牧野区"
                    },
                    {
                        "name":"卫辉市"
                    },
                    {
                        "name":"辉县市"
                    },
                    {
                        "name":"新乡县"
                    },
                    {
                        "name":"获嘉县"
                    },
                    {
                        "name":"原阳县"
                    },
                    {
                        "name":"长垣县"
                    },
                    {
                        "name":"封丘县"
                    },
                    {
                        "name":"延津县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"焦作",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"解放区"
                    },
                    {
                        "name":"中站区"
                    },
                    {
                        "name":"马村区"
                    },
                    {
                        "name":"山阳区"
                    },
                    {
                        "name":"沁阳市"
                    },
                    {
                        "name":"孟州市"
                    },
                    {
                        "name":"修武县"
                    },
                    {
                        "name":"温县"
                    },
                    {
                        "name":"武陟县"
                    },
                    {
                        "name":"博爱县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"濮阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"华龙区"
                    },
                    {
                        "name":"濮阳县"
                    },
                    {
                        "name":"南乐县"
                    },
                    {
                        "name":"台前县"
                    },
                    {
                        "name":"清丰县"
                    },
                    {
                        "name":"范县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"许昌",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"魏都区"
                    },
                    {
                        "name":"禹州市"
                    },
                    {
                        "name":"长葛市"
                    },
                    {
                        "name":"许昌县"
                    },
                    {
                        "name":"鄢陵县"
                    },
                    {
                        "name":"襄城县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"漯河",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"源汇区"
                    },
                    {
                        "name":"郾城区"
                    },
                    {
                        "name":"召陵区"
                    },
                    {
                        "name":"临颍县"
                    },
                    {
                        "name":"舞阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"三门峡",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"湖滨区"
                    },
                    {
                        "name":"义马市"
                    },
                    {
                        "name":"灵宝市"
                    },
                    {
                        "name":"渑池县"
                    },
                    {
                        "name":"卢氏县"
                    },
                    {
                        "name":"陕县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"南阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"卧龙区"
                    },
                    {
                        "name":"宛城区"
                    },
                    {
                        "name":"邓州市"
                    },
                    {
                        "name":"桐柏县"
                    },
                    {
                        "name":"方城县"
                    },
                    {
                        "name":"淅川县"
                    },
                    {
                        "name":"镇平县"
                    },
                    {
                        "name":"唐河县"
                    },
                    {
                        "name":"南召县"
                    },
                    {
                        "name":"内乡县"
                    },
                    {
                        "name":"新野县"
                    },
                    {
                        "name":"社旗县"
                    },
                    {
                        "name":"西峡县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"商丘",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"梁园区"
                    },
                    {
                        "name":"睢阳区"
                    },
                    {
                        "name":"永城市"
                    },
                    {
                        "name":"宁陵县"
                    },
                    {
                        "name":"虞城县"
                    },
                    {
                        "name":"民权县"
                    },
                    {
                        "name":"夏邑县"
                    },
                    {
                        "name":"柘城县"
                    },
                    {
                        "name":"睢县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"信阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"浉河区"
                    },
                    {
                        "name":"平桥区"
                    },
                    {
                        "name":"潢川县"
                    },
                    {
                        "name":"淮滨县"
                    },
                    {
                        "name":"息县"
                    },
                    {
                        "name":"新县"
                    },
                    {
                        "name":"商城县"
                    },
                    {
                        "name":"固始县"
                    },
                    {
                        "name":"罗山县"
                    },
                    {
                        "name":"光山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"周口",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"川汇区"
                    },
                    {
                        "name":"项城市"
                    },
                    {
                        "name":"商水县"
                    },
                    {
                        "name":"淮阳县"
                    },
                    {
                        "name":"太康县"
                    },
                    {
                        "name":"鹿邑县"
                    },
                    {
                        "name":"西华县"
                    },
                    {
                        "name":"扶沟县"
                    },
                    {
                        "name":"沈丘县"
                    },
                    {
                        "name":"郸城县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"驻马店",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"驿城区"
                    },
                    {
                        "name":"确山县"
                    },
                    {
                        "name":"新蔡县"
                    },
                    {
                        "name":"上蔡县"
                    },
                    {
                        "name":"西平县"
                    },
                    {
                        "name":"泌阳县"
                    },
                    {
                        "name":"平舆县"
                    },
                    {
                        "name":"汝南县"
                    },
                    {
                        "name":"遂平县"
                    },
                    {
                        "name":"正阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"焦作",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"济源市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"吉林",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"长春",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"朝阳区"
                    },
                    {
                        "name":"宽城区"
                    },
                    {
                        "name":"二道区"
                    },
                    {
                        "name":"南关区"
                    },
                    {
                        "name":"绿园区"
                    },
                    {
                        "name":"双阳区"
                    },
                    {
                        "name":"九台市"
                    },
                    {
                        "name":"榆树市"
                    },
                    {
                        "name":"德惠市"
                    },
                    {
                        "name":"农安县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"吉林",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"船营区"
                    },
                    {
                        "name":"昌邑区"
                    },
                    {
                        "name":"龙潭区"
                    },
                    {
                        "name":"丰满区"
                    },
                    {
                        "name":"舒兰市"
                    },
                    {
                        "name":"桦甸市"
                    },
                    {
                        "name":"蛟河市"
                    },
                    {
                        "name":"磐石市"
                    },
                    {
                        "name":"永吉县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"四平",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"铁西区"
                    },
                    {
                        "name":"铁东区"
                    },
                    {
                        "name":"公主岭市"
                    },
                    {
                        "name":"双辽市"
                    },
                    {
                        "name":"梨树县"
                    },
                    {
                        "name":"伊通满族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"辽源",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"龙山区"
                    },
                    {
                        "name":"西安区"
                    },
                    {
                        "name":"东辽县"
                    },
                    {
                        "name":"东丰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"通化",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东昌区"
                    },
                    {
                        "name":"二道江区"
                    },
                    {
                        "name":"梅河口市"
                    },
                    {
                        "name":"集安市"
                    },
                    {
                        "name":"通化县"
                    },
                    {
                        "name":"辉南县"
                    },
                    {
                        "name":"柳河县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"白山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"八道江区"
                    },
                    {
                        "name":"江源区"
                    },
                    {
                        "name":"临江市"
                    },
                    {
                        "name":"靖宇县"
                    },
                    {
                        "name":"抚松县"
                    },
                    {
                        "name":"长白朝鲜族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"松原",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"宁江区"
                    },
                    {
                        "name":"乾安县"
                    },
                    {
                        "name":"长岭县"
                    },
                    {
                        "name":"扶余县"
                    },
                    {
                        "name":"前郭尔罗斯蒙古族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"白城",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"洮北区"
                    },
                    {
                        "name":"大安市"
                    },
                    {
                        "name":"洮南市"
                    },
                    {
                        "name":"镇赉县"
                    },
                    {
                        "name":"通榆县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"延边朝鲜族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"延吉市"
                    },
                    {
                        "name":"图们市"
                    },
                    {
                        "name":"敦化市"
                    },
                    {
                        "name":"龙井市"
                    },
                    {
                        "name":"珲春市"
                    },
                    {
                        "name":"和龙市"
                    },
                    {
                        "name":"安图县"
                    },
                    {
                        "name":"汪清县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"黑龙江",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"哈尔滨",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"松北区"
                    },
                    {
                        "name":"道里区"
                    },
                    {
                        "name":"南岗区"
                    },
                    {
                        "name":"平房区"
                    },
                    {
                        "name":"香坊区"
                    },
                    {
                        "name":"道外区"
                    },
                    {
                        "name":"呼兰区"
                    },
                    {
                        "name":"阿城区"
                    },
                    {
                        "name":"双城市"
                    },
                    {
                        "name":"尚志市"
                    },
                    {
                        "name":"五常市"
                    },
                    {
                        "name":"宾县"
                    },
                    {
                        "name":"方正县"
                    },
                    {
                        "name":"通河县"
                    },
                    {
                        "name":"巴彦县"
                    },
                    {
                        "name":"延寿县"
                    },
                    {
                        "name":"木兰县"
                    },
                    {
                        "name":"依兰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"齐齐哈尔",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"龙沙区"
                    },
                    {
                        "name":"昂昂溪区"
                    },
                    {
                        "name":"铁锋区"
                    },
                    {
                        "name":"建华区"
                    },
                    {
                        "name":"富拉尔基区"
                    },
                    {
                        "name":"碾子山区"
                    },
                    {
                        "name":"梅里斯达斡尔族区"
                    },
                    {
                        "name":"讷河市"
                    },
                    {
                        "name":"富裕县"
                    },
                    {
                        "name":"拜泉县"
                    },
                    {
                        "name":"甘南县"
                    },
                    {
                        "name":"依安县"
                    },
                    {
                        "name":"克山县"
                    },
                    {
                        "name":"泰来县"
                    },
                    {
                        "name":"克东县"
                    },
                    {
                        "name":"龙江县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鹤岗",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"兴山区"
                    },
                    {
                        "name":"工农区"
                    },
                    {
                        "name":"南山区"
                    },
                    {
                        "name":"兴安区"
                    },
                    {
                        "name":"向阳区"
                    },
                    {
                        "name":"东山区"
                    },
                    {
                        "name":"萝北县"
                    },
                    {
                        "name":"绥滨县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"双鸭山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"尖山区"
                    },
                    {
                        "name":"岭东区"
                    },
                    {
                        "name":"四方台区"
                    },
                    {
                        "name":"宝山区"
                    },
                    {
                        "name":"集贤县"
                    },
                    {
                        "name":"宝清县"
                    },
                    {
                        "name":"友谊县"
                    },
                    {
                        "name":"饶河县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鸡西",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鸡冠区"
                    },
                    {
                        "name":"恒山区"
                    },
                    {
                        "name":"城子河区"
                    },
                    {
                        "name":"滴道区"
                    },
                    {
                        "name":"梨树区"
                    },
                    {
                        "name":"麻山区"
                    },
                    {
                        "name":"密山市"
                    },
                    {
                        "name":"虎林市"
                    },
                    {
                        "name":"鸡东县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"大庆",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"萨尔图区"
                    },
                    {
                        "name":"红岗区"
                    },
                    {
                        "name":"龙凤区"
                    },
                    {
                        "name":"让胡路区"
                    },
                    {
                        "name":"大同区"
                    },
                    {
                        "name":"林甸县"
                    },
                    {
                        "name":"肇州县"
                    },
                    {
                        "name":"肇源县"
                    },
                    {
                        "name":"杜尔伯特蒙古族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"伊春",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"伊春区"
                    },
                    {
                        "name":"带岭区"
                    },
                    {
                        "name":"南岔区"
                    },
                    {
                        "name":"金山屯区"
                    },
                    {
                        "name":"西林区"
                    },
                    {
                        "name":"美溪区"
                    },
                    {
                        "name":"乌马河区"
                    },
                    {
                        "name":"翠峦区"
                    },
                    {
                        "name":"友好区"
                    },
                    {
                        "name":"上甘岭区"
                    },
                    {
                        "name":"五营区"
                    },
                    {
                        "name":"红星区"
                    },
                    {
                        "name":"新青区"
                    },
                    {
                        "name":"汤旺河区"
                    },
                    {
                        "name":"乌伊岭区"
                    },
                    {
                        "name":"铁力市"
                    },
                    {
                        "name":"嘉荫县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"牡丹江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"爱民区"
                    },
                    {
                        "name":"东安区"
                    },
                    {
                        "name":"阳明区"
                    },
                    {
                        "name":"西安区"
                    },
                    {
                        "name":"绥芬河市"
                    },
                    {
                        "name":"宁安市"
                    },
                    {
                        "name":"海林市"
                    },
                    {
                        "name":"穆棱市"
                    },
                    {
                        "name":"林口县"
                    },
                    {
                        "name":"东宁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"佳木斯",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"向阳区"
                    },
                    {
                        "name":"前进区"
                    },
                    {
                        "name":"东风区"
                    },
                    {
                        "name":"郊区"
                    },
                    {
                        "name":"同江市"
                    },
                    {
                        "name":"富锦市"
                    },
                    {
                        "name":"桦川县"
                    },
                    {
                        "name":"抚远县"
                    },
                    {
                        "name":"桦南县"
                    },
                    {
                        "name":"汤原县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"七台河",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"桃山区"
                    },
                    {
                        "name":"新兴区"
                    },
                    {
                        "name":"茄子河区"
                    },
                    {
                        "name":"勃利县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黑河",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"爱辉区"
                    },
                    {
                        "name":"北安市"
                    },
                    {
                        "name":"五大连池市"
                    },
                    {
                        "name":"逊克县"
                    },
                    {
                        "name":"嫩江县"
                    },
                    {
                        "name":"孙吴县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"绥化",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"北林区"
                    },
                    {
                        "name":"安达市"
                    },
                    {
                        "name":"肇东市"
                    },
                    {
                        "name":"海伦市"
                    },
                    {
                        "name":"绥棱县"
                    },
                    {
                        "name":"兰西县"
                    },
                    {
                        "name":"明水县"
                    },
                    {
                        "name":"青冈县"
                    },
                    {
                        "name":"庆安县"
                    },
                    {
                        "name":"望奎县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"大兴安岭地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"呼玛县"
                    },
                    {
                        "name":"塔河县"
                    },
                    {
                        "name":"漠河县"
                    },
                    {
                        "name":"大兴安岭辖区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"内蒙古",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"呼和浩特",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"回民区"
                    },
                    {
                        "name":"玉泉区"
                    },
                    {
                        "name":"新城区"
                    },
                    {
                        "name":"赛罕区"
                    },
                    {
                        "name":"托克托县"
                    },
                    {
                        "name":"清水河县"
                    },
                    {
                        "name":"武川县"
                    },
                    {
                        "name":"和林格尔县"
                    },
                    {
                        "name":"土默特左旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"包头",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"昆都仑区"
                    },
                    {
                        "name":"青山区"
                    },
                    {
                        "name":"东河区"
                    },
                    {
                        "name":"九原区"
                    },
                    {
                        "name":"石拐区"
                    },
                    {
                        "name":"白云矿区"
                    },
                    {
                        "name":"固阳县"
                    },
                    {
                        "name":"土默特右旗"
                    },
                    {
                        "name":"达尔罕茂明安联合旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"乌海",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海勃湾区"
                    },
                    {
                        "name":"乌达区"
                    },
                    {
                        "name":"海南区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"赤峰",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"红山区"
                    },
                    {
                        "name":"元宝山区"
                    },
                    {
                        "name":"松山区"
                    },
                    {
                        "name":"宁城县"
                    },
                    {
                        "name":"林西县"
                    },
                    {
                        "name":"喀喇沁旗"
                    },
                    {
                        "name":"巴林左旗"
                    },
                    {
                        "name":"敖汉旗"
                    },
                    {
                        "name":"阿鲁科尔沁旗"
                    },
                    {
                        "name":"翁牛特旗"
                    },
                    {
                        "name":"克什克腾旗"
                    },
                    {
                        "name":"巴林右旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"通辽",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"科尔沁区"
                    },
                    {
                        "name":"霍林郭勒市"
                    },
                    {
                        "name":"开鲁县"
                    },
                    {
                        "name":"科尔沁左翼中旗"
                    },
                    {
                        "name":"科尔沁左翼后旗"
                    },
                    {
                        "name":"库伦旗"
                    },
                    {
                        "name":"奈曼旗"
                    },
                    {
                        "name":"扎鲁特旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鄂尔多斯",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东胜区"
                    },
                    {
                        "name":"准格尔旗"
                    },
                    {
                        "name":"乌审旗"
                    },
                    {
                        "name":"伊金霍洛旗"
                    },
                    {
                        "name":"鄂托克旗"
                    },
                    {
                        "name":"鄂托克前旗"
                    },
                    {
                        "name":"杭锦旗"
                    },
                    {
                        "name":"达拉特旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"呼伦贝尔",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海拉尔区"
                    },
                    {
                        "name":"满洲里市"
                    },
                    {
                        "name":"牙克石市"
                    },
                    {
                        "name":"扎兰屯市"
                    },
                    {
                        "name":"根河市"
                    },
                    {
                        "name":"额尔古纳市"
                    },
                    {
                        "name":"陈巴尔虎旗"
                    },
                    {
                        "name":"阿荣旗"
                    },
                    {
                        "name":"新巴尔虎左旗"
                    },
                    {
                        "name":"新巴尔虎右旗"
                    },
                    {
                        "name":"鄂伦春自治旗"
                    },
                    {
                        "name":"莫力达瓦达斡尔族自治旗"
                    },
                    {
                        "name":"鄂温克族自治旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"巴彦淖尔",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"临河区"
                    },
                    {
                        "name":"五原县"
                    },
                    {
                        "name":"磴口县"
                    },
                    {
                        "name":"杭锦后旗"
                    },
                    {
                        "name":"乌拉特中旗"
                    },
                    {
                        "name":"乌拉特前旗"
                    },
                    {
                        "name":"乌拉特后旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"乌兰察布",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"集宁区"
                    },
                    {
                        "name":"丰镇市"
                    },
                    {
                        "name":"兴和县"
                    },
                    {
                        "name":"卓资县"
                    },
                    {
                        "name":"商都县"
                    },
                    {
                        "name":"凉城县"
                    },
                    {
                        "name":"化德县"
                    },
                    {
                        "name":"四子王旗"
                    },
                    {
                        "name":"察哈尔右翼前旗"
                    },
                    {
                        "name":"察哈尔右翼中旗"
                    },
                    {
                        "name":"察哈尔右翼后旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"锡林郭勒盟",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"锡林浩特市"
                    },
                    {
                        "name":"二连浩特市"
                    },
                    {
                        "name":"多伦县"
                    },
                    {
                        "name":"阿巴嘎旗"
                    },
                    {
                        "name":"西乌珠穆沁旗"
                    },
                    {
                        "name":"东乌珠穆沁旗"
                    },
                    {
                        "name":"苏尼特左旗"
                    },
                    {
                        "name":"苏尼特右旗"
                    },
                    {
                        "name":"太仆寺旗"
                    },
                    {
                        "name":"正镶白旗"
                    },
                    {
                        "name":"正蓝旗"
                    },
                    {
                        "name":"镶黄旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"兴安盟",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"乌兰浩特市"
                    },
                    {
                        "name":"阿尔山市"
                    },
                    {
                        "name":"突泉县"
                    },
                    {
                        "name":"扎赉特旗"
                    },
                    {
                        "name":"科尔沁右翼前旗"
                    },
                    {
                        "name":"科尔沁右翼中旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阿拉善盟",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"阿拉善左旗"
                    },
                    {
                        "name":"阿拉善右旗"
                    },
                    {
                        "name":"额济纳旗"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"山东",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"济南",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"市中区"
                    },
                    {
                        "name":"历下区"
                    },
                    {
                        "name":"天桥区"
                    },
                    {
                        "name":"槐荫区"
                    },
                    {
                        "name":"历城区"
                    },
                    {
                        "name":"长清区"
                    },
                    {
                        "name":"章丘市"
                    },
                    {
                        "name":"平阴县"
                    },
                    {
                        "name":"济阳县"
                    },
                    {
                        "name":"商河县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"青岛",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"市南区"
                    },
                    {
                        "name":"市北区"
                    },
                    {
                        "name":"城阳区"
                    },
                    {
                        "name":"四方区"
                    },
                    {
                        "name":"李沧区"
                    },
                    {
                        "name":"黄岛区"
                    },
                    {
                        "name":"崂山区"
                    },
                    {
                        "name":"胶南市"
                    },
                    {
                        "name":"胶州市"
                    },
                    {
                        "name":"平度市"
                    },
                    {
                        "name":"莱西市"
                    },
                    {
                        "name":"即墨市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"淄博",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"张店区"
                    },
                    {
                        "name":"临淄区"
                    },
                    {
                        "name":"淄川区"
                    },
                    {
                        "name":"博山区"
                    },
                    {
                        "name":"周村区"
                    },
                    {
                        "name":"桓台县"
                    },
                    {
                        "name":"高青县"
                    },
                    {
                        "name":"沂源县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"枣庄",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"市中区"
                    },
                    {
                        "name":"山亭区"
                    },
                    {
                        "name":"峄城区"
                    },
                    {
                        "name":"台儿庄区"
                    },
                    {
                        "name":"薛城区"
                    },
                    {
                        "name":"滕州市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"东营",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东营区"
                    },
                    {
                        "name":"河口区"
                    },
                    {
                        "name":"垦利县"
                    },
                    {
                        "name":"广饶县"
                    },
                    {
                        "name":"利津县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"烟台",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"芝罘区"
                    },
                    {
                        "name":"福山区"
                    },
                    {
                        "name":"牟平区"
                    },
                    {
                        "name":"莱山区"
                    },
                    {
                        "name":"龙口市"
                    },
                    {
                        "name":"莱阳市"
                    },
                    {
                        "name":"莱州市"
                    },
                    {
                        "name":"招远市"
                    },
                    {
                        "name":"蓬莱市"
                    },
                    {
                        "name":"栖霞市"
                    },
                    {
                        "name":"海阳市"
                    },
                    {
                        "name":"长岛县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"潍坊",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"潍城区"
                    },
                    {
                        "name":"寒亭区"
                    },
                    {
                        "name":"坊子区"
                    },
                    {
                        "name":"奎文区"
                    },
                    {
                        "name":"青州市"
                    },
                    {
                        "name":"诸城市"
                    },
                    {
                        "name":"寿光市"
                    },
                    {
                        "name":"安丘市"
                    },
                    {
                        "name":"高密市"
                    },
                    {
                        "name":"昌邑市"
                    },
                    {
                        "name":"昌乐县"
                    },
                    {
                        "name":"临朐县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"济宁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"市中区"
                    },
                    {
                        "name":"任城区"
                    },
                    {
                        "name":"曲阜市"
                    },
                    {
                        "name":"兖州市"
                    },
                    {
                        "name":"邹城市"
                    },
                    {
                        "name":"鱼台县"
                    },
                    {
                        "name":"金乡县"
                    },
                    {
                        "name":"嘉祥县"
                    },
                    {
                        "name":"微山县"
                    },
                    {
                        "name":"汶上县"
                    },
                    {
                        "name":"泗水县"
                    },
                    {
                        "name":"梁山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"泰安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"泰山区"
                    },
                    {
                        "name":"岱岳区"
                    },
                    {
                        "name":"新泰市"
                    },
                    {
                        "name":"肥城市"
                    },
                    {
                        "name":"宁阳县"
                    },
                    {
                        "name":"东平县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"威海",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"环翠区"
                    },
                    {
                        "name":"乳山市"
                    },
                    {
                        "name":"文登市"
                    },
                    {
                        "name":"荣成市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"日照",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东港区"
                    },
                    {
                        "name":"岚山区"
                    },
                    {
                        "name":"五莲县"
                    },
                    {
                        "name":"莒县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"莱芜",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"莱城区"
                    },
                    {
                        "name":"钢城区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"临沂",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"兰山区"
                    },
                    {
                        "name":"罗庄区"
                    },
                    {
                        "name":"河东区"
                    },
                    {
                        "name":"沂南县"
                    },
                    {
                        "name":"郯城县"
                    },
                    {
                        "name":"沂水县"
                    },
                    {
                        "name":"苍山县"
                    },
                    {
                        "name":"费县"
                    },
                    {
                        "name":"平邑县"
                    },
                    {
                        "name":"莒南县"
                    },
                    {
                        "name":"蒙阴县"
                    },
                    {
                        "name":"临沭县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"德州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"德城区"
                    },
                    {
                        "name":"乐陵市"
                    },
                    {
                        "name":"禹城市"
                    },
                    {
                        "name":"陵县"
                    },
                    {
                        "name":"宁津县"
                    },
                    {
                        "name":"齐河县"
                    },
                    {
                        "name":"武城县"
                    },
                    {
                        "name":"庆云县"
                    },
                    {
                        "name":"平原县"
                    },
                    {
                        "name":"夏津县"
                    },
                    {
                        "name":"临邑县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"聊城",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东昌府区"
                    },
                    {
                        "name":"临清市"
                    },
                    {
                        "name":"高唐县"
                    },
                    {
                        "name":"阳谷县"
                    },
                    {
                        "name":"茌平县"
                    },
                    {
                        "name":"莘县"
                    },
                    {
                        "name":"东阿县"
                    },
                    {
                        "name":"冠县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"滨州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"滨城区"
                    },
                    {
                        "name":"邹平县"
                    },
                    {
                        "name":"沾化县"
                    },
                    {
                        "name":"惠民县"
                    },
                    {
                        "name":"博兴县"
                    },
                    {
                        "name":"阳信县"
                    },
                    {
                        "name":"无棣县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"菏泽",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"牡丹区"
                    },
                    {
                        "name":"鄄城县"
                    },
                    {
                        "name":"单县"
                    },
                    {
                        "name":"郓城县"
                    },
                    {
                        "name":"曹县"
                    },
                    {
                        "name":"定陶县"
                    },
                    {
                        "name":"巨野县"
                    },
                    {
                        "name":"东明县"
                    },
                    {
                        "name":"成武县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"安徽",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"合肥",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"庐阳区"
                    },
                    {
                        "name":"瑶海区"
                    },
                    {
                        "name":"蜀山区"
                    },
                    {
                        "name":"包河区"
                    },
                    {
                        "name":"长丰县"
                    },
                    {
                        "name":"肥东县"
                    },
                    {
                        "name":"肥西县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"芜湖",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"镜湖区"
                    },
                    {
                        "name":"弋江区"
                    },
                    {
                        "name":"鸠江区"
                    },
                    {
                        "name":"三山区"
                    },
                    {
                        "name":"芜湖县"
                    },
                    {
                        "name":"南陵县"
                    },
                    {
                        "name":"繁昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"蚌埠",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"蚌山区"
                    },
                    {
                        "name":"龙子湖区"
                    },
                    {
                        "name":"禹会区"
                    },
                    {
                        "name":"淮上区"
                    },
                    {
                        "name":"怀远县"
                    },
                    {
                        "name":"固镇县"
                    },
                    {
                        "name":"五河县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"淮南",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"田家庵区"
                    },
                    {
                        "name":"大通区"
                    },
                    {
                        "name":"谢家集区"
                    },
                    {
                        "name":"八公山区"
                    },
                    {
                        "name":"潘集区"
                    },
                    {
                        "name":"凤台县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"马鞍山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"雨山区"
                    },
                    {
                        "name":"花山区"
                    },
                    {
                        "name":"金家庄区"
                    },
                    {
                        "name":"当涂县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"淮北",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"相山区"
                    },
                    {
                        "name":"杜集区"
                    },
                    {
                        "name":"烈山区"
                    },
                    {
                        "name":"濉溪县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"铜陵",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"铜官山区"
                    },
                    {
                        "name":"狮子山区"
                    },
                    {
                        "name":"郊区"
                    },
                    {
                        "name":"铜陵县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"安庆",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"迎江区"
                    },
                    {
                        "name":"大观区"
                    },
                    {
                        "name":"宜秀区"
                    },
                    {
                        "name":"桐城市"
                    },
                    {
                        "name":"宿松县"
                    },
                    {
                        "name":"枞阳县"
                    },
                    {
                        "name":"太湖县"
                    },
                    {
                        "name":"怀宁县"
                    },
                    {
                        "name":"岳西县"
                    },
                    {
                        "name":"望江县"
                    },
                    {
                        "name":"潜山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黄山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"屯溪区"
                    },
                    {
                        "name":"黄山区"
                    },
                    {
                        "name":"徽州区"
                    },
                    {
                        "name":"休宁县"
                    },
                    {
                        "name":"歙县"
                    },
                    {
                        "name":"祁门县"
                    },
                    {
                        "name":"黟县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"滁州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"琅琊区"
                    },
                    {
                        "name":"南谯区"
                    },
                    {
                        "name":"天长市"
                    },
                    {
                        "name":"明光市"
                    },
                    {
                        "name":"全椒县"
                    },
                    {
                        "name":"来安县"
                    },
                    {
                        "name":"定远县"
                    },
                    {
                        "name":"凤阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阜阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"颍州区"
                    },
                    {
                        "name":"颍东区"
                    },
                    {
                        "name":"颍泉区"
                    },
                    {
                        "name":"界首市"
                    },
                    {
                        "name":"临泉县"
                    },
                    {
                        "name":"颍上县"
                    },
                    {
                        "name":"阜南县"
                    },
                    {
                        "name":"太和县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宿州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"埇桥区"
                    },
                    {
                        "name":"萧县"
                    },
                    {
                        "name":"泗县"
                    },
                    {
                        "name":"砀山县"
                    },
                    {
                        "name":"灵璧县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"巢湖",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"居巢区"
                    },
                    {
                        "name":"含山县"
                    },
                    {
                        "name":"无为县"
                    },
                    {
                        "name":"庐江县"
                    },
                    {
                        "name":"和县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"六安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"金安区"
                    },
                    {
                        "name":"裕安区"
                    },
                    {
                        "name":"寿县"
                    },
                    {
                        "name":"霍山县"
                    },
                    {
                        "name":"霍邱县"
                    },
                    {
                        "name":"舒城县"
                    },
                    {
                        "name":"金寨县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"亳州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"谯城区"
                    },
                    {
                        "name":"利辛县"
                    },
                    {
                        "name":"涡阳县"
                    },
                    {
                        "name":"蒙城县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"池州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"贵池区"
                    },
                    {
                        "name":"东至县"
                    },
                    {
                        "name":"石台县"
                    },
                    {
                        "name":"青阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宣城",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"宣州区"
                    },
                    {
                        "name":"宁国市"
                    },
                    {
                        "name":"广德县"
                    },
                    {
                        "name":"郎溪县"
                    },
                    {
                        "name":"泾县"
                    },
                    {
                        "name":"旌德县"
                    },
                    {
                        "name":"绩溪县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"浙江",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"杭州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"拱墅区"
                    },
                    {
                        "name":"西湖区"
                    },
                    {
                        "name":"上城区"
                    },
                    {
                        "name":"下城区"
                    },
                    {
                        "name":"江干区"
                    },
                    {
                        "name":"滨江区"
                    },
                    {
                        "name":"余杭区"
                    },
                    {
                        "name":"萧山区"
                    },
                    {
                        "name":"建德市"
                    },
                    {
                        "name":"富阳市"
                    },
                    {
                        "name":"临安市"
                    },
                    {
                        "name":"桐庐县"
                    },
                    {
                        "name":"淳安县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宁波",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海曙区"
                    },
                    {
                        "name":"江东区"
                    },
                    {
                        "name":"江北区"
                    },
                    {
                        "name":"镇海区"
                    },
                    {
                        "name":"北仑区"
                    },
                    {
                        "name":"鄞州区"
                    },
                    {
                        "name":"余姚市"
                    },
                    {
                        "name":"慈溪市"
                    },
                    {
                        "name":"奉化市"
                    },
                    {
                        "name":"宁海县"
                    },
                    {
                        "name":"象山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"温州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鹿城区"
                    },
                    {
                        "name":"龙湾区"
                    },
                    {
                        "name":"瓯海区"
                    },
                    {
                        "name":"瑞安市"
                    },
                    {
                        "name":"乐清市"
                    },
                    {
                        "name":"永嘉县"
                    },
                    {
                        "name":"洞头县"
                    },
                    {
                        "name":"平阳县"
                    },
                    {
                        "name":"苍南县"
                    },
                    {
                        "name":"文成县"
                    },
                    {
                        "name":"泰顺县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"嘉兴",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"秀城区"
                    },
                    {
                        "name":"秀洲区"
                    },
                    {
                        "name":"海宁市"
                    },
                    {
                        "name":"平湖市"
                    },
                    {
                        "name":"桐乡市"
                    },
                    {
                        "name":"嘉善县"
                    },
                    {
                        "name":"海盐县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"湖州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"吴兴区"
                    },
                    {
                        "name":"南浔区"
                    },
                    {
                        "name":"长兴县"
                    },
                    {
                        "name":"德清县"
                    },
                    {
                        "name":"安吉县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"绍兴",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"越城区"
                    },
                    {
                        "name":"诸暨市"
                    },
                    {
                        "name":"上虞市"
                    },
                    {
                        "name":"嵊州市"
                    },
                    {
                        "name":"绍兴县"
                    },
                    {
                        "name":"新昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"金华",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"婺城区"
                    },
                    {
                        "name":"金东区"
                    },
                    {
                        "name":"兰溪市"
                    },
                    {
                        "name":"义乌市"
                    },
                    {
                        "name":"东阳市"
                    },
                    {
                        "name":"永康市"
                    },
                    {
                        "name":"武义县"
                    },
                    {
                        "name":"浦江县"
                    },
                    {
                        "name":"磐安县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"衢州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"柯城区"
                    },
                    {
                        "name":"衢江区"
                    },
                    {
                        "name":"江山市"
                    },
                    {
                        "name":"龙游县"
                    },
                    {
                        "name":"常山县"
                    },
                    {
                        "name":"开化县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"舟山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"定海区"
                    },
                    {
                        "name":"普陀区"
                    },
                    {
                        "name":"岱山县"
                    },
                    {
                        "name":"嵊泗县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"台州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"椒江区"
                    },
                    {
                        "name":"黄岩区"
                    },
                    {
                        "name":"路桥区"
                    },
                    {
                        "name":"临海市"
                    },
                    {
                        "name":"温岭市"
                    },
                    {
                        "name":"玉环县"
                    },
                    {
                        "name":"天台县"
                    },
                    {
                        "name":"仙居县"
                    },
                    {
                        "name":"三门县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"丽水",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"莲都区"
                    },
                    {
                        "name":"龙泉市"
                    },
                    {
                        "name":"缙云县"
                    },
                    {
                        "name":"青田县"
                    },
                    {
                        "name":"云和县"
                    },
                    {
                        "name":"遂昌县"
                    },
                    {
                        "name":"松阳县"
                    },
                    {
                        "name":"庆元县"
                    },
                    {
                        "name":"景宁畲族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"福建",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"福州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鼓楼区"
                    },
                    {
                        "name":"台江区"
                    },
                    {
                        "name":"仓山区"
                    },
                    {
                        "name":"马尾区"
                    },
                    {
                        "name":"晋安区"
                    },
                    {
                        "name":"福清市"
                    },
                    {
                        "name":"长乐市"
                    },
                    {
                        "name":"闽侯县"
                    },
                    {
                        "name":"闽清县"
                    },
                    {
                        "name":"永泰县"
                    },
                    {
                        "name":"连江县"
                    },
                    {
                        "name":"罗源县"
                    },
                    {
                        "name":"平潭县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"厦门",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"思明区"
                    },
                    {
                        "name":"海沧区"
                    },
                    {
                        "name":"湖里区"
                    },
                    {
                        "name":"集美区"
                    },
                    {
                        "name":"同安区"
                    },
                    {
                        "name":"翔安区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"莆田",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城厢区"
                    },
                    {
                        "name":"涵江区"
                    },
                    {
                        "name":"荔城区"
                    },
                    {
                        "name":"秀屿区"
                    },
                    {
                        "name":"仙游县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"三明",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"梅列区"
                    },
                    {
                        "name":"三元区"
                    },
                    {
                        "name":"永安市"
                    },
                    {
                        "name":"明溪县"
                    },
                    {
                        "name":"将乐县"
                    },
                    {
                        "name":"大田县"
                    },
                    {
                        "name":"宁化县"
                    },
                    {
                        "name":"建宁县"
                    },
                    {
                        "name":"沙县"
                    },
                    {
                        "name":"尤溪县"
                    },
                    {
                        "name":"清流县"
                    },
                    {
                        "name":"泰宁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"泉州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鲤城区"
                    },
                    {
                        "name":"丰泽区"
                    },
                    {
                        "name":"洛江区"
                    },
                    {
                        "name":"泉港区"
                    },
                    {
                        "name":"石狮市"
                    },
                    {
                        "name":"晋江市"
                    },
                    {
                        "name":"南安市"
                    },
                    {
                        "name":"惠安县"
                    },
                    {
                        "name":"永春县"
                    },
                    {
                        "name":"安溪县"
                    },
                    {
                        "name":"德化县"
                    },
                    {
                        "name":"金门县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"漳州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"芗城区"
                    },
                    {
                        "name":"龙文区"
                    },
                    {
                        "name":"龙海市"
                    },
                    {
                        "name":"平和县"
                    },
                    {
                        "name":"南靖县"
                    },
                    {
                        "name":"诏安县"
                    },
                    {
                        "name":"漳浦县"
                    },
                    {
                        "name":"华安县"
                    },
                    {
                        "name":"东山县"
                    },
                    {
                        "name":"长泰县"
                    },
                    {
                        "name":"云霄县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"南平",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"延平区"
                    },
                    {
                        "name":"建瓯市"
                    },
                    {
                        "name":"邵武市"
                    },
                    {
                        "name":"武夷山市"
                    },
                    {
                        "name":"建阳市"
                    },
                    {
                        "name":"松溪县"
                    },
                    {
                        "name":"光泽县"
                    },
                    {
                        "name":"顺昌县"
                    },
                    {
                        "name":"浦城县"
                    },
                    {
                        "name":"政和县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"龙岩",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"新罗区"
                    },
                    {
                        "name":"漳平市"
                    },
                    {
                        "name":"长汀县"
                    },
                    {
                        "name":"武平县"
                    },
                    {
                        "name":"上杭县"
                    },
                    {
                        "name":"永定县"
                    },
                    {
                        "name":"连城县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宁德",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"蕉城区"
                    },
                    {
                        "name":"福安市"
                    },
                    {
                        "name":"福鼎市"
                    },
                    {
                        "name":"寿宁县"
                    },
                    {
                        "name":"霞浦县"
                    },
                    {
                        "name":"柘荣县"
                    },
                    {
                        "name":"屏南县"
                    },
                    {
                        "name":"古田县"
                    },
                    {
                        "name":"周宁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"湖南",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"长沙",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"岳麓区"
                    },
                    {
                        "name":"芙蓉区"
                    },
                    {
                        "name":"天心区"
                    },
                    {
                        "name":"开福区"
                    },
                    {
                        "name":"雨花区"
                    },
                    {
                        "name":"浏阳市"
                    },
                    {
                        "name":"长沙县"
                    },
                    {
                        "name":"望城县"
                    },
                    {
                        "name":"宁乡县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"株洲",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"天元区"
                    },
                    {
                        "name":"荷塘区"
                    },
                    {
                        "name":"芦淞区"
                    },
                    {
                        "name":"石峰区"
                    },
                    {
                        "name":"醴陵市"
                    },
                    {
                        "name":"株洲县"
                    },
                    {
                        "name":"炎陵县"
                    },
                    {
                        "name":"茶陵县"
                    },
                    {
                        "name":"攸县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"湘潭",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"岳塘区"
                    },
                    {
                        "name":"雨湖区"
                    },
                    {
                        "name":"湘乡市"
                    },
                    {
                        "name":"韶山市"
                    },
                    {
                        "name":"湘潭县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"衡阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"雁峰区"
                    },
                    {
                        "name":"珠晖区"
                    },
                    {
                        "name":"石鼓区"
                    },
                    {
                        "name":"蒸湘区"
                    },
                    {
                        "name":"南岳区"
                    },
                    {
                        "name":"耒阳市"
                    },
                    {
                        "name":"常宁市"
                    },
                    {
                        "name":"衡阳县"
                    },
                    {
                        "name":"衡东县"
                    },
                    {
                        "name":"衡山县"
                    },
                    {
                        "name":"衡南县"
                    },
                    {
                        "name":"祁东县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"邵阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"双清区"
                    },
                    {
                        "name":"大祥区"
                    },
                    {
                        "name":"北塔区"
                    },
                    {
                        "name":"武冈市"
                    },
                    {
                        "name":"邵东县"
                    },
                    {
                        "name":"洞口县"
                    },
                    {
                        "name":"新邵县"
                    },
                    {
                        "name":"绥宁县"
                    },
                    {
                        "name":"新宁县"
                    },
                    {
                        "name":"邵阳县"
                    },
                    {
                        "name":"隆回县"
                    },
                    {
                        "name":"城步苗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"岳阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"岳阳楼区"
                    },
                    {
                        "name":"云溪区"
                    },
                    {
                        "name":"君山区"
                    },
                    {
                        "name":"临湘市"
                    },
                    {
                        "name":"汨罗市"
                    },
                    {
                        "name":"岳阳县"
                    },
                    {
                        "name":"湘阴县"
                    },
                    {
                        "name":"平江县"
                    },
                    {
                        "name":"华容县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"常德",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"武陵区"
                    },
                    {
                        "name":"鼎城区"
                    },
                    {
                        "name":"津市市"
                    },
                    {
                        "name":"澧县"
                    },
                    {
                        "name":"临澧县"
                    },
                    {
                        "name":"桃源县"
                    },
                    {
                        "name":"汉寿县"
                    },
                    {
                        "name":"安乡县"
                    },
                    {
                        "name":"石门县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"张家界",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"永定区"
                    },
                    {
                        "name":"武陵源区"
                    },
                    {
                        "name":"慈利县"
                    },
                    {
                        "name":"桑植县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"益阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"赫山区"
                    },
                    {
                        "name":"资阳区"
                    },
                    {
                        "name":"沅江市"
                    },
                    {
                        "name":"桃江县"
                    },
                    {
                        "name":"南县"
                    },
                    {
                        "name":"安化县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"郴州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"北湖区"
                    },
                    {
                        "name":"苏仙区"
                    },
                    {
                        "name":"资兴市"
                    },
                    {
                        "name":"宜章县"
                    },
                    {
                        "name":"汝城县"
                    },
                    {
                        "name":"安仁县"
                    },
                    {
                        "name":"嘉禾县"
                    },
                    {
                        "name":"临武县"
                    },
                    {
                        "name":"桂东县"
                    },
                    {
                        "name":"永兴县"
                    },
                    {
                        "name":"桂阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"永州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"冷水滩区"
                    },
                    {
                        "name":"零陵区"
                    },
                    {
                        "name":"祁阳县"
                    },
                    {
                        "name":"蓝山县"
                    },
                    {
                        "name":"宁远县"
                    },
                    {
                        "name":"新田县"
                    },
                    {
                        "name":"东安县"
                    },
                    {
                        "name":"江永县"
                    },
                    {
                        "name":"道县"
                    },
                    {
                        "name":"双牌县"
                    },
                    {
                        "name":"江华瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"怀化",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"鹤城区"
                    },
                    {
                        "name":"洪江市"
                    },
                    {
                        "name":"会同县"
                    },
                    {
                        "name":"沅陵县"
                    },
                    {
                        "name":"辰溪县"
                    },
                    {
                        "name":"溆浦县"
                    },
                    {
                        "name":"中方县"
                    },
                    {
                        "name":"新晃侗族自治县"
                    },
                    {
                        "name":"芷江侗族自治县"
                    },
                    {
                        "name":"通道侗族自治县"
                    },
                    {
                        "name":"靖州苗族侗族自治县"
                    },
                    {
                        "name":"麻阳苗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"娄底",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"娄星区"
                    },
                    {
                        "name":"冷水江市"
                    },
                    {
                        "name":"涟源市"
                    },
                    {
                        "name":"新化县"
                    },
                    {
                        "name":"双峰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"湘西土家族苗族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"吉首市"
                    },
                    {
                        "name":"古丈县"
                    },
                    {
                        "name":"龙山县"
                    },
                    {
                        "name":"永顺县"
                    },
                    {
                        "name":"凤凰县"
                    },
                    {
                        "name":"泸溪县"
                    },
                    {
                        "name":"保靖县"
                    },
                    {
                        "name":"花垣县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"广西",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"南宁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"青秀区"
                    },
                    {
                        "name":"兴宁区"
                    },
                    {
                        "name":"西乡塘区"
                    },
                    {
                        "name":"良庆区"
                    },
                    {
                        "name":"江南区"
                    },
                    {
                        "name":"邕宁区"
                    },
                    {
                        "name":"武鸣县"
                    },
                    {
                        "name":"隆安县"
                    },
                    {
                        "name":"马山县"
                    },
                    {
                        "name":"上林县"
                    },
                    {
                        "name":"宾阳县"
                    },
                    {
                        "name":"横县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"柳州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城中区"
                    },
                    {
                        "name":"鱼峰区"
                    },
                    {
                        "name":"柳北区"
                    },
                    {
                        "name":"柳南区"
                    },
                    {
                        "name":"柳江县"
                    },
                    {
                        "name":"柳城县"
                    },
                    {
                        "name":"鹿寨县"
                    },
                    {
                        "name":"融安县"
                    },
                    {
                        "name":"融水苗族自治县"
                    },
                    {
                        "name":"三江侗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"桂林",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"象山区"
                    },
                    {
                        "name":"秀峰区"
                    },
                    {
                        "name":"叠彩区"
                    },
                    {
                        "name":"七星区"
                    },
                    {
                        "name":"雁山区"
                    },
                    {
                        "name":"阳朔县"
                    },
                    {
                        "name":"临桂县"
                    },
                    {
                        "name":"灵川县"
                    },
                    {
                        "name":"全州县"
                    },
                    {
                        "name":"平乐县"
                    },
                    {
                        "name":"兴安县"
                    },
                    {
                        "name":"灌阳县"
                    },
                    {
                        "name":"荔浦县"
                    },
                    {
                        "name":"资源县"
                    },
                    {
                        "name":"永福县"
                    },
                    {
                        "name":"龙胜各族自治县"
                    },
                    {
                        "name":"恭城瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"梧州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"万秀区"
                    },
                    {
                        "name":"蝶山区"
                    },
                    {
                        "name":"长洲区"
                    },
                    {
                        "name":"岑溪市"
                    },
                    {
                        "name":"苍梧县"
                    },
                    {
                        "name":"藤县"
                    },
                    {
                        "name":"蒙山县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"北海",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海城区"
                    },
                    {
                        "name":"银海区"
                    },
                    {
                        "name":"铁山港区"
                    },
                    {
                        "name":"合浦县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"防城港",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"港口区"
                    },
                    {
                        "name":"防城区"
                    },
                    {
                        "name":"东兴市"
                    },
                    {
                        "name":"上思县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"钦州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"钦南区"
                    },
                    {
                        "name":"钦北区"
                    },
                    {
                        "name":"灵山县"
                    },
                    {
                        "name":"浦北县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"贵港",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"港北区"
                    },
                    {
                        "name":"港南区"
                    },
                    {
                        "name":"覃塘区"
                    },
                    {
                        "name":"桂平市"
                    },
                    {
                        "name":"平南县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"玉林",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"玉州区"
                    },
                    {
                        "name":"北流市"
                    },
                    {
                        "name":"容县"
                    },
                    {
                        "name":"陆川县"
                    },
                    {
                        "name":"博白县"
                    },
                    {
                        "name":"兴业县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"百色",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"右江区"
                    },
                    {
                        "name":"凌云县"
                    },
                    {
                        "name":"平果县"
                    },
                    {
                        "name":"西林县"
                    },
                    {
                        "name":"乐业县"
                    },
                    {
                        "name":"德保县"
                    },
                    {
                        "name":"田林县"
                    },
                    {
                        "name":"田阳县"
                    },
                    {
                        "name":"靖西县"
                    },
                    {
                        "name":"田东县"
                    },
                    {
                        "name":"那坡县"
                    },
                    {
                        "name":"隆林各族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"贺州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"八步区"
                    },
                    {
                        "name":"钟山县"
                    },
                    {
                        "name":"昭平县"
                    },
                    {
                        "name":"富川瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"河池",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"金城江区"
                    },
                    {
                        "name":"宜州市"
                    },
                    {
                        "name":"天峨县"
                    },
                    {
                        "name":"凤山县"
                    },
                    {
                        "name":"南丹县"
                    },
                    {
                        "name":"东兰县"
                    },
                    {
                        "name":"都安瑶族自治县"
                    },
                    {
                        "name":"罗城仫佬族自治县"
                    },
                    {
                        "name":"巴马瑶族自治县"
                    },
                    {
                        "name":"环江毛南族自治县"
                    },
                    {
                        "name":"大化瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"来宾",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"兴宾区"
                    },
                    {
                        "name":"合山市"
                    },
                    {
                        "name":"象州县"
                    },
                    {
                        "name":"武宣县"
                    },
                    {
                        "name":"忻城县"
                    },
                    {
                        "name":"金秀瑶族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"崇左",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"江州区"
                    },
                    {
                        "name":"凭祥市"
                    },
                    {
                        "name":"宁明县"
                    },
                    {
                        "name":"扶绥县"
                    },
                    {
                        "name":"龙州县"
                    },
                    {
                        "name":"大新县"
                    },
                    {
                        "name":"天等县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"江西",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"南昌",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"东湖区"
                    },
                    {
                        "name":"西湖区"
                    },
                    {
                        "name":"青云谱区"
                    },
                    {
                        "name":"湾里区"
                    },
                    {
                        "name":"青山湖区"
                    },
                    {
                        "name":"新建县"
                    },
                    {
                        "name":"南昌县"
                    },
                    {
                        "name":"进贤县"
                    },
                    {
                        "name":"安义县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"景德镇",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"珠山区"
                    },
                    {
                        "name":"昌江区"
                    },
                    {
                        "name":"乐平市"
                    },
                    {
                        "name":"浮梁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"萍乡",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"安源区"
                    },
                    {
                        "name":"湘东区"
                    },
                    {
                        "name":"莲花县"
                    },
                    {
                        "name":"上栗县"
                    },
                    {
                        "name":"芦溪县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"九江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"浔阳区"
                    },
                    {
                        "name":"庐山区"
                    },
                    {
                        "name":"瑞昌市"
                    },
                    {
                        "name":"九江县"
                    },
                    {
                        "name":"星子县"
                    },
                    {
                        "name":"武宁县"
                    },
                    {
                        "name":"彭泽县"
                    },
                    {
                        "name":"永修县"
                    },
                    {
                        "name":"修水县"
                    },
                    {
                        "name":"湖口县"
                    },
                    {
                        "name":"德安县"
                    },
                    {
                        "name":"都昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"新余",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"渝水区"
                    },
                    {
                        "name":"分宜县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"鹰潭",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"月湖区"
                    },
                    {
                        "name":"贵溪市"
                    },
                    {
                        "name":"余江县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"赣州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"章贡区"
                    },
                    {
                        "name":"瑞金市"
                    },
                    {
                        "name":"南康市"
                    },
                    {
                        "name":"石城县"
                    },
                    {
                        "name":"安远县"
                    },
                    {
                        "name":"赣县"
                    },
                    {
                        "name":"宁都县"
                    },
                    {
                        "name":"寻乌县"
                    },
                    {
                        "name":"兴国县"
                    },
                    {
                        "name":"定南县"
                    },
                    {
                        "name":"上犹县"
                    },
                    {
                        "name":"于都县"
                    },
                    {
                        "name":"龙南县"
                    },
                    {
                        "name":"崇义县"
                    },
                    {
                        "name":"信丰县"
                    },
                    {
                        "name":"全南县"
                    },
                    {
                        "name":"大余县"
                    },
                    {
                        "name":"会昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"吉安",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"吉州区"
                    },
                    {
                        "name":"青原区"
                    },
                    {
                        "name":"井冈山市"
                    },
                    {
                        "name":"吉安县"
                    },
                    {
                        "name":"永丰县"
                    },
                    {
                        "name":"永新县"
                    },
                    {
                        "name":"新干县"
                    },
                    {
                        "name":"泰和县"
                    },
                    {
                        "name":"峡江县"
                    },
                    {
                        "name":"遂川县"
                    },
                    {
                        "name":"安福县"
                    },
                    {
                        "name":"吉水县"
                    },
                    {
                        "name":"万安县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"宜春",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"袁州区"
                    },
                    {
                        "name":"丰城市"
                    },
                    {
                        "name":"樟树市"
                    },
                    {
                        "name":"高安市"
                    },
                    {
                        "name":"铜鼓县"
                    },
                    {
                        "name":"靖安县"
                    },
                    {
                        "name":"宜丰县"
                    },
                    {
                        "name":"奉新县"
                    },
                    {
                        "name":"万载县"
                    },
                    {
                        "name":"上高县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"抚州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"临川区"
                    },
                    {
                        "name":"南丰县"
                    },
                    {
                        "name":"乐安县"
                    },
                    {
                        "name":"金溪县"
                    },
                    {
                        "name":"南城县"
                    },
                    {
                        "name":"东乡县"
                    },
                    {
                        "name":"资溪县"
                    },
                    {
                        "name":"宜黄县"
                    },
                    {
                        "name":"广昌县"
                    },
                    {
                        "name":"黎川县"
                    },
                    {
                        "name":"崇仁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"上饶",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"信州区"
                    },
                    {
                        "name":"德兴市"
                    },
                    {
                        "name":"上饶县"
                    },
                    {
                        "name":"广丰县"
                    },
                    {
                        "name":"鄱阳县"
                    },
                    {
                        "name":"婺源县"
                    },
                    {
                        "name":"铅山县"
                    },
                    {
                        "name":"余干县"
                    },
                    {
                        "name":"横峰县"
                    },
                    {
                        "name":"弋阳县"
                    },
                    {
                        "name":"玉山县"
                    },
                    {
                        "name":"万年县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"贵州",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"贵阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"南明区"
                    },
                    {
                        "name":"云岩区"
                    },
                    {
                        "name":"花溪区"
                    },
                    {
                        "name":"乌当区"
                    },
                    {
                        "name":"白云区"
                    },
                    {
                        "name":"小河区"
                    },
                    {
                        "name":"清镇市"
                    },
                    {
                        "name":"开阳县"
                    },
                    {
                        "name":"修文县"
                    },
                    {
                        "name":"息烽县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"六盘水",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"钟山区"
                    },
                    {
                        "name":"水城县"
                    },
                    {
                        "name":"盘县"
                    },
                    {
                        "name":"六枝特区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"遵义",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"红花岗区"
                    },
                    {
                        "name":"汇川区"
                    },
                    {
                        "name":"赤水市"
                    },
                    {
                        "name":"仁怀市"
                    },
                    {
                        "name":"遵义县"
                    },
                    {
                        "name":"绥阳县"
                    },
                    {
                        "name":"桐梓县"
                    },
                    {
                        "name":"习水县"
                    },
                    {
                        "name":"凤冈县"
                    },
                    {
                        "name":"正安县"
                    },
                    {
                        "name":"余庆县"
                    },
                    {
                        "name":"湄潭县"
                    },
                    {
                        "name":"道真仡佬族苗族自治县"
                    },
                    {
                        "name":"务川仡佬族苗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"安顺",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"西秀区"
                    },
                    {
                        "name":"普定县"
                    },
                    {
                        "name":"平坝县"
                    },
                    {
                        "name":"镇宁布依族苗族自治县"
                    },
                    {
                        "name":"紫云苗族布依族自治县"
                    },
                    {
                        "name":"关岭布依族苗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"铜仁地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"铜仁市"
                    },
                    {
                        "name":"德江县"
                    },
                    {
                        "name":"江口县"
                    },
                    {
                        "name":"思南县"
                    },
                    {
                        "name":"石阡县"
                    },
                    {
                        "name":"玉屏侗族自治县"
                    },
                    {
                        "name":"松桃苗族自治县"
                    },
                    {
                        "name":"印江土家族苗族自治县"
                    },
                    {
                        "name":"沿河土家族自治县"
                    },
                    {
                        "name":"万山特区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"毕节地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"毕节市"
                    },
                    {
                        "name":"黔西县"
                    },
                    {
                        "name":"大方县"
                    },
                    {
                        "name":"织金县"
                    },
                    {
                        "name":"金沙县"
                    },
                    {
                        "name":"赫章县"
                    },
                    {
                        "name":"纳雍县"
                    },
                    {
                        "name":"威宁彝族回族苗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黔西南布依族苗族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"兴义市"
                    },
                    {
                        "name":"望谟县"
                    },
                    {
                        "name":"兴仁县"
                    },
                    {
                        "name":"普安县"
                    },
                    {
                        "name":"册亨县"
                    },
                    {
                        "name":"晴隆县"
                    },
                    {
                        "name":"贞丰县"
                    },
                    {
                        "name":"安龙县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黔东南苗族侗族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"凯里市"
                    },
                    {
                        "name":"施秉县"
                    },
                    {
                        "name":"从江县"
                    },
                    {
                        "name":"锦屏县"
                    },
                    {
                        "name":"镇远县"
                    },
                    {
                        "name":"麻江县"
                    },
                    {
                        "name":"台江县"
                    },
                    {
                        "name":"天柱县"
                    },
                    {
                        "name":"黄平县"
                    },
                    {
                        "name":"榕江县"
                    },
                    {
                        "name":"剑河县"
                    },
                    {
                        "name":"三穗县"
                    },
                    {
                        "name":"雷山县"
                    },
                    {
                        "name":"黎平县"
                    },
                    {
                        "name":"岑巩县"
                    },
                    {
                        "name":"丹寨县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黔南布依族苗族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"都匀市"
                    },
                    {
                        "name":"福泉市"
                    },
                    {
                        "name":"贵定县"
                    },
                    {
                        "name":"惠水县"
                    },
                    {
                        "name":"罗甸县"
                    },
                    {
                        "name":"瓮安县"
                    },
                    {
                        "name":"荔波县"
                    },
                    {
                        "name":"龙里县"
                    },
                    {
                        "name":"平塘县"
                    },
                    {
                        "name":"长顺县"
                    },
                    {
                        "name":"独山县"
                    },
                    {
                        "name":"三都水族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"云南",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"昆明",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"盘龙区"
                    },
                    {
                        "name":"五华区"
                    },
                    {
                        "name":"官渡区"
                    },
                    {
                        "name":"西山区"
                    },
                    {
                        "name":"东川区"
                    },
                    {
                        "name":"安宁市"
                    },
                    {
                        "name":"呈贡县"
                    },
                    {
                        "name":"晋宁县"
                    },
                    {
                        "name":"富民县"
                    },
                    {
                        "name":"宜良县"
                    },
                    {
                        "name":"嵩明县"
                    },
                    {
                        "name":"石林彝族自治县"
                    },
                    {
                        "name":"禄劝彝族苗族自治县"
                    },
                    {
                        "name":"寻甸回族彝族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"曲靖",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"麒麟区"
                    },
                    {
                        "name":"宣威市"
                    },
                    {
                        "name":"马龙县"
                    },
                    {
                        "name":"沾益县"
                    },
                    {
                        "name":"富源县"
                    },
                    {
                        "name":"罗平县"
                    },
                    {
                        "name":"师宗县"
                    },
                    {
                        "name":"陆良县"
                    },
                    {
                        "name":"会泽县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"玉溪",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"红塔区"
                    },
                    {
                        "name":"江川县"
                    },
                    {
                        "name":"澄江县"
                    },
                    {
                        "name":"通海县"
                    },
                    {
                        "name":"华宁县"
                    },
                    {
                        "name":"易门县"
                    },
                    {
                        "name":"峨山彝族自治县"
                    },
                    {
                        "name":"新平彝族傣族自治县"
                    },
                    {
                        "name":"元江哈尼族彝族傣族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"保山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"隆阳区"
                    },
                    {
                        "name":"施甸县"
                    },
                    {
                        "name":"腾冲县"
                    },
                    {
                        "name":"龙陵县"
                    },
                    {
                        "name":"昌宁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"昭通",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"昭阳区"
                    },
                    {
                        "name":"鲁甸县"
                    },
                    {
                        "name":"巧家县"
                    },
                    {
                        "name":"盐津县"
                    },
                    {
                        "name":"大关县"
                    },
                    {
                        "name":"永善县"
                    },
                    {
                        "name":"绥江县"
                    },
                    {
                        "name":"镇雄县"
                    },
                    {
                        "name":"彝良县"
                    },
                    {
                        "name":"威信县"
                    },
                    {
                        "name":"水富县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"丽江",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"古城区"
                    },
                    {
                        "name":"永胜县"
                    },
                    {
                        "name":"华坪县"
                    },
                    {
                        "name":"玉龙纳西族自治县"
                    },
                    {
                        "name":"宁蒗彝族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"普洱",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"思茅区"
                    },
                    {
                        "name":"普洱哈尼族彝族自治县"
                    },
                    {
                        "name":"墨江哈尼族自治县"
                    },
                    {
                        "name":"景东彝族自治县"
                    },
                    {
                        "name":"景谷傣族彝族自治县"
                    },
                    {
                        "name":"镇沅彝族哈尼族拉祜族自治县"
                    },
                    {
                        "name":"江城哈尼族彝族自治县"
                    },
                    {
                        "name":"孟连傣族拉祜族佤族自治县"
                    },
                    {
                        "name":"澜沧拉祜族自治县"
                    },
                    {
                        "name":"西盟佤族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"临沧",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"临翔区"
                    },
                    {
                        "name":"凤庆县"
                    },
                    {
                        "name":"云县"
                    },
                    {
                        "name":"永德县"
                    },
                    {
                        "name":"镇康县"
                    },
                    {
                        "name":"双江拉祜族佤族布朗族傣族自治县"
                    },
                    {
                        "name":"耿马傣族佤族自治县"
                    },
                    {
                        "name":"沧源佤族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"德宏傣族景颇族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"潞西市"
                    },
                    {
                        "name":"瑞丽市"
                    },
                    {
                        "name":"梁河县"
                    },
                    {
                        "name":"盈江县"
                    },
                    {
                        "name":"陇川县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"怒江傈僳族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"泸水县"
                    },
                    {
                        "name":"福贡县"
                    },
                    {
                        "name":"贡山独龙族怒族自治县"
                    },
                    {
                        "name":"兰坪白族普米族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"迪庆藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"香格里拉县"
                    },
                    {
                        "name":"德钦县"
                    },
                    {
                        "name":"维西傈僳族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"大理白族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"大理市"
                    },
                    {
                        "name":"祥云县"
                    },
                    {
                        "name":"宾川县"
                    },
                    {
                        "name":"弥渡县"
                    },
                    {
                        "name":"永平县"
                    },
                    {
                        "name":"云龙县"
                    },
                    {
                        "name":"洱源县"
                    },
                    {
                        "name":"剑川县"
                    },
                    {
                        "name":"鹤庆县"
                    },
                    {
                        "name":"漾濞彝族自治县"
                    },
                    {
                        "name":"南涧彝族自治县"
                    },
                    {
                        "name":"巍山彝族回族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"楚雄彝族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"楚雄市"
                    },
                    {
                        "name":"双柏县"
                    },
                    {
                        "name":"牟定县"
                    },
                    {
                        "name":"南华县"
                    },
                    {
                        "name":"姚安县"
                    },
                    {
                        "name":"大姚县"
                    },
                    {
                        "name":"永仁县"
                    },
                    {
                        "name":"元谋县"
                    },
                    {
                        "name":"武定县"
                    },
                    {
                        "name":"禄丰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"红河哈尼族彝族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"蒙自县"
                    },
                    {
                        "name":"个旧市"
                    },
                    {
                        "name":"开远市"
                    },
                    {
                        "name":"绿春县"
                    },
                    {
                        "name":"建水县"
                    },
                    {
                        "name":"石屏县"
                    },
                    {
                        "name":"弥勒县"
                    },
                    {
                        "name":"泸西县"
                    },
                    {
                        "name":"元阳县"
                    },
                    {
                        "name":"红河县"
                    },
                    {
                        "name":"金平苗族瑶族傣族自治县"
                    },
                    {
                        "name":"河口瑶族自治县"
                    },
                    {
                        "name":"屏边苗族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"文山壮族苗族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"文山县"
                    },
                    {
                        "name":"砚山县"
                    },
                    {
                        "name":"西畴县"
                    },
                    {
                        "name":"麻栗坡县"
                    },
                    {
                        "name":"马关县"
                    },
                    {
                        "name":"丘北县"
                    },
                    {
                        "name":"广南县"
                    },
                    {
                        "name":"富宁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"西双版纳傣族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"景洪市"
                    },
                    {
                        "name":"勐海县"
                    },
                    {
                        "name":"勐腊县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"西藏",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"拉萨",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城关区"
                    },
                    {
                        "name":"林周县"
                    },
                    {
                        "name":"当雄县"
                    },
                    {
                        "name":"尼木县"
                    },
                    {
                        "name":"曲水县"
                    },
                    {
                        "name":"堆龙德庆县"
                    },
                    {
                        "name":"达孜县"
                    },
                    {
                        "name":"墨竹工卡县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"那曲地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"那曲县"
                    },
                    {
                        "name":"嘉黎县"
                    },
                    {
                        "name":"比如县"
                    },
                    {
                        "name":"聂荣县"
                    },
                    {
                        "name":"安多县"
                    },
                    {
                        "name":"申扎县"
                    },
                    {
                        "name":"索县"
                    },
                    {
                        "name":"班戈县"
                    },
                    {
                        "name":"巴青县"
                    },
                    {
                        "name":"尼玛县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"昌都地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"昌都县"
                    },
                    {
                        "name":"江达县"
                    },
                    {
                        "name":"贡觉县"
                    },
                    {
                        "name":"类乌齐县"
                    },
                    {
                        "name":"丁青县"
                    },
                    {
                        "name":"察雅县"
                    },
                    {
                        "name":"八宿县"
                    },
                    {
                        "name":"左贡县"
                    },
                    {
                        "name":"芒康县"
                    },
                    {
                        "name":"洛隆县"
                    },
                    {
                        "name":"边坝县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"林芝地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"林芝县"
                    },
                    {
                        "name":"工布江达县"
                    },
                    {
                        "name":"米林县"
                    },
                    {
                        "name":"墨脱县"
                    },
                    {
                        "name":"波密县"
                    },
                    {
                        "name":"察隅县"
                    },
                    {
                        "name":"朗县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"山南地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"乃东县"
                    },
                    {
                        "name":"扎囊县"
                    },
                    {
                        "name":"贡嘎县"
                    },
                    {
                        "name":"桑日县"
                    },
                    {
                        "name":"琼结县"
                    },
                    {
                        "name":"曲松县"
                    },
                    {
                        "name":"措美县"
                    },
                    {
                        "name":"洛扎县"
                    },
                    {
                        "name":"加查县"
                    },
                    {
                        "name":"隆子县"
                    },
                    {
                        "name":"错那县"
                    },
                    {
                        "name":"浪卡子县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"日喀则地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"日喀则市"
                    },
                    {
                        "name":"南木林县"
                    },
                    {
                        "name":"江孜县"
                    },
                    {
                        "name":"定日县"
                    },
                    {
                        "name":"萨迦县"
                    },
                    {
                        "name":"拉孜县"
                    },
                    {
                        "name":"昂仁县"
                    },
                    {
                        "name":"谢通门县"
                    },
                    {
                        "name":"白朗县"
                    },
                    {
                        "name":"仁布县"
                    },
                    {
                        "name":"康马县"
                    },
                    {
                        "name":"定结县"
                    },
                    {
                        "name":"仲巴县"
                    },
                    {
                        "name":"亚东县"
                    },
                    {
                        "name":"吉隆县"
                    },
                    {
                        "name":"聂拉木县"
                    },
                    {
                        "name":"萨嘎县"
                    },
                    {
                        "name":"岗巴县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阿里地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"噶尔县"
                    },
                    {
                        "name":"普兰县"
                    },
                    {
                        "name":"札达县"
                    },
                    {
                        "name":"日土县"
                    },
                    {
                        "name":"革吉县"
                    },
                    {
                        "name":"改则县"
                    },
                    {
                        "name":"措勤县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"海南",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"海口",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"龙华区"
                    },
                    {
                        "name":"秀英区"
                    },
                    {
                        "name":"琼山区"
                    },
                    {
                        "name":"美兰区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"三亚",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"三亚市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"五指山",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"琼海",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"儋州",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"文昌",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"万宁",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"东方",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"澄迈县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"定安县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"屯昌县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"临高县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"白沙黎族自治县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"昌江黎族自治县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"乐东黎族自治县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"陵水黎族自治县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"保亭黎族苗族自治县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"琼中黎族苗族自治县",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"甘肃",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"兰州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城关区"
                    },
                    {
                        "name":"七里河区"
                    },
                    {
                        "name":"西固区"
                    },
                    {
                        "name":"安宁区"
                    },
                    {
                        "name":"红古区"
                    },
                    {
                        "name":"永登县"
                    },
                    {
                        "name":"皋兰县"
                    },
                    {
                        "name":"榆中县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"嘉峪关",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"嘉峪关市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"金昌",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"金川区"
                    },
                    {
                        "name":"永昌县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"白银",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"白银区"
                    },
                    {
                        "name":"平川区"
                    },
                    {
                        "name":"靖远县"
                    },
                    {
                        "name":"会宁县"
                    },
                    {
                        "name":"景泰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"天水",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"清水县"
                    },
                    {
                        "name":"秦安县"
                    },
                    {
                        "name":"甘谷县"
                    },
                    {
                        "name":"武山县"
                    },
                    {
                        "name":"张家川回族自治县"
                    },
                    {
                        "name":"北道区"
                    },
                    {
                        "name":"秦城区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"武威",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"凉州区"
                    },
                    {
                        "name":"民勤县"
                    },
                    {
                        "name":"古浪县"
                    },
                    {
                        "name":"天祝藏族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"酒泉",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"肃州区"
                    },
                    {
                        "name":"玉门市"
                    },
                    {
                        "name":"敦煌市"
                    },
                    {
                        "name":"金塔县"
                    },
                    {
                        "name":"肃北蒙古族自治县"
                    },
                    {
                        "name":"阿克塞哈萨克族自治县"
                    },
                    {
                        "name":"安西县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"张掖",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"甘州区"
                    },
                    {
                        "name":"民乐县"
                    },
                    {
                        "name":"临泽县"
                    },
                    {
                        "name":"高台县"
                    },
                    {
                        "name":"山丹县"
                    },
                    {
                        "name":"肃南裕固族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"庆阳",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"西峰区"
                    },
                    {
                        "name":"庆城县"
                    },
                    {
                        "name":"环县"
                    },
                    {
                        "name":"华池县"
                    },
                    {
                        "name":"合水县"
                    },
                    {
                        "name":"正宁县"
                    },
                    {
                        "name":"宁县"
                    },
                    {
                        "name":"镇原县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"平凉",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"崆峒区"
                    },
                    {
                        "name":"泾川县"
                    },
                    {
                        "name":"灵台县"
                    },
                    {
                        "name":"崇信县"
                    },
                    {
                        "name":"华亭县"
                    },
                    {
                        "name":"庄浪县"
                    },
                    {
                        "name":"静宁县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"定西",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"安定区"
                    },
                    {
                        "name":"通渭县"
                    },
                    {
                        "name":"临洮县"
                    },
                    {
                        "name":"漳县"
                    },
                    {
                        "name":"岷县"
                    },
                    {
                        "name":"渭源县"
                    },
                    {
                        "name":"陇西县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"陇南",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"武都区"
                    },
                    {
                        "name":"成县"
                    },
                    {
                        "name":"宕昌县"
                    },
                    {
                        "name":"康县"
                    },
                    {
                        "name":"文县"
                    },
                    {
                        "name":"西和县"
                    },
                    {
                        "name":"礼县"
                    },
                    {
                        "name":"两当县"
                    },
                    {
                        "name":"徽县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"临夏回族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"临夏市"
                    },
                    {
                        "name":"临夏县"
                    },
                    {
                        "name":"康乐县"
                    },
                    {
                        "name":"永靖县"
                    },
                    {
                        "name":"广河县"
                    },
                    {
                        "name":"和政县"
                    },
                    {
                        "name":"东乡族自治县"
                    },
                    {
                        "name":"积石山保安族东乡族撒拉族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"甘南藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"合作市"
                    },
                    {
                        "name":"临潭县"
                    },
                    {
                        "name":"卓尼县"
                    },
                    {
                        "name":"舟曲县"
                    },
                    {
                        "name":"迭部县"
                    },
                    {
                        "name":"玛曲县"
                    },
                    {
                        "name":"碌曲县"
                    },
                    {
                        "name":"夏河县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"宁夏",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"银川",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"兴庆区"
                    },
                    {
                        "name":"西夏区"
                    },
                    {
                        "name":"金凤区"
                    },
                    {
                        "name":"灵武市"
                    },
                    {
                        "name":"永宁县"
                    },
                    {
                        "name":"贺兰县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"石嘴山",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"大武口区"
                    },
                    {
                        "name":"惠农区"
                    },
                    {
                        "name":"平罗县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"吴忠",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"利通区"
                    },
                    {
                        "name":"青铜峡市"
                    },
                    {
                        "name":"盐池县"
                    },
                    {
                        "name":"同心县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"固原",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"原州区"
                    },
                    {
                        "name":"西吉县"
                    },
                    {
                        "name":"隆德县"
                    },
                    {
                        "name":"泾源县"
                    },
                    {
                        "name":"彭阳县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"中卫",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"沙坡头区"
                    },
                    {
                        "name":"中宁县"
                    },
                    {
                        "name":"海原县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"青海",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"西宁",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"城中区"
                    },
                    {
                        "name":"城东区"
                    },
                    {
                        "name":"城西区"
                    },
                    {
                        "name":"城北区"
                    },
                    {
                        "name":"湟源县"
                    },
                    {
                        "name":"湟中县"
                    },
                    {
                        "name":"大通回族土族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"海东地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"平安县"
                    },
                    {
                        "name":"乐都县"
                    },
                    {
                        "name":"民和回族土族自治县"
                    },
                    {
                        "name":"互助土族自治县"
                    },
                    {
                        "name":"化隆回族自治县"
                    },
                    {
                        "name":"循化撒拉族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"海北藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"海晏县"
                    },
                    {
                        "name":"祁连县"
                    },
                    {
                        "name":"刚察县"
                    },
                    {
                        "name":"门源回族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"海南藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"共和县"
                    },
                    {
                        "name":"同德县"
                    },
                    {
                        "name":"贵德县"
                    },
                    {
                        "name":"兴海县"
                    },
                    {
                        "name":"贵南县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"黄南藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"同仁县"
                    },
                    {
                        "name":"尖扎县"
                    },
                    {
                        "name":"泽库县"
                    },
                    {
                        "name":"河南蒙古族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"果洛藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"玛沁县"
                    },
                    {
                        "name":"班玛县"
                    },
                    {
                        "name":"甘德县"
                    },
                    {
                        "name":"达日县"
                    },
                    {
                        "name":"久治县"
                    },
                    {
                        "name":"玛多县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"玉树藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"玉树县"
                    },
                    {
                        "name":"杂多县"
                    },
                    {
                        "name":"称多县"
                    },
                    {
                        "name":"治多县"
                    },
                    {
                        "name":"囊谦县"
                    },
                    {
                        "name":"曲麻莱县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"海西蒙古族藏族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"德令哈市"
                    },
                    {
                        "name":"格尔木市"
                    },
                    {
                        "name":"乌兰县"
                    },
                    {
                        "name":"都兰县"
                    },
                    {
                        "name":"天峻县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"新疆",
        "sub":[
            {
                "name":"请选择",
                "sub":[

                ]
            },
            {
                "name":"乌鲁木齐",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"天山区"
                    },
                    {
                        "name":"沙依巴克区"
                    },
                    {
                        "name":"新市区"
                    },
                    {
                        "name":"水磨沟区"
                    },
                    {
                        "name":"头屯河区"
                    },
                    {
                        "name":"达坂城区"
                    },
                    {
                        "name":"东山区"
                    },
                    {
                        "name":"乌鲁木齐县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"克拉玛依",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"克拉玛依区"
                    },
                    {
                        "name":"独山子区"
                    },
                    {
                        "name":"白碱滩区"
                    },
                    {
                        "name":"乌尔禾区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"吐鲁番地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"吐鲁番市"
                    },
                    {
                        "name":"托克逊县"
                    },
                    {
                        "name":"鄯善县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"哈密地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"哈密市"
                    },
                    {
                        "name":"伊吾县"
                    },
                    {
                        "name":"巴里坤哈萨克自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"和田地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"和田市"
                    },
                    {
                        "name":"和田县"
                    },
                    {
                        "name":"洛浦县"
                    },
                    {
                        "name":"民丰县"
                    },
                    {
                        "name":"皮山县"
                    },
                    {
                        "name":"策勒县"
                    },
                    {
                        "name":"于田县"
                    },
                    {
                        "name":"墨玉县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"阿克苏地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"阿克苏市"
                    },
                    {
                        "name":"温宿县"
                    },
                    {
                        "name":"沙雅县"
                    },
                    {
                        "name":"拜城县"
                    },
                    {
                        "name":"阿瓦提县"
                    },
                    {
                        "name":"库车县"
                    },
                    {
                        "name":"柯坪县"
                    },
                    {
                        "name":"新和县"
                    },
                    {
                        "name":"乌什县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"喀什地区",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"喀什市"
                    },
                    {
                        "name":"巴楚县"
                    },
                    {
                        "name":"泽普县"
                    },
                    {
                        "name":"伽师县"
                    },
                    {
                        "name":"叶城县"
                    },
                    {
                        "name":"岳普湖县"
                    },
                    {
                        "name":"疏勒县"
                    },
                    {
                        "name":"麦盖提县"
                    },
                    {
                        "name":"英吉沙县"
                    },
                    {
                        "name":"莎车县"
                    },
                    {
                        "name":"疏附县"
                    },
                    {
                        "name":"塔什库尔干塔吉克自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"克孜勒苏柯尔克孜自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"阿图什市"
                    },
                    {
                        "name":"阿合奇县"
                    },
                    {
                        "name":"乌恰县"
                    },
                    {
                        "name":"阿克陶县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"巴音郭楞蒙古自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"库尔勒市"
                    },
                    {
                        "name":"和静县"
                    },
                    {
                        "name":"尉犁县"
                    },
                    {
                        "name":"和硕县"
                    },
                    {
                        "name":"且末县"
                    },
                    {
                        "name":"博湖县"
                    },
                    {
                        "name":"轮台县"
                    },
                    {
                        "name":"若羌县"
                    },
                    {
                        "name":"焉耆回族自治县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"昌吉回族自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"昌吉市"
                    },
                    {
                        "name":"阜康市"
                    },
                    {
                        "name":"奇台县"
                    },
                    {
                        "name":"玛纳斯县"
                    },
                    {
                        "name":"吉木萨尔县"
                    },
                    {
                        "name":"呼图壁县"
                    },
                    {
                        "name":"木垒哈萨克自治县"
                    },
                    {
                        "name":"米泉市"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"博尔塔拉蒙古自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"博乐市"
                    },
                    {
                        "name":"精河县"
                    },
                    {
                        "name":"温泉县"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"石河子",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"阿拉尔",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"图木舒克",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"五家渠",
                "sub":[

                ],
                "type":0
            },
            {
                "name":"伊犁哈萨克自治州",
                "sub":[
                    {
                        "name":"请选择"
                    },
                    {
                        "name":"伊宁市"
                    },
                    {
                        "name":"奎屯市"
                    },
                    {
                        "name":"伊宁县"
                    },
                    {
                        "name":"特克斯县"
                    },
                    {
                        "name":"尼勒克县"
                    },
                    {
                        "name":"昭苏县"
                    },
                    {
                        "name":"新源县"
                    },
                    {
                        "name":"霍城县"
                    },
                    {
                        "name":"巩留县"
                    },
                    {
                        "name":"察布查尔锡伯自治县"
                    },
                    {
                        "name":"塔城地区"
                    },
                    {
                        "name":"阿勒泰地区"
                    },
                    {
                        "name":"其他"
                    }
                ],
                "type":0
            },
            {
                "name":"其他"
            }
        ],
        "type":1
    },
    {
        "name":"香港",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"中西区"
            },
            {
                "name":"湾仔区"
            },
            {
                "name":"东区"
            },
            {
                "name":"南区"
            },
            {
                "name":"深水埗区"
            },
            {
                "name":"油尖旺区"
            },
            {
                "name":"九龙城区"
            },
            {
                "name":"黄大仙区"
            },
            {
                "name":"观塘区"
            },
            {
                "name":"北区"
            },
            {
                "name":"大埔区"
            },
            {
                "name":"沙田区"
            },
            {
                "name":"西贡区"
            },
            {
                "name":"元朗区"
            },
            {
                "name":"屯门区"
            },
            {
                "name":"荃湾区"
            },
            {
                "name":"葵青区"
            },
            {
                "name":"离岛区"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"澳门",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"花地玛堂区"
            },
            {
                "name":"圣安多尼堂区"
            },
            {
                "name":"大堂区"
            },
            {
                "name":"望德堂区"
            },
            {
                "name":"风顺堂区"
            },
            {
                "name":"嘉模堂区"
            },
            {
                "name":"圣方济各堂区"
            },
            {
                "name":"路凼"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"台湾",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"台北市"
            },
            {
                "name":"高雄市"
            },
            {
                "name":"台北县"
            },
            {
                "name":"桃园县"
            },
            {
                "name":"新竹县"
            },
            {
                "name":"苗栗县"
            },
            {
                "name":"台中县"
            },
            {
                "name":"彰化县"
            },
            {
                "name":"南投县"
            },
            {
                "name":"云林县"
            },
            {
                "name":"嘉义县"
            },
            {
                "name":"台南县"
            },
            {
                "name":"高雄县"
            },
            {
                "name":"屏东县"
            },
            {
                "name":"宜兰县"
            },
            {
                "name":"花莲县"
            },
            {
                "name":"台东县"
            },
            {
                "name":"澎湖县"
            },
            {
                "name":"基隆市"
            },
            {
                "name":"新竹市"
            },
            {
                "name":"台中市"
            },
            {
                "name":"嘉义市"
            },
            {
                "name":"台南市"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    },
    {
        "name":"海外",
        "sub":[
            {
                "name":"请选择"
            },
            {
                "name":"其他"
            }
        ],
        "type":0
    }
];

}($);
// jshint ignore: end

/* jshint unused:false*/

+ function($) {
    "use strict";
    var format = function(data) {
        var result = [];
        for(var i=0;i<data.length;i++) {
            var d = data[i];
            if(d.name === "请选择") continue;
            result.push(d.name);
        }
        if(result.length) return result;
        return [""];
    };

    var sub = function(data) {
        if(!data.sub) return [""];
        return format(data.sub);
    };

    var getCities = function(d) {
        for(var i=0;i< raw.length;i++) {
            if(raw[i].name === d) return sub(raw[i]);
        }
        return [""];
    };

    var getDistricts = function(p, c) {
        for(var i=0;i< raw.length;i++) {
            if(raw[i].name === p) {
                for(var j=0;j< raw[i].sub.length;j++) {
                    if(raw[i].sub[j].name === c) {
                        return sub(raw[i].sub[j]);
                    }
                }
            }
        }
        return [""];
    };

    var raw = $.smConfig.rawCitiesData;
    var provinces = raw.map(function(d) {
        return d.name;
    });
    var initCities = sub(raw[0]);
    var initDistricts = [""];

    var currentProvince = provinces[0];
    var currentCity = initCities[0];
    var currentDistrict = initDistricts[0];

    var t;
    var defaults = {

        cssClass: "city-picker",
        rotateEffect: false,  //为了性能

        onChange: function (picker, values, displayValues) {
            var newProvince = picker.cols[0].value;
            var newCity;
            if(newProvince !== currentProvince) {
                // 如果Province变化，节流以提高reRender性能
                clearTimeout(t);

                t = setTimeout(function(){
                    var newCities = getCities(newProvince);
                    newCity = newCities[0];
                    var newDistricts = getDistricts(newProvince, newCity);
                    picker.cols[1].replaceValues(newCities);
                    picker.cols[2].replaceValues(newDistricts);
                    currentProvince = newProvince;
                    currentCity = newCity;
                    picker.updateValue();
                }, 200);
                return;
            }
            newCity = picker.cols[1].value;
            if(newCity !== currentCity) {
                picker.cols[2].replaceValues(getDistricts(newProvince, newCity));
                currentCity = newCity;
                picker.updateValue();
            }
        },

        cols: [
        {
            textAlign: 'center',
            values: provinces,
            cssClass: "col-province"
        },
        {
            textAlign: 'center',
            values: initCities,
            cssClass: "col-city"
        },
        {
            textAlign: 'center',
            values: initDistricts,
            cssClass: "col-district"
        }
        ]
    };

    $.fn.cityPicker = function(params) {
        return this.each(function() {
            if(!this) return;
            var p = $.extend(defaults, params);
            //计算value
            if (p.value) {
                $(this).val(p.value.join(' '));
            } else {
                var val = $(this).val();
                val && (p.value = val.split(' '));
            }

            if (p.value) {
                //p.value = val.split(" ");
                if(p.value[0]) {
                    currentProvince = p.value[0];
                    p.cols[1].values = getCities(p.value[0]);
                }
                if(p.value[1]) {
                    currentCity = p.value[1];
                    p.cols[2].values = getDistricts(p.value[0], p.value[1]);
                } else {
                    p.cols[2].values = getDistricts(p.value[0], p.cols[1].values[0]);
                }
                !p.value[2] && (p.value[2] = '');
                currentDistrict = p.value[2];
            }
            $(this).picker(p);
        });
    };

}($);
/*
* Turntable
*/


(function (global, factory) {
    //其他的模式下，需要在调用本模块前，先调用本模块
    if(typeof exports === 'object' && typeof module !== 'undefined'){
        module.exports = factory()
    }else if(typeof define === 'function' && define.amd){
        //require.js的引入
        define(function() {
            return factory();
        });
    }else{
        global.Turntable = factory();
    }
  
}(this,function(){
    // 抽奖的一个实例化
    /*
     * @method Turntable
     * @desc 转盘抽奖
     * @param {Object} options，实例化时的参数
     * @param {jQuery} options.ele ，转盘的旋转按钮元素，必须要存在的
     * @param {Object} options.gifts，奖品的角度相关数据
     * @param {Function} options.callback 转盘抽奖结束后的回调函数
     * @param {Number} options.speed 旋转的最大速度，默认为10，越大越快
     * @param {Number} options.startAngle 初始的角度，默认为0
     *
     * */
    function Turntable(options){

        if(!(this instanceof Turntable)){
            return new Turntable(options);
        }

        if(!options || typeof options != "object"){
            throw new Error("在实例化Turntable时，传入参数错误！");
        }

        try{
            if(!options.ele.size()){
                throw new Error();
            }
        }catch(e){
            throw new Error("在实例化Turntable时，需要传入ele元素");
        }

        // 初始化一些配置信息
        this.init(options);

        // 初始化事件
        this.initEvent();

    }

    Turntable.prototype.init = function(options){
        
        this.rAF =  window.requestAnimationFrame       ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame    ||
                    function( callback ){
                        window.setTimeout(callback, 1000 / 60);
                    };
  
        this.options = options;
        
        // 目标元素
        this.ele = options.ele;

        // 基础速度
        this.baseSpeed = options.speed || 10;

        // 当前的速度
        this.speed = this.baseSpeed;

        // 状态码
        this.statusCode = {
            // 还未开始
            "unBegin" : "1",
            // 正在旋转
            "activity" : "2",
            // 正在停止
            "isStoping" : "3"
        };

        // 当前的状态码
        this.status = this.statusCode.unBegin;

        // 开始时的启动速度
        this.beiginStep = 0.2;

        // 结束时的减速速度
        this.stopStep = 0.1;

    };

    // 开始转盘
    Turntable.prototype.begin = function(){
        var statusCode = this.statusCode;

        if(statusCode.unBegin != this.status){
            return "";
        }

        // 设置为开始
        this.status = statusCode.activity;

        this.speed = Math.floor(this.baseSpeed/2);

        this._beigin();
 
        this.stopId = "";

        this.json = "";

    };

    // 停止，传入两个参数，id为目标id，json为相关的全部信息
    Turntable.prototype.stop = function(id,json){
        // 停止的目标id
        var statusCode = this.statusCode;
        if(statusCode.activity != this.status){
            return "";
        }

        this.status = statusCode.isStoping;

        this.stopId = id;

        this.json = json;
    };

    // 当前转盘的状态，是否已经停止
    Turntable.prototype.isStoped = function(){
        return this.status == this.statusCode.unBegin;
    };

    // 获取到停止需要的旋转的角度
    Turntable.prototype.getStopAngle = function(){
        var speed = this.speed,
            n = 0,
            angle = 0,
            stopStep = this.stopStep;

        n = Math.ceil(speed/stopStep);

        angle = n*speed - n*(n-1)*stopStep/2 + 3600;

        return angle%360;
    };

    // 绑定事件的部分
    Turntable.prototype.initEvent = function(){
        var rAF = this.rAF,
            that = this,
            ele = this.ele,
            options = this.options,
            gifts = options.gifts,
            callback = options.callback,
            curAngle = options.startAngle || 0,
            cbs = {},
            statusCode = this.statusCode,
            baseSpeed = this.baseSpeed,
            beiginStep = this.beiginStep,
            stopStep = this.stopStep,
            isStoping = false;

        function _cb(){
            if(typeof callback == "function"){
                callback.call(ele,that.stopId,that.json);
            }
        }

        function _scroll(speed){
            curAngle = curAngle + speed;

            if(curAngle >= 360){
                curAngle = curAngle%360;
            }

            ele.css({"transform":"rotate(-"+curAngle+"deg)"});

        }

        // 根据不同的状态，做不同的处理

        // 未开始时，轮训函数
        cbs[statusCode.unBegin] = function(){};

        // 开始时的轮训函数
        cbs[statusCode.activity] = function(){

            // 加速的时候
            if(that.speed < baseSpeed){
                that.speed += beiginStep;
            }

            // 限制最大的速度
            if(that.speed > baseSpeed){
                that.speed = baseSpeed;
            }

            _scroll(that.speed);

        };

        // 正在停止
        cbs[statusCode.isStoping] = function(){
            var speed = that.speed;
 
            // 表示速度已经降低到最小单位以下，那么就设置为停止
            if(that.speed < 0.1*stopStep){
                that.status = statusCode.unBegin;
                isStoping = false;
                _cb();
                return "";
            }

            // 当前没有开始停止的话
            // 并且当前的角度，不适合停止的话，那么就再按照正在旋转执行
            if(!isStoping && !_isBeginStop()){
                cbs[statusCode.activity]();
                return "";
            }

            isStoping = true;
 
            // 开始停止
            if(that.speed > 2*stopStep){
                if(_justfiyStop()){
                    that.speed -= stopStep;
                }
            }else{
                // 去做停止位置的修正
                if(_canStop()){
                    that.speed -= stopStep;
                }
            }

            _scroll(that.speed);
        };

        function _circle() {
            var status = that.status,
                cb = cbs[status];

            if (typeof cb == "function") {
                cb();
            }

            if (status != statusCode.unBegin) {
                rAF(_circle);
            }
        }

        //
        this._beigin = _circle;

        function _canStop(){
            var gift = gifts[that.stopId],
                flag = false;

            if(gift){
                return true;
            }

            return Math.abs(that.lastAngle - curAngle) < 0.001;
        }

        //
        function _justfiyStop(){
            var bwAngle = that.getStopAngle(),
                curBase = 0;

            curBase = that.lastAngle - bwAngle;

            if(curBase < 0){
                curBase += 360;
            }

            if(Math.abs(curBase - curAngle) < that.speed ){
                return true;
            }else{
                return false;
            }
        }

        // error 的时候，指向两个的中间
        function _getErrorAngle(){
            var errorAngles = {},
                errorArr = [],
                i = "",
                one = null,
                angle = 0,
                len = 0;

            for(i in gifts){
                one = gifts[i];
                angle = one.angleCenter - one.angleRange;

                if(angle < 0){
                    angle = 360+angle;
                }

                errorAngles[angle] = 1;

                angle = one.angleCenter + one.angleRange;

                if(angle >= 360){
                    angle = angle - 360;
                }

                errorAngles[angle] = 1;
            }

            for(i in errorAngles){
                errorArr.push(i);
            }

            len = errorArr.length;

            _getErrorAngle = function(){
                return errorArr[Math.floor(Math.random()*len)];
            };

            return _getErrorAngle();

        }

        function _getStopAngle(gift){
            var angleRange = gift.angleRange,
                flag = Math.random - 0.5 > 0 ? 1 : -1,
                angle = 0;

            angle = gift.angleCenter - flag*Math.floor(Math.random()*angleRange*0.6);
 
            return (angle + 360)%360;
        }

        //
        function _isBeginStop(){
            var gift = gifts[that.stopId],
                bwAngle = 0,
                lastAngle = 0,
                curBase = 0;

            if(!gift){
                lastAngle = _getErrorAngle();
            }else{
                lastAngle = _getStopAngle(gift);
            }

            bwAngle = that.getStopAngle();

            curBase = lastAngle - bwAngle;

            if(curBase < 0){
                curBase += 360;
            }

            if(Math.abs(curBase - curAngle) < that.speed ){
                that.lastAngle = lastAngle;
                return true;
            }else{
                that.lastAngle = "";
                return false;
            }
        }

    };
 
    return Turntable;

}));


function get_comp_info(comp_id, success) {
    $.ajax({
        url: '/wx/companies/' + comp_id + '.json',
        sync: false,
        type: 'get',
        dataType: 'json',
        success: function (data) {
            success(data)
        }
    });
}

function load_img_uploader(del_url) {
    $(".uploadfile").each(function () {
        var uploadCanceled, uploadComplete, uploadFailed, uploadProgress, upload_div;
        upload_div = $(this);
        upload_div.find("input[name='imgFile']:first").on('change', function () {
            var fd, file, fileSize, xhr;
            file = this.files[0];
            if (file) {
                //判断是否是图片类型
                if (!/image\/\w+/.test(file.type)) {
                    alert("只能选择图片");
                    return;
                }
                if (file.size >= (300 * 1024 * 1024)) {
                    alert("上传文件过大,请上传小于300M的文件!");
                    return
                }
                fileSize = 0;
            }
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function (e) {
                upload_div.find(".img-show:first").html(
                    '<div class="img-item">' +
                    '<div class="delete-img"></div>' +
                    '<img src="' + this.result + '" width="100" height="100">' +
                    '<div class="img-progress"></div>' +
                    '</div>');
            }

            if (file.size > 1024 * 1024) {
                fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
            } else {
                fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
            }
            upload_div.find(".fileName:first").html("文件名: " + file.name);
            upload_div.find(".fileSize:first").html("文件大小: " + fileSize);
            upload_div.find(".fileType:first").html("文件类型: " + file.type);
            fd = new FormData();
            fd.append("imgFile", file);
            fd.append("Filename", file.name);
            xhr = new XMLHttpRequest();
            xhr.upload.addEventListener("progress", uploadProgress, false);
            xhr.addEventListener("load", uploadComplete, false);
            xhr.addEventListener("error", uploadFailed, false);
            xhr.addEventListener("abort", uploadCanceled, false);
            var watermark = upload_div.attr('watermark') || 0;
            xhr.open("POST", "/attachments?watermark=" + watermark);
            file_loading = false;
            return xhr.send(fd);
        });
        /*upload_div.find("input[type='button']:first").on 'click', ->
         upload_div.find("input[name='imgFile']:first").click()
         */
        uploadProgress = function (evt) {
            var percentComplete;
            if (evt.lengthComputable) {
                percentComplete = Math.round(evt.loaded * 100 / evt.total);
                console.info(percentComplete);
                $(".img-progress").css({
                    width: percentComplete + "%"
                })
//                return upload_div.find(".progressNumber:first").html((percentComplete.toString()) + "%");
            }
            else {
//                return upload_div.find(".progressNumber:first").html("unable to compute");
            }
        };
        uploadComplete = function (evt) {
            var backjson;
            backjson = eval("(" + evt.target.responseText + ")");
            upload_div.find(".img-show:first").html(
                '<div class="img-item">' +
                '<div class="delete-img" onclick="delete_file(\'' + backjson['attachment_id'] + '\', this, \'' + del_url + '\')"></div>' +
                '<img src="' + backjson['url'] + '" width="100" height="100">' +
                '<div class="img-progress"></div>' +
                '</div>');
            $(".img-progress").css({
                width: "100%"
            });
            upload_div.find(".img-show:first").trigger('create');
            file_loading = true;
            return upload_div.find(".pid_pic:first").val(backjson['attachment_id']);
        };
        uploadFailed = function (evt) {
            return alert("上传出现错误，请重新上传！");
        };
        return uploadCanceled = function (evt) {
            return alert("The upload has been canceled by the user or the browser dropped the connection.");
        };

        /*$("#new_member_apply") */
    });
}

function load_uploader() {
    $(".uploadfile").each(function () {
        var uploadCanceled, uploadComplete, uploadFailed, uploadProgress, upload_div;
        upload_div = $(this);
        upload_div.find("input[name='imgFile']:first").on('change', function () {
            var fd, file, fileSize, xhr;
            file = this.files[0];
            if (file) {
                if (file.size >= (300 * 1024 * 1024)) {
                    alert("上传文件过大,请上传小于300M的文件!");
                    return
                }
                fileSize = 0;
            }

            if (file.size > 1024 * 1024) {
                fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
            } else {
                fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
            }
            upload_div.find(".fileName:first").html("文件名: " + file.name);
            upload_div.find(".fileSize:first").html("文件大小: " + fileSize);
            upload_div.find(".fileType:first").html("文件类型: " + file.type);
            fd = new FormData();
            file = upload_div.find("input[name='imgFile']:first")[0].files[0];
            fd.append("imgFile", file);
            fd.append("Filename", file.name);
            xhr = new XMLHttpRequest();
            xhr.upload.addEventListener("progress", uploadProgress, false);
            xhr.addEventListener("load", uploadComplete, false);
            xhr.addEventListener("error", uploadFailed, false);
            xhr.addEventListener("abort", uploadCanceled, false);
            var watermark = upload_div.attr('watermark') || 0;
            xhr.open("POST", "/attachments?watermark=" + watermark);
            return xhr.send(fd);
        });
        /*upload_div.find("input[type='button']:first").on 'click', ->
         upload_div.find("input[name='imgFile']:first").click()
         */
        uploadProgress = function (evt) {
            var percentComplete;
            if (evt.lengthComputable) {
                percentComplete = Math.round(evt.loaded * 100 / evt.total);
                return upload_div.find(".progressNumber:first").html((percentComplete.toString()) + "%");
            }
            else {
                return upload_div.find(".progressNumber:first").html("unable to compute");
            }
        };
        uploadComplete = function (evt) {
            var backjson;
            backjson = eval("(" + evt.target.responseText + ")");
            upload_div.find(".img-show:first").html('<div class="img-item"><div class="delete-img" onclick="delete_file(\'' + backjson['attachment_id'] + '\', this)"></div><img src="' + backjson['url'] + '" width="100" height="100"></div>');
            upload_div.find(".img-show:first").trigger('create');
            return upload_div.find(".pid_pic:first").val(backjson['attachment_id']);
        };
        uploadFailed = function (evt) {
            return alert("上传出现错误，请重新上传！");
        };
        return uploadCanceled = function (evt) {
            return alert("The upload has been canceled by the user or the browser dropped the connection.");
        };

        /*$("#new_member_apply") */
    });
}
//上传多个文件
function new_load_multi_uploader() {
    $(".multi-uploadfile").each(function () {
        var uploadCanceled, uploadFailed;
        var upload_div = $(this);
        var $upload_btn = upload_div.find(".upload-btn:first");
        var $file_hidden_field = upload_div.find('.file-hidden-field:first');
        var $file_show = $('<div class="file-show"></div>');
        var $file_field = $('<input type="file" multiple style="display: none;" />');
        upload_div.append($file_field);
        upload_div.append($file_show);
        $upload_btn.on("click", function () {
            $file_field.click();
        })
        $file_field.on('change', function () {
            for (var i = 0; i < this.files.length; i++) {
                upload_file(upload_div, this.files[i])
            }
        });

        var upload_file = function (upload_div, file) {
            var fd, fileSize, xhr;
            if (file) {
                if (file.size >= (300 * 1024 * 1024)) {
                    alert("上传文件过大,请上传小于300M的文件!");
                    return
                }
                fileSize = 0;
            }
            if (file.size > 1024 * 1024) {
                fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
            } else {
                fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
            }
            upload_div.find(".fileSize:first").html("文件大小: " + fileSize);
            upload_div.find(".fileType:first").html("文件类型: " + file.type);
            fd = new FormData();
            fd.append("imgFile", file);
            fd.append("Filename", file.name);
            var $file_row = $('<div class="row">\n' +
                '                <div class="col-60">' + file.name + '</div>\n' +
                '                <div class="col-25 progress-number">0%</div>\n' +
                '                <div class="col-15 remove-btn"></div>\n' +
                '              </div>')
            $file_show.append($file_row);
            xhr = new XMLHttpRequest();

            //进度
            xhr.upload.addEventListener("progress", function (evt) {
                if (evt.lengthComputable) {
                    var percentComplete = Math.round(evt.loaded * 100 / evt.total);
                    $file_row.find('.progress-number').html(percentComplete + "%");
                }
            }, false);

            //上传成功
            xhr.addEventListener("load", function (evt) {

                var backjson = eval("(" + evt.target.responseText + ")");
                $file_row.find('.remove-btn').html('<span class="icon icon-remove" onclick="new_delete_file(\'' + backjson['attachment_id'] + '\', this)"></span>');
                var file_ids = $file_hidden_field.val();
                var file_arr = [];
                if (file_ids) {
                    file_arr = file_ids.split(',');
                }
                file_arr.push(backjson['attachment_id']);
                $file_hidden_field.val(file_arr.join(','));
                // upload_div.find(".file-count:first").html(file_arr.length + "/" + upload_div.find("input[name='imgFile']:first")[0].files.length);
            }, false);
            xhr.addEventListener("error", uploadFailed, false);
            xhr.addEventListener("abort", uploadCanceled, false);
            var watermark = upload_div.attr('watermark') || 0;
            xhr.open("POST", "/attachments?watermark=" + watermark);
            xhr.send(fd);
        };

        //上传失败
        uploadFailed = function (evt) {
            return alert("上传出现错误，请重新上传！");
        };

        //取消上传
        uploadCanceled = function (evt) {
            return alert("The upload has been canceled by the user or the browser dropped the connection.");
        };


        /*upload_div.find("input[type='button']:first").on 'click', ->
         upload_div.find("input[name='imgFile']:first").click()
         */


        /*$("#new_member_apply") */
    });
}

function new_delete_file(attachment_id, e, del_url) {
    if (confirm("是否删除！")) {
        if (del_url) {
            url = del_url;
            type = 'post';
        } else {
            url = '/attachments/' + attachment_id + '.json';
            type = 'delete';
        }
        $.ajax({
            type: type,
            headers: {
                'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
            },
            url: url,
            data: {attachment_id: attachment_id},
            dataType: 'json',
            success: function (backjson) {
                if (backjson['msg'] == '删除成功！') {
                    var removed_val = remove_attachment_id($(e).closest('.multi-uploadfile').find("input[type='hidden']").val(), attachment_id);
                    $(e).closest('.multi-uploadfile').find("input[type='hidden']").val(removed_val);
                    $(e).closest('.row').remove();
                } else {
                    alert(backjson['msg'])
                }
            }
        });
    }
}

function delete_file(attachment_id, e, del_url) {
    if (confirm("是否删除！")) {
        if (del_url) {
            url = del_url;
            type = 'post';
        } else {
            url = '/attachments/' + attachment_id + '.json';
            type = 'delete';
        }
        $.ajax({
            type: type,
            headers: {
                'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
            },
            url: url,
            data: {attachment_id: attachment_id},
            dataType: 'json',
            success: function (backjson) {
                if (backjson['msg'] == '删除成功！') {
                    var removed_val = remove_attachment_id($(e).closest('.form-item').find("input[type='hidden']").val(), attachment_id);
                    $(e).closest('.form-item').find("input[type='hidden']").val(removed_val);
                    $(e).closest('.img-item').remove();
                } else {
                    alert(backjson['msg'])
                }
            }
        });
    }
}

function remove_attachment_id(attachment_ids, remove_id) {
    var attr_id_arr = attachment_ids.split(',');
    var indx = attr_id_arr.indexOf(remove_id);
    attr_id_arr.splice(indx, 1);
    return attr_id_arr.join(',');
}

function load_multi_uploader() {
    $(".multi-uploadfile").each(function () {
        var uploadCanceled, uploadComplete, uploadFailed, uploadProgress;
        var upload_div = $(this);
        upload_div.find("input[name='imgFile']:first").on('change', function () {
            for (var i = 0; i < this.files.length; i++) {
                upload_file(upload_div, this.files[i])
            }
        });

        var upload_file = function (upload_div, file) {
            var fd, fileSize, xhr;
            if (file) {
                if (file.size >= (300 * 1024 * 1024)) {
                    alert("上传文件过大,请上传小于300M的文件!");
                    return
                }
                fileSize = 0;
            }
            if (file.size > 1024 * 1024) {
                fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
            } else {
                fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
            }
            upload_div.find(".fileSize:first").html("文件大小: " + fileSize);
            upload_div.find(".fileType:first").html("文件类型: " + file.type);
            fd = new FormData();
            fd.append("imgFile", file);
            fd.append("Filename", file.name);
            xhr = new XMLHttpRequest();
            xhr.upload.addEventListener("progress", uploadProgress, false);
            xhr.addEventListener("load", uploadComplete, false);
            xhr.addEventListener("error", uploadFailed, false);
            xhr.addEventListener("abort", uploadCanceled, false);
            var watermark = upload_div.attr('watermark') || 0;
            xhr.open("POST", "/attachments?watermark=" + watermark);
            xhr.send(fd);
        };
        uploadProgress = function (evt) {
            var percentComplete;
            if (evt.lengthComputable) {
                percentComplete = Math.round(evt.loaded * 100 / evt.total);
                return upload_div.find(".progressNumber:first").html((percentComplete.toString()) + "%");
            } else {
                return upload_div.find(".progressNumber:first").html("unable to compute");
            }
        };
        uploadComplete = function (evt) {

            var backjson = eval("(" + evt.target.responseText + ")");
            upload_div.find(".img-show:first").append('<div class="img-item">' +
                '<div class="delete-img" onclick="delete_file(\'' + backjson['attachment_id'] + '\', this)"></div>' +
                '<img src="' + backjson['url'] + '" width="100" height="100">' +
                '<div class="file-name">' + backjson['file_name'] + '</div>' +
                '</div>');
            var file_ids = upload_div.find(".pid_pic:first").val();
            var file_arr = [];
            if (file_ids) {
                file_arr = file_ids.split(',');
            }
            file_arr.push(backjson['attachment_id']);
            upload_div.find(".pid_pic:first").val(file_arr.join(','));
            upload_div.find(".file-count:first").html(file_arr.length + "/" + upload_div.find("input[name='imgFile']:first")[0].files.length);
            $('.img-item > img').error(function () {
                $(this).attr('src', "/assets/wx/undefind_file-5a885a35c77564b2023f9fad9f87c97d4374ea89dd84f3f8b01d0692aeba50c2.jpg");
            });
        };
        uploadFailed = function (evt) {
            return alert("上传出现错误，请重新上传！");
        };
        uploadCanceled = function (evt) {
            return alert("The upload has been canceled by the user or the browser dropped the connection.");
        };


        /*upload_div.find("input[type='button']:first").on 'click', ->
         upload_div.find("input[name='imgFile']:first").click()
         */


        /*$("#new_member_apply") */
    });
}


function ellipsis(class_name) {
    var clientW = document.body.clientWidth - 120;
    $("." + class_name).each(function () {
        var len_sum = 0;
        $(this).find('div').each(function () {
            len_sum += this.offsetWidth + 10;
            if (len_sum >= clientW) {
                $(this).hide();
            }
        });
        if (len_sum >= clientW) {
            $(this).find('.ellipsis').remove();
            $(this).append('<span class="ellipsis">...</span>');
        }
    })
}

function load_ellipsis(class_name) {
    $("." + class_name).each(function () {
        first_item = $(this).find('div:first');
        if (first_item.length > 0) {
//            环境 结束本次循环 退出循环
//            JavaScript for continue; break;
//            JQuery each return true; return false;
            return false;
        }
    });
    var stop = setInterval(function () {
        if (first_item[0].offsetWidth > 0) {
            clearInterval(stop);
            ellipsis(class_name);
        }
    }, 100);
}
/**
 * onclick="get_html('url.js', 'get', '')"
 * @param url
 * @param method
 * @param data
 */
function get_remote_html(url, method, data) {
    var forms = document.getElementsByClassName('temp-form');

    var form = forms[0] || document.createElement('form');
    form.setAttribute('class', 'temp-form');
    form.action = url;
    form.method = method;
    form.setAttribute('data-remote', 'true');
    form.setAttribute('accept-charset', "UTF-8");
    form.innerHTML = '';
    for (var i in data) {
        var input = document.createElement('input');
        input.name = data[i]['name'];
        input.value = data[i]['value'];
        input.type = 'hidden';
        form.appendChild(input);
    }
    document.body.appendChild(form);
    $(form).submit();
//    $.ajax({
//        type: method,
//        async: true,
//        url: url,
//        data: data,
//        dataType: 'js',
//        success: function(html){
//            alert(111111);
//            success(html,data);
//        }
//    })
}

/**
 * post_remote('url.js', 'form_id')
 * @param url
 * @param form_id
 */
function post_remote(url, form_id) {
    $.ajax({
        type: 'post',
        async: true,
        url: url,
        data: $('#' + form_id).serializeArray(),
        dataType: 'js',
        success: function (js) {
            eval(js);
        }
    })
}


function iframeAutoFit(minHeight) {

    try {
        if (window != parent && $(".page-current .content").length > 0) {
            $(".tab-link").on("click", function () {
                setTimeout(function () {
                    iframe_set_height(minHeight);
                }, 100)
            });
            iframe_set_height(minHeight);
        }
    }
    catch (ex) {
    }
}
function iframe_set_height(minHeight) {
    var a = parent.document.getElementsByTagName("IFRAME");
    for (var i = 0; i < a.length; i++) //author:meizz
    {
        if (a[i].contentWindow == window) {
            var h1 = 0, h2 = 0;
            a[i].parentNode.style.height = a[i].offsetHeight + "px";
            a[i].style.height = "10px";
//                    if (document.documentElement && document.documentElement.scrollHeight) {
//                        h1 = document.documentElement.scrollHeight;
//                    }
//                    if (document.body) h2 = document.body.scrollHeight;
//
//                    var h = Math.max(h1, h2);
            var h = $(".page-current .content")[0].scrollHeight + 10;
            if (document.all) {
                h += 4;
            }
            if (window.opera) {
                h += 1;
            }
            if (h <= 4) {
                setTimeout("iframeAutoFit();", 500);
                break;
            }
            if (minHeight && h < minHeight) h = minHeight;
            a[i].style.height = a[i].parentNode.style.height = h + "px";
        }
    }
}
//$(document).ready(function(){
//    $(window).on("popstate",function(){
//        alert($('#back_url').val());
//        if($('#back_url').val()){
//
//        }
//    })
//});


var send_validate_code = function (e, validate_form_url) {
    $this = $(e);
    var mobile = $('#mobile_id').val();
    if (!(/^1[0-9]{10}$/.test(mobile))) {
        alert("请输入正确的手机号");
        return;
    }
    $('#reg_validate_code_receiver_id').val(mobile);
    $('#reg_validate_code_type_id').val('sms');
    $.ajax({
        type: 'post',
        url: validate_form_url,
        data: $("#new_reg_validate_code_id").serializeArray(),
        dataType: 'js',
        success: function () {
            reckon_timing($this);
        },
        error: function () {
            // alert("异常错误");
        }
    });
};


var send_validate_code_form = function (e) {
    $this = $(e);
    var mobile = $('#mobile_id').val();
    if (!(/^1[0-9]{10}$/.test(mobile))) {
        alert("请输入正确的手机号");
        return;
    }
    $("#new_reg_validate_code_id input[name='validate_code[receiver]']").val(mobile);
    $("#new_reg_validate_code_id input[name='validate_code[send_type]']").val('sms');
    $("#new_reg_validate_code_id").submit();
};


//计时
var reckon_timing = function ($e) {
    var wait = 60;
    $e.html("未接到短信？(" + wait + ")秒后获取语音验证码");
    $e.removeAttr('onclick');
    var stop_code = setInterval(function () {
        wait--;
        if (wait === 0) {
            $e.attr('onclick', 'getVoiceCode(this)');
            $e.html("未接到短信？获取语音验证码");
            wait = 60;
            return clearInterval(stop_code);
        } else {
            $e.html("未接到短信？(" + wait + ")秒后获取语音验证码");
        }
    }, 1000);
};

//获取语音验证码
var getVoiceCode = function (e) {
    var mobile = $('#mobile_id').val();
    if (!(/^1[0-9]{10}$/.test(mobile))) {
        alert("请输入正确的手机号");
        return;
    }
    $("#new_reg_validate_code_id input[name='validate_code[receiver]']").val(mobile);
    $("#new_reg_validate_code_id input[name='validate_code[send_type]']").val('voice');
    $("#new_reg_validate_code_id").submit();
};
function submit_form(form_id) {
    var mobile = $('#mobile_id').val();
    if (!(/^1[0-9]{10}$/.test(mobile))) {
        alert("请输入正确的手机号");
        return;
    }
    var validate_code = $('#validate_code_id').val();
    if (validate_code == '') {
        alert('请输入验证码');
        $('#validate_code_id').focus();
    } else {
        $('#' + form_id).submit();
    }

}

function remaining_time(id_suffix, second_time, text) {
    if (second_time > new Date().getTime() / 1000) {
        var timestamp = second_time - new Date().getTime() / 1000;
        var time_text = '';
        if (parseInt(timestamp / 60 / 60 / 24) > 0) time_text += parseInt(timestamp / 60 / 60 / 24) + "天";
        if (parseInt(timestamp / 60 / 60) > 0) time_text += parseInt(timestamp / 60 / 60 % 24) + "小时";
        if (parseInt(timestamp / 60) > 0) time_text += parseInt(timestamp / 60 % 60) + "分";
        if (parseInt(timestamp) >= 0) {
            time_text += parseInt(timestamp % 60) + "秒";
            $("#show_remaining_time_" + id_suffix).html(time_text + text);
        }
    }
    var stop = setInterval(function () {
        if (second_time > new Date().getTime() / 1000) {
            var timestamp = second_time - new Date().getTime() / 1000;
            var time_text = '';
            if (parseInt(timestamp / 60 / 60 / 24) > 0) time_text += parseInt(timestamp / 60 / 60 / 24) + "天";
            if (parseInt(timestamp / 60 / 60) > 0) time_text += parseInt(timestamp / 60 / 60 % 24) + "小时";
            if (parseInt(timestamp / 60) > 0) time_text += parseInt(timestamp / 60 % 60) + "分";
            if (parseInt(timestamp) >= 0) {
                time_text += parseInt(timestamp % 60) + "秒";
                $("#show_remaining_time_" + id_suffix).html(time_text + text);
            } else {
                clearInterval(stop);
            }
        } else {
            clearInterval(stop);
        }

    }, 1000);
}

function textarea_auto_height() {
    $(".textarea-div .item-content textarea").on('input', function () {
        this.style.height = 'auto';
        this.style.height = this.scrollHeight + "px";
    })
}

// 答赏详情相关 函数

//点击图片展示大图
function show_big_img(img_url){
    $('#post_zoom_img .list-block').html(
        '<img src="'+img_url+'" style="width: 100%;">'
    );
    $.popup('#post_zoom_img');
}
;
/**
 * Created by skgc on 16/4/26.
 */












//    var charts_tag = document.createElement('script');
//    charts_tag.type = 'text/javascript';
//    charts_tag.async = true;
//    charts_tag.charset = 'utf-8';
//    charts_tag.src = 'http://v3.jiathis.com/code/jia.js?uid=1632713';
//    var root_s = document.getElementsByTagName('script')[0];
//    root_s.parentNode.insertBefore(charts_tag, root_s);
